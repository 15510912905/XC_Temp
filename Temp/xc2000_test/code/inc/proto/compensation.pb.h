// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compensation.proto

#ifndef PROTOBUF_compensation_2eproto__INCLUDED
#define PROTOBUF_compensation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_compensation_2eproto();
void protobuf_AssignDesc_compensation_2eproto();
void protobuf_ShutdownFile_compensation_2eproto();

class CBackLog;
class CServerPort;
class CAlarmInfo;
class CAlarmList;
class CCompInfo;
class CMcu;
class CMcuList;

// ===================================================================

class CBackLog : public ::google::protobuf::Message {
 public:
  CBackLog();
  virtual ~CBackLog();

  CBackLog(const CBackLog& from);

  inline CBackLog& operator=(const CBackLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CBackLog& default_instance();

  void Swap(CBackLog* other);

  // implements Message ----------------------------------------------

  CBackLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CBackLog& from);
  void MergeFrom(const CBackLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiLogBackTime = 1;
  inline bool has_uilogbacktime() const;
  inline void clear_uilogbacktime();
  static const int kUiLogBackTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 uilogbacktime() const;
  inline void set_uilogbacktime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CBackLog)
 private:
  inline void set_has_uilogbacktime();
  inline void clear_has_uilogbacktime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uilogbacktime_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CBackLog* default_instance_;
};
// -------------------------------------------------------------------

class CServerPort : public ::google::protobuf::Message {
 public:
  CServerPort();
  virtual ~CServerPort();

  CServerPort(const CServerPort& from);

  inline CServerPort& operator=(const CServerPort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CServerPort& default_instance();

  void Swap(CServerPort* other);

  // implements Message ----------------------------------------------

  CServerPort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CServerPort& from);
  void MergeFrom(const CServerPort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiport = 1;
  inline bool has_uiport() const;
  inline void clear_uiport();
  static const int kUiportFieldNumber = 1;
  inline ::google::protobuf::uint32 uiport() const;
  inline void set_uiport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CServerPort)
 private:
  inline void set_has_uiport();
  inline void clear_has_uiport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uiport_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CServerPort* default_instance_;
};
// -------------------------------------------------------------------

class CAlarmInfo : public ::google::protobuf::Message {
 public:
  CAlarmInfo();
  virtual ~CAlarmInfo();

  CAlarmInfo(const CAlarmInfo& from);

  inline CAlarmInfo& operator=(const CAlarmInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAlarmInfo& default_instance();

  void Swap(CAlarmInfo* other);

  // implements Message ----------------------------------------------

  CAlarmInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAlarmInfo& from);
  void MergeFrom(const CAlarmInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ulAlarmId = 1;
  inline bool has_ulalarmid() const;
  inline void clear_ulalarmid();
  static const int kUlAlarmIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ulalarmid() const;
  inline void set_ulalarmid(::google::protobuf::uint32 value);

  // optional uint32 ulAlarmLevel = 2;
  inline bool has_ulalarmlevel() const;
  inline void clear_ulalarmlevel();
  static const int kUlAlarmLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 ulalarmlevel() const;
  inline void set_ulalarmlevel(::google::protobuf::uint32 value);

  // optional bool bBootFilter = 3;
  inline bool has_bbootfilter() const;
  inline void clear_bbootfilter();
  static const int kBBootFilterFieldNumber = 3;
  inline bool bbootfilter() const;
  inline void set_bbootfilter(bool value);

  // optional uint32 ulAfterTreatWay = 4;
  inline bool has_ulaftertreatway() const;
  inline void clear_ulaftertreatway();
  static const int kUlAfterTreatWayFieldNumber = 4;
  inline ::google::protobuf::uint32 ulaftertreatway() const;
  inline void set_ulaftertreatway(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAlarmInfo)
 private:
  inline void set_has_ulalarmid();
  inline void clear_has_ulalarmid();
  inline void set_has_ulalarmlevel();
  inline void clear_has_ulalarmlevel();
  inline void set_has_bbootfilter();
  inline void clear_has_bbootfilter();
  inline void set_has_ulaftertreatway();
  inline void clear_has_ulaftertreatway();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ulalarmid_;
  ::google::protobuf::uint32 ulalarmlevel_;
  bool bbootfilter_;
  ::google::protobuf::uint32 ulaftertreatway_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CAlarmInfo* default_instance_;
};
// -------------------------------------------------------------------

class CAlarmList : public ::google::protobuf::Message {
 public:
  CAlarmList();
  virtual ~CAlarmList();

  CAlarmList(const CAlarmList& from);

  inline CAlarmList& operator=(const CAlarmList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAlarmList& default_instance();

  void Swap(CAlarmList* other);

  // implements Message ----------------------------------------------

  CAlarmList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAlarmList& from);
  void MergeFrom(const CAlarmList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CAlarmInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::CAlarmInfo& data(int index) const;
  inline ::CAlarmInfo* mutable_data(int index);
  inline ::CAlarmInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::CAlarmInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::CAlarmInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:CAlarmList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CAlarmInfo > data_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CAlarmList* default_instance_;
};
// -------------------------------------------------------------------

class CCompInfo : public ::google::protobuf::Message {
 public:
  CCompInfo();
  virtual ~CCompInfo();

  CCompInfo(const CCompInfo& from);

  inline CCompInfo& operator=(const CCompInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCompInfo& default_instance();

  void Swap(CCompInfo* other);

  // implements Message ----------------------------------------------

  CCompInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCompInfo& from);
  void MergeFrom(const CCompInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location = 1;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 1;
  inline ::google::protobuf::uint32 location() const;
  inline void set_location(::google::protobuf::uint32 value);

  // optional uint32 dir = 2;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 2;
  inline ::google::protobuf::uint32 dir() const;
  inline void set_dir(::google::protobuf::uint32 value);

  // optional uint32 step = 3;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 3;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCompInfo)
 private:
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 dir_;
  ::google::protobuf::uint32 step_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CCompInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMcu : public ::google::protobuf::Message {
 public:
  CMcu();
  virtual ~CMcu();

  CMcu(const CMcu& from);

  inline CMcu& operator=(const CMcu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMcu& default_instance();

  void Swap(CMcu* other);

  // implements Message ----------------------------------------------

  CMcu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMcu& from);
  void MergeFrom(const CMcu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 subsysid = 1;
  inline bool has_subsysid() const;
  inline void clear_subsysid();
  static const int kSubsysidFieldNumber = 1;
  inline ::google::protobuf::uint32 subsysid() const;
  inline void set_subsysid(::google::protobuf::uint32 value);

  // optional uint32 comptype = 2;
  inline bool has_comptype() const;
  inline void clear_comptype();
  static const int kComptypeFieldNumber = 2;
  inline ::google::protobuf::uint32 comptype() const;
  inline void set_comptype(::google::protobuf::uint32 value);

  // repeated .CCompInfo comps = 3;
  inline int comps_size() const;
  inline void clear_comps();
  static const int kCompsFieldNumber = 3;
  inline const ::CCompInfo& comps(int index) const;
  inline ::CCompInfo* mutable_comps(int index);
  inline ::CCompInfo* add_comps();
  inline const ::google::protobuf::RepeatedPtrField< ::CCompInfo >&
      comps() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCompInfo >*
      mutable_comps();

  // @@protoc_insertion_point(class_scope:CMcu)
 private:
  inline void set_has_subsysid();
  inline void clear_has_subsysid();
  inline void set_has_comptype();
  inline void clear_has_comptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 subsysid_;
  ::google::protobuf::uint32 comptype_;
  ::google::protobuf::RepeatedPtrField< ::CCompInfo > comps_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CMcu* default_instance_;
};
// -------------------------------------------------------------------

class CMcuList : public ::google::protobuf::Message {
 public:
  CMcuList();
  virtual ~CMcuList();

  CMcuList(const CMcuList& from);

  inline CMcuList& operator=(const CMcuList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMcuList& default_instance();

  void Swap(CMcuList* other);

  // implements Message ----------------------------------------------

  CMcuList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMcuList& from);
  void MergeFrom(const CMcuList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMcu data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::CMcu& data(int index) const;
  inline ::CMcu* mutable_data(int index);
  inline ::CMcu* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::CMcu >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMcu >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:CMcuList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMcu > data_;
  friend void  protobuf_AddDesc_compensation_2eproto();
  friend void protobuf_AssignDesc_compensation_2eproto();
  friend void protobuf_ShutdownFile_compensation_2eproto();

  void InitAsDefaultInstance();
  static CMcuList* default_instance_;
};
// ===================================================================


// ===================================================================

// CBackLog

// optional uint32 uiLogBackTime = 1;
inline bool CBackLog::has_uilogbacktime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CBackLog::set_has_uilogbacktime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CBackLog::clear_has_uilogbacktime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CBackLog::clear_uilogbacktime() {
  uilogbacktime_ = 0u;
  clear_has_uilogbacktime();
}
inline ::google::protobuf::uint32 CBackLog::uilogbacktime() const {
  // @@protoc_insertion_point(field_get:CBackLog.uiLogBackTime)
  return uilogbacktime_;
}
inline void CBackLog::set_uilogbacktime(::google::protobuf::uint32 value) {
  set_has_uilogbacktime();
  uilogbacktime_ = value;
  // @@protoc_insertion_point(field_set:CBackLog.uiLogBackTime)
}

// -------------------------------------------------------------------

// CServerPort

// optional uint32 uiport = 1;
inline bool CServerPort::has_uiport() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CServerPort::set_has_uiport() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CServerPort::clear_has_uiport() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CServerPort::clear_uiport() {
  uiport_ = 0u;
  clear_has_uiport();
}
inline ::google::protobuf::uint32 CServerPort::uiport() const {
  // @@protoc_insertion_point(field_get:CServerPort.uiport)
  return uiport_;
}
inline void CServerPort::set_uiport(::google::protobuf::uint32 value) {
  set_has_uiport();
  uiport_ = value;
  // @@protoc_insertion_point(field_set:CServerPort.uiport)
}

// -------------------------------------------------------------------

// CAlarmInfo

// optional uint32 ulAlarmId = 1;
inline bool CAlarmInfo::has_ulalarmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAlarmInfo::set_has_ulalarmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAlarmInfo::clear_has_ulalarmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAlarmInfo::clear_ulalarmid() {
  ulalarmid_ = 0u;
  clear_has_ulalarmid();
}
inline ::google::protobuf::uint32 CAlarmInfo::ulalarmid() const {
  // @@protoc_insertion_point(field_get:CAlarmInfo.ulAlarmId)
  return ulalarmid_;
}
inline void CAlarmInfo::set_ulalarmid(::google::protobuf::uint32 value) {
  set_has_ulalarmid();
  ulalarmid_ = value;
  // @@protoc_insertion_point(field_set:CAlarmInfo.ulAlarmId)
}

// optional uint32 ulAlarmLevel = 2;
inline bool CAlarmInfo::has_ulalarmlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAlarmInfo::set_has_ulalarmlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAlarmInfo::clear_has_ulalarmlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAlarmInfo::clear_ulalarmlevel() {
  ulalarmlevel_ = 0u;
  clear_has_ulalarmlevel();
}
inline ::google::protobuf::uint32 CAlarmInfo::ulalarmlevel() const {
  // @@protoc_insertion_point(field_get:CAlarmInfo.ulAlarmLevel)
  return ulalarmlevel_;
}
inline void CAlarmInfo::set_ulalarmlevel(::google::protobuf::uint32 value) {
  set_has_ulalarmlevel();
  ulalarmlevel_ = value;
  // @@protoc_insertion_point(field_set:CAlarmInfo.ulAlarmLevel)
}

// optional bool bBootFilter = 3;
inline bool CAlarmInfo::has_bbootfilter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAlarmInfo::set_has_bbootfilter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAlarmInfo::clear_has_bbootfilter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAlarmInfo::clear_bbootfilter() {
  bbootfilter_ = false;
  clear_has_bbootfilter();
}
inline bool CAlarmInfo::bbootfilter() const {
  // @@protoc_insertion_point(field_get:CAlarmInfo.bBootFilter)
  return bbootfilter_;
}
inline void CAlarmInfo::set_bbootfilter(bool value) {
  set_has_bbootfilter();
  bbootfilter_ = value;
  // @@protoc_insertion_point(field_set:CAlarmInfo.bBootFilter)
}

// optional uint32 ulAfterTreatWay = 4;
inline bool CAlarmInfo::has_ulaftertreatway() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAlarmInfo::set_has_ulaftertreatway() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAlarmInfo::clear_has_ulaftertreatway() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAlarmInfo::clear_ulaftertreatway() {
  ulaftertreatway_ = 0u;
  clear_has_ulaftertreatway();
}
inline ::google::protobuf::uint32 CAlarmInfo::ulaftertreatway() const {
  // @@protoc_insertion_point(field_get:CAlarmInfo.ulAfterTreatWay)
  return ulaftertreatway_;
}
inline void CAlarmInfo::set_ulaftertreatway(::google::protobuf::uint32 value) {
  set_has_ulaftertreatway();
  ulaftertreatway_ = value;
  // @@protoc_insertion_point(field_set:CAlarmInfo.ulAfterTreatWay)
}

// -------------------------------------------------------------------

// CAlarmList

// repeated .CAlarmInfo data = 1;
inline int CAlarmList::data_size() const {
  return data_.size();
}
inline void CAlarmList::clear_data() {
  data_.Clear();
}
inline const ::CAlarmInfo& CAlarmList::data(int index) const {
  // @@protoc_insertion_point(field_get:CAlarmList.data)
  return data_.Get(index);
}
inline ::CAlarmInfo* CAlarmList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CAlarmList.data)
  return data_.Mutable(index);
}
inline ::CAlarmInfo* CAlarmList::add_data() {
  // @@protoc_insertion_point(field_add:CAlarmList.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CAlarmInfo >&
CAlarmList::data() const {
  // @@protoc_insertion_point(field_list:CAlarmList.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::CAlarmInfo >*
CAlarmList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CAlarmList.data)
  return &data_;
}

// -------------------------------------------------------------------

// CCompInfo

// optional uint32 location = 1;
inline bool CCompInfo::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCompInfo::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCompInfo::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCompInfo::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 CCompInfo::location() const {
  // @@protoc_insertion_point(field_get:CCompInfo.location)
  return location_;
}
inline void CCompInfo::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:CCompInfo.location)
}

// optional uint32 dir = 2;
inline bool CCompInfo::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCompInfo::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCompInfo::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCompInfo::clear_dir() {
  dir_ = 0u;
  clear_has_dir();
}
inline ::google::protobuf::uint32 CCompInfo::dir() const {
  // @@protoc_insertion_point(field_get:CCompInfo.dir)
  return dir_;
}
inline void CCompInfo::set_dir(::google::protobuf::uint32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:CCompInfo.dir)
}

// optional uint32 step = 3;
inline bool CCompInfo::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCompInfo::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCompInfo::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCompInfo::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 CCompInfo::step() const {
  // @@protoc_insertion_point(field_get:CCompInfo.step)
  return step_;
}
inline void CCompInfo::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:CCompInfo.step)
}

// -------------------------------------------------------------------

// CMcu

// optional uint32 subsysid = 1;
inline bool CMcu::has_subsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMcu::set_has_subsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMcu::clear_has_subsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMcu::clear_subsysid() {
  subsysid_ = 0u;
  clear_has_subsysid();
}
inline ::google::protobuf::uint32 CMcu::subsysid() const {
  // @@protoc_insertion_point(field_get:CMcu.subsysid)
  return subsysid_;
}
inline void CMcu::set_subsysid(::google::protobuf::uint32 value) {
  set_has_subsysid();
  subsysid_ = value;
  // @@protoc_insertion_point(field_set:CMcu.subsysid)
}

// optional uint32 comptype = 2;
inline bool CMcu::has_comptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMcu::set_has_comptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMcu::clear_has_comptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMcu::clear_comptype() {
  comptype_ = 0u;
  clear_has_comptype();
}
inline ::google::protobuf::uint32 CMcu::comptype() const {
  // @@protoc_insertion_point(field_get:CMcu.comptype)
  return comptype_;
}
inline void CMcu::set_comptype(::google::protobuf::uint32 value) {
  set_has_comptype();
  comptype_ = value;
  // @@protoc_insertion_point(field_set:CMcu.comptype)
}

// repeated .CCompInfo comps = 3;
inline int CMcu::comps_size() const {
  return comps_.size();
}
inline void CMcu::clear_comps() {
  comps_.Clear();
}
inline const ::CCompInfo& CMcu::comps(int index) const {
  // @@protoc_insertion_point(field_get:CMcu.comps)
  return comps_.Get(index);
}
inline ::CCompInfo* CMcu::mutable_comps(int index) {
  // @@protoc_insertion_point(field_mutable:CMcu.comps)
  return comps_.Mutable(index);
}
inline ::CCompInfo* CMcu::add_comps() {
  // @@protoc_insertion_point(field_add:CMcu.comps)
  return comps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCompInfo >&
CMcu::comps() const {
  // @@protoc_insertion_point(field_list:CMcu.comps)
  return comps_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCompInfo >*
CMcu::mutable_comps() {
  // @@protoc_insertion_point(field_mutable_list:CMcu.comps)
  return &comps_;
}

// -------------------------------------------------------------------

// CMcuList

// repeated .CMcu data = 1;
inline int CMcuList::data_size() const {
  return data_.size();
}
inline void CMcuList::clear_data() {
  data_.Clear();
}
inline const ::CMcu& CMcuList::data(int index) const {
  // @@protoc_insertion_point(field_get:CMcuList.data)
  return data_.Get(index);
}
inline ::CMcu* CMcuList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMcuList.data)
  return data_.Mutable(index);
}
inline ::CMcu* CMcuList::add_data() {
  // @@protoc_insertion_point(field_add:CMcuList.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMcu >&
CMcuList::data() const {
  // @@protoc_insertion_point(field_list:CMcuList.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMcu >*
CMcuList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:CMcuList.data)
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_compensation_2eproto__INCLUDED
