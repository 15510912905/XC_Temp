// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: upmsg.proto

#ifndef PROTOBUF_upmsg_2eproto__INCLUDED
#define PROTOBUF_upmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "upmsgstruct.pb.h"
#include "typedefine.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_upmsg_2eproto();
void protobuf_AssignDesc_upmsg_2eproto();
void protobuf_ShutdownFile_upmsg_2eproto();

class STMotorPara;
class STSubSysMotor;
class STMotorList;
class STReqReset;
class STReqAddLiquid;
class STResResult;
class STReqAddTask;
class STResAddTask;
class STNotifyRctCupStatus;
class STReqMarginScan;
class STResMarginScan;
class STReqAirOut;
class STReqIntensifyWash;
class STReqBarcodeScan;
class STResBarcodeScan;
class STReqReagentSuspend;
class STNotifyReagInfo;
class STReagChangeInfo;
class STReagChangeInfoList;
class STNotifyMachineStatus;
class STNotifyConnect;
class STReqLightCheck;
class STNotifyADValue;
class STReqSkipCup;
class STReqActCmd;
class STNotifyOffset;
class STNotifyTimer;
class STReqSetTime;
class STReqPreciseAdd;
class STReqDarkCurrentTest;
class STResDarkCurrentTest;
class STNotifyTemp;
class STGetMidLog;
class STCollideNdlConfig;
class STVersions;
class STNotifyFailedSmpTask;
class CCompSetRes;
class CNotifyAlarm;
class CNotifyAlarmList;
class CTemperatureQuery;
class CDwnUpdate;
class CDwnUpdateRes;
class STReqSmoothAreaTest;
class STResSmoothAreaTest;
class STReqShowWave;
class STResShowWave;
class STReqConnectPort;
class STReqShowAD;
class STSwitch;
class STTestAD;
class STFLxState;
class STLog;
class STSound;
class RegPollution;
class STReqRegPollution;
class SmpPollution;
class STReqSmpPollution;
class BeepAlarm;
class STReqBeepAlarm;
class BloodAbsorbMode;
class RctPollution;
class STRCtRegPollution;
class STConsum;
class STTempPara;
class STShelfMng;
class STFreeShelf;
class STSetShelf;
class STNotifState;
class STTempQuery;

// ===================================================================

class STMotorPara : public ::google::protobuf::Message {
 public:
  STMotorPara();
  virtual ~STMotorPara();

  STMotorPara(const STMotorPara& from);

  inline STMotorPara& operator=(const STMotorPara& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STMotorPara& default_instance();

  void Swap(STMotorPara* other);

  // implements Message ----------------------------------------------

  STMotorPara* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STMotorPara& from);
  void MergeFrom(const STMotorPara& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiDrvId = 1;
  inline bool has_uidrvid() const;
  inline void clear_uidrvid();
  static const int kUiDrvIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uidrvid() const;
  inline void set_uidrvid(::google::protobuf::uint32 value);

  // optional uint32 uiLineId = 2;
  inline bool has_uilineid() const;
  inline void clear_uilineid();
  static const int kUiLineIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uilineid() const;
  inline void set_uilineid(::google::protobuf::uint32 value);

  // optional uint32 uiStartFre = 3;
  inline bool has_uistartfre() const;
  inline void clear_uistartfre();
  static const int kUiStartFreFieldNumber = 3;
  inline ::google::protobuf::uint32 uistartfre() const;
  inline void set_uistartfre(::google::protobuf::uint32 value);

  // optional uint32 uiEndFre = 4;
  inline bool has_uiendfre() const;
  inline void clear_uiendfre();
  static const int kUiEndFreFieldNumber = 4;
  inline ::google::protobuf::uint32 uiendfre() const;
  inline void set_uiendfre(::google::protobuf::uint32 value);

  // optional uint32 uiEchStep = 5;
  inline bool has_uiechstep() const;
  inline void clear_uiechstep();
  static const int kUiEchStepFieldNumber = 5;
  inline ::google::protobuf::uint32 uiechstep() const;
  inline void set_uiechstep(::google::protobuf::uint32 value);

  // optional uint32 uiMaxLadder = 6;
  inline bool has_uimaxladder() const;
  inline void clear_uimaxladder();
  static const int kUiMaxLadderFieldNumber = 6;
  inline ::google::protobuf::uint32 uimaxladder() const;
  inline void set_uimaxladder(::google::protobuf::uint32 value);

  // optional uint32 uiSpar = 7;
  inline bool has_uispar() const;
  inline void clear_uispar();
  static const int kUiSparFieldNumber = 7;
  inline ::google::protobuf::uint32 uispar() const;
  inline void set_uispar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STMotorPara)
 private:
  inline void set_has_uidrvid();
  inline void clear_has_uidrvid();
  inline void set_has_uilineid();
  inline void clear_has_uilineid();
  inline void set_has_uistartfre();
  inline void clear_has_uistartfre();
  inline void set_has_uiendfre();
  inline void clear_has_uiendfre();
  inline void set_has_uiechstep();
  inline void clear_has_uiechstep();
  inline void set_has_uimaxladder();
  inline void clear_has_uimaxladder();
  inline void set_has_uispar();
  inline void clear_has_uispar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uidrvid_;
  ::google::protobuf::uint32 uilineid_;
  ::google::protobuf::uint32 uistartfre_;
  ::google::protobuf::uint32 uiendfre_;
  ::google::protobuf::uint32 uiechstep_;
  ::google::protobuf::uint32 uimaxladder_;
  ::google::protobuf::uint32 uispar_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STMotorPara* default_instance_;
};
// -------------------------------------------------------------------

class STSubSysMotor : public ::google::protobuf::Message {
 public:
  STSubSysMotor();
  virtual ~STSubSysMotor();

  STSubSysMotor(const STSubSysMotor& from);

  inline STSubSysMotor& operator=(const STSubSysMotor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STSubSysMotor& default_instance();

  void Swap(STSubSysMotor* other);

  // implements Message ----------------------------------------------

  STSubSysMotor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STSubSysMotor& from);
  void MergeFrom(const STSubSysMotor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSysId = 1;
  inline bool has_uisysid() const;
  inline void clear_uisysid();
  static const int kUiSysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisysid() const;
  inline void set_uisysid(::google::protobuf::uint32 value);

  // repeated .STMotorPara stPara = 2;
  inline int stpara_size() const;
  inline void clear_stpara();
  static const int kStParaFieldNumber = 2;
  inline const ::STMotorPara& stpara(int index) const;
  inline ::STMotorPara* mutable_stpara(int index);
  inline ::STMotorPara* add_stpara();
  inline const ::google::protobuf::RepeatedPtrField< ::STMotorPara >&
      stpara() const;
  inline ::google::protobuf::RepeatedPtrField< ::STMotorPara >*
      mutable_stpara();

  // @@protoc_insertion_point(class_scope:STSubSysMotor)
 private:
  inline void set_has_uisysid();
  inline void clear_has_uisysid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STMotorPara > stpara_;
  ::google::protobuf::uint32 uisysid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STSubSysMotor* default_instance_;
};
// -------------------------------------------------------------------

class STMotorList : public ::google::protobuf::Message {
 public:
  STMotorList();
  virtual ~STMotorList();

  STMotorList(const STMotorList& from);

  inline STMotorList& operator=(const STMotorList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STMotorList& default_instance();

  void Swap(STMotorList* other);

  // implements Message ----------------------------------------------

  STMotorList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STMotorList& from);
  void MergeFrom(const STMotorList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STSubSysMotor data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::STSubSysMotor& data(int index) const;
  inline ::STSubSysMotor* mutable_data(int index);
  inline ::STSubSysMotor* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::STSubSysMotor >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::STSubSysMotor >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:STMotorList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STSubSysMotor > data_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STMotorList* default_instance_;
};
// -------------------------------------------------------------------

class STReqReset : public ::google::protobuf::Message {
 public:
  STReqReset();
  virtual ~STReqReset();

  STReqReset(const STReqReset& from);

  inline STReqReset& operator=(const STReqReset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqReset& default_instance();

  void Swap(STReqReset* other);

  // implements Message ----------------------------------------------

  STReqReset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqReset& from);
  void MergeFrom(const STReqReset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bUpper = 1;
  inline bool has_bupper() const;
  inline void clear_bupper();
  static const int kBUpperFieldNumber = 1;
  inline bool bupper() const;
  inline void set_bupper(bool value);

  // @@protoc_insertion_point(class_scope:STReqReset)
 private:
  inline void set_has_bupper();
  inline void clear_has_bupper();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool bupper_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqReset* default_instance_;
};
// -------------------------------------------------------------------

class STReqAddLiquid : public ::google::protobuf::Message {
 public:
  STReqAddLiquid();
  virtual ~STReqAddLiquid();

  STReqAddLiquid(const STReqAddLiquid& from);

  inline STReqAddLiquid& operator=(const STReqAddLiquid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqAddLiquid& default_instance();

  void Swap(STReqAddLiquid* other);

  // implements Message ----------------------------------------------

  STReqAddLiquid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqAddLiquid& from);
  void MergeFrom(const STReqAddLiquid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ServerPid enDevType = 1 [default = SPid_SmpNdl];
  inline bool has_endevtype() const;
  inline void clear_endevtype();
  static const int kEnDevTypeFieldNumber = 1;
  inline ::ServerPid endevtype() const;
  inline void set_endevtype(::ServerPid value);

  // optional uint32 uiCount = 2;
  inline bool has_uicount() const;
  inline void clear_uicount();
  static const int kUiCountFieldNumber = 2;
  inline ::google::protobuf::uint32 uicount() const;
  inline void set_uicount(::google::protobuf::uint32 value);

  // optional uint32 uiVolume = 3;
  inline bool has_uivolume() const;
  inline void clear_uivolume();
  static const int kUiVolumeFieldNumber = 3;
  inline ::google::protobuf::uint32 uivolume() const;
  inline void set_uivolume(::google::protobuf::uint32 value);

  // optional uint32 uiSpace = 4;
  inline bool has_uispace() const;
  inline void clear_uispace();
  static const int kUiSpaceFieldNumber = 4;
  inline ::google::protobuf::uint32 uispace() const;
  inline void set_uispace(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqAddLiquid)
 private:
  inline void set_has_endevtype();
  inline void clear_has_endevtype();
  inline void set_has_uicount();
  inline void clear_has_uicount();
  inline void set_has_uivolume();
  inline void clear_has_uivolume();
  inline void set_has_uispace();
  inline void clear_has_uispace();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int endevtype_;
  ::google::protobuf::uint32 uicount_;
  ::google::protobuf::uint32 uivolume_;
  ::google::protobuf::uint32 uispace_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqAddLiquid* default_instance_;
};
// -------------------------------------------------------------------

class STResResult : public ::google::protobuf::Message {
 public:
  STResResult();
  virtual ~STResResult();

  STResResult(const STResResult& from);

  inline STResResult& operator=(const STResResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResResult& default_instance();

  void Swap(STResResult* other);

  // implements Message ----------------------------------------------

  STResResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResResult& from);
  void MergeFrom(const STResResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiResult = 1;
  inline bool has_uiresult() const;
  inline void clear_uiresult();
  static const int kUiResultFieldNumber = 1;
  inline ::google::protobuf::uint32 uiresult() const;
  inline void set_uiresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STResResult)
 private:
  inline void set_has_uiresult();
  inline void clear_has_uiresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uiresult_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResResult* default_instance_;
};
// -------------------------------------------------------------------

class STReqAddTask : public ::google::protobuf::Message {
 public:
  STReqAddTask();
  virtual ~STReqAddTask();

  STReqAddTask(const STReqAddTask& from);

  inline STReqAddTask& operator=(const STReqAddTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqAddTask& default_instance();

  void Swap(STReqAddTask* other);

  // implements Message ----------------------------------------------

  STReqAddTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqAddTask& from);
  void MergeFrom(const STReqAddTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTaskId = 1;
  inline bool has_uitaskid() const;
  inline void clear_uitaskid();
  static const int kUiTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uitaskid() const;
  inline void set_uitaskid(::google::protobuf::uint32 value);

  // optional uint32 uiSmpType = 2;
  inline bool has_uismptype() const;
  inline void clear_uismptype();
  static const int kUiSmpTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uismptype() const;
  inline void set_uismptype(::google::protobuf::uint32 value);

  // optional uint32 uiMaintanType = 3;
  inline bool has_uimaintantype() const;
  inline void clear_uimaintantype();
  static const int kUiMaintanTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 uimaintantype() const;
  inline void set_uimaintantype(::google::protobuf::uint32 value);

  // optional bytes strProjectName = 4;
  inline bool has_strprojectname() const;
  inline void clear_strprojectname();
  static const int kStrProjectNameFieldNumber = 4;
  inline const ::std::string& strprojectname() const;
  inline void set_strprojectname(const ::std::string& value);
  inline void set_strprojectname(const char* value);
  inline void set_strprojectname(const void* value, size_t size);
  inline ::std::string* mutable_strprojectname();
  inline ::std::string* release_strprojectname();
  inline void set_allocated_strprojectname(::std::string* strprojectname);

  // repeated .STKeyValue stWaveChs = 5;
  inline int stwavechs_size() const;
  inline void clear_stwavechs();
  static const int kStWaveChsFieldNumber = 5;
  inline const ::STKeyValue& stwavechs(int index) const;
  inline ::STKeyValue* mutable_stwavechs(int index);
  inline ::STKeyValue* add_stwavechs();
  inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
      stwavechs() const;
  inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
      mutable_stwavechs();

  // optional .STLiquidInfo stSmpInfo = 6;
  inline bool has_stsmpinfo() const;
  inline void clear_stsmpinfo();
  static const int kStSmpInfoFieldNumber = 6;
  inline const ::STLiquidInfo& stsmpinfo() const;
  inline ::STLiquidInfo* mutable_stsmpinfo();
  inline ::STLiquidInfo* release_stsmpinfo();
  inline void set_allocated_stsmpinfo(::STLiquidInfo* stsmpinfo);

  // repeated .STLiquidInfo stReagents = 7;
  inline int streagents_size() const;
  inline void clear_streagents();
  static const int kStReagentsFieldNumber = 7;
  inline const ::STLiquidInfo& streagents(int index) const;
  inline ::STLiquidInfo* mutable_streagents(int index);
  inline ::STLiquidInfo* add_streagents();
  inline const ::google::protobuf::RepeatedPtrField< ::STLiquidInfo >&
      streagents() const;
  inline ::google::protobuf::RepeatedPtrField< ::STLiquidInfo >*
      mutable_streagents();

  // optional uint32 uiTestPoint = 8;
  inline bool has_uitestpoint() const;
  inline void clear_uitestpoint();
  static const int kUiTestPointFieldNumber = 8;
  inline ::google::protobuf::uint32 uitestpoint() const;
  inline void set_uitestpoint(::google::protobuf::uint32 value);

  // optional uint32 uiDiluentVol = 9;
  inline bool has_uidiluentvol() const;
  inline void clear_uidiluentvol();
  static const int kUiDiluentVolFieldNumber = 9;
  inline ::google::protobuf::uint32 uidiluentvol() const;
  inline void set_uidiluentvol(::google::protobuf::uint32 value);

  // optional uint32 uiLiquidVol = 10;
  inline bool has_uiliquidvol() const;
  inline void clear_uiliquidvol();
  static const int kUiLiquidVolFieldNumber = 10;
  inline ::google::protobuf::uint32 uiliquidvol() const;
  inline void set_uiliquidvol(::google::protobuf::uint32 value);

  // optional uint32 uiSmpId = 11;
  inline bool has_uismpid() const;
  inline void clear_uismpid();
  static const int kUiSmpIdFieldNumber = 11;
  inline ::google::protobuf::uint32 uismpid() const;
  inline void set_uismpid(::google::protobuf::uint32 value);

  // optional uint32 uiBatchId = 12;
  inline bool has_uibatchid() const;
  inline void clear_uibatchid();
  static const int kUiBatchIdFieldNumber = 12;
  inline ::google::protobuf::uint32 uibatchid() const;
  inline void set_uibatchid(::google::protobuf::uint32 value);

  // optional .ReactCircle enCircle = 13 [default = Circle_All];
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 13;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // @@protoc_insertion_point(class_scope:STReqAddTask)
 private:
  inline void set_has_uitaskid();
  inline void clear_has_uitaskid();
  inline void set_has_uismptype();
  inline void clear_has_uismptype();
  inline void set_has_uimaintantype();
  inline void clear_has_uimaintantype();
  inline void set_has_strprojectname();
  inline void clear_has_strprojectname();
  inline void set_has_stsmpinfo();
  inline void clear_has_stsmpinfo();
  inline void set_has_uitestpoint();
  inline void clear_has_uitestpoint();
  inline void set_has_uidiluentvol();
  inline void clear_has_uidiluentvol();
  inline void set_has_uiliquidvol();
  inline void clear_has_uiliquidvol();
  inline void set_has_uismpid();
  inline void clear_has_uismpid();
  inline void set_has_uibatchid();
  inline void clear_has_uibatchid();
  inline void set_has_encircle();
  inline void clear_has_encircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uitaskid_;
  ::google::protobuf::uint32 uismptype_;
  ::std::string* strprojectname_;
  ::google::protobuf::RepeatedPtrField< ::STKeyValue > stwavechs_;
  ::google::protobuf::uint32 uimaintantype_;
  ::google::protobuf::uint32 uitestpoint_;
  ::STLiquidInfo* stsmpinfo_;
  ::google::protobuf::RepeatedPtrField< ::STLiquidInfo > streagents_;
  ::google::protobuf::uint32 uidiluentvol_;
  ::google::protobuf::uint32 uiliquidvol_;
  ::google::protobuf::uint32 uismpid_;
  ::google::protobuf::uint32 uibatchid_;
  int encircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqAddTask* default_instance_;
};
// -------------------------------------------------------------------

class STResAddTask : public ::google::protobuf::Message {
 public:
  STResAddTask();
  virtual ~STResAddTask();

  STResAddTask(const STResAddTask& from);

  inline STResAddTask& operator=(const STResAddTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResAddTask& default_instance();

  void Swap(STResAddTask* other);

  // implements Message ----------------------------------------------

  STResAddTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResAddTask& from);
  void MergeFrom(const STResAddTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTaskId = 1;
  inline bool has_uitaskid() const;
  inline void clear_uitaskid();
  static const int kUiTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uitaskid() const;
  inline void set_uitaskid(::google::protobuf::uint32 value);

  // optional uint32 uiResult = 2;
  inline bool has_uiresult() const;
  inline void clear_uiresult();
  static const int kUiResultFieldNumber = 2;
  inline ::google::protobuf::uint32 uiresult() const;
  inline void set_uiresult(::google::protobuf::uint32 value);

  // optional uint32 uiMaintanType = 3;
  inline bool has_uimaintantype() const;
  inline void clear_uimaintantype();
  static const int kUiMaintanTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 uimaintantype() const;
  inline void set_uimaintantype(::google::protobuf::uint32 value);

  // optional uint32 uiRCupno = 4;
  inline bool has_uircupno() const;
  inline void clear_uircupno();
  static const int kUiRCupnoFieldNumber = 4;
  inline ::google::protobuf::uint32 uircupno() const;
  inline void set_uircupno(::google::protobuf::uint32 value);

  // optional bytes szPrjName = 5;
  inline bool has_szprjname() const;
  inline void clear_szprjname();
  static const int kSzPrjNameFieldNumber = 5;
  inline const ::std::string& szprjname() const;
  inline void set_szprjname(const ::std::string& value);
  inline void set_szprjname(const char* value);
  inline void set_szprjname(const void* value, size_t size);
  inline ::std::string* mutable_szprjname();
  inline ::std::string* release_szprjname();
  inline void set_allocated_szprjname(::std::string* szprjname);

  // repeated .STAdPoints stAdPoints = 6;
  inline int stadpoints_size() const;
  inline void clear_stadpoints();
  static const int kStAdPointsFieldNumber = 6;
  inline const ::STAdPoints& stadpoints(int index) const;
  inline ::STAdPoints* mutable_stadpoints(int index);
  inline ::STAdPoints* add_stadpoints();
  inline const ::google::protobuf::RepeatedPtrField< ::STAdPoints >&
      stadpoints() const;
  inline ::google::protobuf::RepeatedPtrField< ::STAdPoints >*
      mutable_stadpoints();

  // optional .STCupPos stSmpPos = 7;
  inline bool has_stsmppos() const;
  inline void clear_stsmppos();
  static const int kStSmpPosFieldNumber = 7;
  inline const ::STCupPos& stsmppos() const;
  inline ::STCupPos* mutable_stsmppos();
  inline ::STCupPos* release_stsmppos();
  inline void set_allocated_stsmppos(::STCupPos* stsmppos);

  // optional .ReactCircle enCircle = 8;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 8;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // @@protoc_insertion_point(class_scope:STResAddTask)
 private:
  inline void set_has_uitaskid();
  inline void clear_has_uitaskid();
  inline void set_has_uiresult();
  inline void clear_has_uiresult();
  inline void set_has_uimaintantype();
  inline void clear_has_uimaintantype();
  inline void set_has_uircupno();
  inline void clear_has_uircupno();
  inline void set_has_szprjname();
  inline void clear_has_szprjname();
  inline void set_has_stsmppos();
  inline void clear_has_stsmppos();
  inline void set_has_encircle();
  inline void clear_has_encircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uitaskid_;
  ::google::protobuf::uint32 uiresult_;
  ::google::protobuf::uint32 uimaintantype_;
  ::google::protobuf::uint32 uircupno_;
  ::std::string* szprjname_;
  ::google::protobuf::RepeatedPtrField< ::STAdPoints > stadpoints_;
  ::STCupPos* stsmppos_;
  int encircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResAddTask* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyRctCupStatus : public ::google::protobuf::Message {
 public:
  STNotifyRctCupStatus();
  virtual ~STNotifyRctCupStatus();

  STNotifyRctCupStatus(const STNotifyRctCupStatus& from);

  inline STNotifyRctCupStatus& operator=(const STNotifyRctCupStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyRctCupStatus& default_instance();

  void Swap(STNotifyRctCupStatus* other);

  // implements Message ----------------------------------------------

  STNotifyRctCupStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyRctCupStatus& from);
  void MergeFrom(const STNotifyRctCupStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STRctCupStatus stCupStatus = 1;
  inline int stcupstatus_size() const;
  inline void clear_stcupstatus();
  static const int kStCupStatusFieldNumber = 1;
  inline const ::STRctCupStatus& stcupstatus(int index) const;
  inline ::STRctCupStatus* mutable_stcupstatus(int index);
  inline ::STRctCupStatus* add_stcupstatus();
  inline const ::google::protobuf::RepeatedPtrField< ::STRctCupStatus >&
      stcupstatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::STRctCupStatus >*
      mutable_stcupstatus();

  // optional .ReactCircle enCircle = 2;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 2;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // @@protoc_insertion_point(class_scope:STNotifyRctCupStatus)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STRctCupStatus > stcupstatus_;
  int encircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyRctCupStatus* default_instance_;
};
// -------------------------------------------------------------------

class STReqMarginScan : public ::google::protobuf::Message {
 public:
  STReqMarginScan();
  virtual ~STReqMarginScan();

  STReqMarginScan(const STReqMarginScan& from);

  inline STReqMarginScan& operator=(const STReqMarginScan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqMarginScan& default_instance();

  void Swap(STReqMarginScan* other);

  // implements Message ----------------------------------------------

  STReqMarginScan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqMarginScan& from);
  void MergeFrom(const STReqMarginScan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STCupPos stScanCup = 1;
  inline int stscancup_size() const;
  inline void clear_stscancup();
  static const int kStScanCupFieldNumber = 1;
  inline const ::STCupPos& stscancup(int index) const;
  inline ::STCupPos* mutable_stscancup(int index);
  inline ::STCupPos* add_stscancup();
  inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
      stscancup() const;
  inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
      mutable_stscancup();

  // @@protoc_insertion_point(class_scope:STReqMarginScan)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STCupPos > stscancup_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqMarginScan* default_instance_;
};
// -------------------------------------------------------------------

class STResMarginScan : public ::google::protobuf::Message {
 public:
  STResMarginScan();
  virtual ~STResMarginScan();

  STResMarginScan(const STResMarginScan& from);

  inline STResMarginScan& operator=(const STResMarginScan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResMarginScan& default_instance();

  void Swap(STResMarginScan* other);

  // implements Message ----------------------------------------------

  STResMarginScan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResMarginScan& from);
  void MergeFrom(const STResMarginScan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STMarginScan stMarginInfo = 1;
  inline int stmargininfo_size() const;
  inline void clear_stmargininfo();
  static const int kStMarginInfoFieldNumber = 1;
  inline const ::STMarginScan& stmargininfo(int index) const;
  inline ::STMarginScan* mutable_stmargininfo(int index);
  inline ::STMarginScan* add_stmargininfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STMarginScan >&
      stmargininfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STMarginScan >*
      mutable_stmargininfo();

  // optional uint32 uiMarginscan = 2;
  inline bool has_uimarginscan() const;
  inline void clear_uimarginscan();
  static const int kUiMarginscanFieldNumber = 2;
  inline ::google::protobuf::uint32 uimarginscan() const;
  inline void set_uimarginscan(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STResMarginScan)
 private:
  inline void set_has_uimarginscan();
  inline void clear_has_uimarginscan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STMarginScan > stmargininfo_;
  ::google::protobuf::uint32 uimarginscan_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResMarginScan* default_instance_;
};
// -------------------------------------------------------------------

class STReqAirOut : public ::google::protobuf::Message {
 public:
  STReqAirOut();
  virtual ~STReqAirOut();

  STReqAirOut(const STReqAirOut& from);

  inline STReqAirOut& operator=(const STReqAirOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqAirOut& default_instance();

  void Swap(STReqAirOut* other);

  // implements Message ----------------------------------------------

  STReqAirOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqAirOut& from);
  void MergeFrom(const STReqAirOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // optional uint32 uiOutTimes = 2;
  inline bool has_uiouttimes() const;
  inline void clear_uiouttimes();
  static const int kUiOutTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 uiouttimes() const;
  inline void set_uiouttimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqAirOut)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();
  inline void set_has_uiouttimes();
  inline void clear_has_uiouttimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encircle_;
  ::google::protobuf::uint32 uiouttimes_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqAirOut* default_instance_;
};
// -------------------------------------------------------------------

class STReqIntensifyWash : public ::google::protobuf::Message {
 public:
  STReqIntensifyWash();
  virtual ~STReqIntensifyWash();

  STReqIntensifyWash(const STReqIntensifyWash& from);

  inline STReqIntensifyWash& operator=(const STReqIntensifyWash& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqIntensifyWash& default_instance();

  void Swap(STReqIntensifyWash* other);

  // implements Message ----------------------------------------------

  STReqIntensifyWash* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqIntensifyWash& from);
  void MergeFrom(const STReqIntensifyWash& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // optional uint32 washType = 2;
  inline bool has_washtype() const;
  inline void clear_washtype();
  static const int kWashTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 washtype() const;
  inline void set_washtype(::google::protobuf::uint32 value);

  // optional uint32 washTimes = 3;
  inline bool has_washtimes() const;
  inline void clear_washtimes();
  static const int kWashTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 washtimes() const;
  inline void set_washtimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqIntensifyWash)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();
  inline void set_has_washtype();
  inline void clear_has_washtype();
  inline void set_has_washtimes();
  inline void clear_has_washtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encircle_;
  ::google::protobuf::uint32 washtype_;
  ::google::protobuf::uint32 washtimes_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqIntensifyWash* default_instance_;
};
// -------------------------------------------------------------------

class STReqBarcodeScan : public ::google::protobuf::Message {
 public:
  STReqBarcodeScan();
  virtual ~STReqBarcodeScan();

  STReqBarcodeScan(const STReqBarcodeScan& from);

  inline STReqBarcodeScan& operator=(const STReqBarcodeScan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqBarcodeScan& default_instance();

  void Swap(STReqBarcodeScan* other);

  // implements Message ----------------------------------------------

  STReqBarcodeScan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqBarcodeScan& from);
  void MergeFrom(const STReqBarcodeScan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STCupPos stReagCup = 1;
  inline int streagcup_size() const;
  inline void clear_streagcup();
  static const int kStReagCupFieldNumber = 1;
  inline const ::STCupPos& streagcup(int index) const;
  inline ::STCupPos* mutable_streagcup(int index);
  inline ::STCupPos* add_streagcup();
  inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
      streagcup() const;
  inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
      mutable_streagcup();

  // repeated .STCupPos stSmpCup = 2;
  inline int stsmpcup_size() const;
  inline void clear_stsmpcup();
  static const int kStSmpCupFieldNumber = 2;
  inline const ::STCupPos& stsmpcup(int index) const;
  inline ::STCupPos* mutable_stsmpcup(int index);
  inline ::STCupPos* add_stsmpcup();
  inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
      stsmpcup() const;
  inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
      mutable_stsmpcup();

  // @@protoc_insertion_point(class_scope:STReqBarcodeScan)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STCupPos > streagcup_;
  ::google::protobuf::RepeatedPtrField< ::STCupPos > stsmpcup_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqBarcodeScan* default_instance_;
};
// -------------------------------------------------------------------

class STResBarcodeScan : public ::google::protobuf::Message {
 public:
  STResBarcodeScan();
  virtual ~STResBarcodeScan();

  STResBarcodeScan(const STResBarcodeScan& from);

  inline STResBarcodeScan& operator=(const STResBarcodeScan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResBarcodeScan& default_instance();

  void Swap(STResBarcodeScan* other);

  // implements Message ----------------------------------------------

  STResBarcodeScan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResBarcodeScan& from);
  void MergeFrom(const STResBarcodeScan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STBarcodeScan stReagInfo = 1;
  inline int streaginfo_size() const;
  inline void clear_streaginfo();
  static const int kStReagInfoFieldNumber = 1;
  inline const ::STBarcodeScan& streaginfo(int index) const;
  inline ::STBarcodeScan* mutable_streaginfo(int index);
  inline ::STBarcodeScan* add_streaginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >&
      streaginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >*
      mutable_streaginfo();

  // repeated .STBarcodeScan stSmpInfo = 2;
  inline int stsmpinfo_size() const;
  inline void clear_stsmpinfo();
  static const int kStSmpInfoFieldNumber = 2;
  inline const ::STBarcodeScan& stsmpinfo(int index) const;
  inline ::STBarcodeScan* mutable_stsmpinfo(int index);
  inline ::STBarcodeScan* add_stsmpinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >&
      stsmpinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >*
      mutable_stsmpinfo();

  // @@protoc_insertion_point(class_scope:STResBarcodeScan)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STBarcodeScan > streaginfo_;
  ::google::protobuf::RepeatedPtrField< ::STBarcodeScan > stsmpinfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResBarcodeScan* default_instance_;
};
// -------------------------------------------------------------------

class STReqReagentSuspend : public ::google::protobuf::Message {
 public:
  STReqReagentSuspend();
  virtual ~STReqReagentSuspend();

  STReqReagentSuspend(const STReqReagentSuspend& from);

  inline STReqReagentSuspend& operator=(const STReqReagentSuspend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqReagentSuspend& default_instance();

  void Swap(STReqReagentSuspend* other);

  // implements Message ----------------------------------------------

  STReqReagentSuspend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqReagentSuspend& from);
  void MergeFrom(const STReqReagentSuspend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bSuspend = 1;
  inline bool has_bsuspend() const;
  inline void clear_bsuspend();
  static const int kBSuspendFieldNumber = 1;
  inline bool bsuspend() const;
  inline void set_bsuspend(bool value);

  // @@protoc_insertion_point(class_scope:STReqReagentSuspend)
 private:
  inline void set_has_bsuspend();
  inline void clear_has_bsuspend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool bsuspend_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqReagentSuspend* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyReagInfo : public ::google::protobuf::Message {
 public:
  STNotifyReagInfo();
  virtual ~STNotifyReagInfo();

  STNotifyReagInfo(const STNotifyReagInfo& from);

  inline STNotifyReagInfo& operator=(const STNotifyReagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyReagInfo& default_instance();

  void Swap(STNotifyReagInfo* other);

  // implements Message ----------------------------------------------

  STNotifyReagInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyReagInfo& from);
  void MergeFrom(const STNotifyReagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STThreshold stThreshold = 1;
  inline int stthreshold_size() const;
  inline void clear_stthreshold();
  static const int kStThresholdFieldNumber = 1;
  inline const ::STThreshold& stthreshold(int index) const;
  inline ::STThreshold* mutable_stthreshold(int index);
  inline ::STThreshold* add_stthreshold();
  inline const ::google::protobuf::RepeatedPtrField< ::STThreshold >&
      stthreshold() const;
  inline ::google::protobuf::RepeatedPtrField< ::STThreshold >*
      mutable_stthreshold();

  // repeated .STReagInfo stReagInfo = 2;
  inline int streaginfo_size() const;
  inline void clear_streaginfo();
  static const int kStReagInfoFieldNumber = 2;
  inline const ::STReagInfo& streaginfo(int index) const;
  inline ::STReagInfo* mutable_streaginfo(int index);
  inline ::STReagInfo* add_streaginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STReagInfo >&
      streaginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STReagInfo >*
      mutable_streaginfo();

  // repeated .STReagInfo stAutoLoadReagInfo = 3;
  inline int stautoloadreaginfo_size() const;
  inline void clear_stautoloadreaginfo();
  static const int kStAutoLoadReagInfoFieldNumber = 3;
  inline const ::STReagInfo& stautoloadreaginfo(int index) const;
  inline ::STReagInfo* mutable_stautoloadreaginfo(int index);
  inline ::STReagInfo* add_stautoloadreaginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STReagInfo >&
      stautoloadreaginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STReagInfo >*
      mutable_stautoloadreaginfo();

  // @@protoc_insertion_point(class_scope:STNotifyReagInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STThreshold > stthreshold_;
  ::google::protobuf::RepeatedPtrField< ::STReagInfo > streaginfo_;
  ::google::protobuf::RepeatedPtrField< ::STReagInfo > stautoloadreaginfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyReagInfo* default_instance_;
};
// -------------------------------------------------------------------

class STReagChangeInfo : public ::google::protobuf::Message {
 public:
  STReagChangeInfo();
  virtual ~STReagChangeInfo();

  STReagChangeInfo(const STReagChangeInfo& from);

  inline STReagChangeInfo& operator=(const STReagChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReagChangeInfo& default_instance();

  void Swap(STReagChangeInfo* other);

  // implements Message ----------------------------------------------

  STReagChangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReagChangeInfo& from);
  void MergeFrom(const STReagChangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bAdd = 1;
  inline bool has_badd() const;
  inline void clear_badd();
  static const int kBAddFieldNumber = 1;
  inline bool badd() const;
  inline void set_badd(bool value);

  // optional .ReagDiskType reagDiskType = 2;
  inline bool has_reagdisktype() const;
  inline void clear_reagdisktype();
  static const int kReagDiskTypeFieldNumber = 2;
  inline ::ReagDiskType reagdisktype() const;
  inline void set_reagdisktype(::ReagDiskType value);

  // optional .STReagInfo stReagInfo = 3;
  inline bool has_streaginfo() const;
  inline void clear_streaginfo();
  static const int kStReagInfoFieldNumber = 3;
  inline const ::STReagInfo& streaginfo() const;
  inline ::STReagInfo* mutable_streaginfo();
  inline ::STReagInfo* release_streaginfo();
  inline void set_allocated_streaginfo(::STReagInfo* streaginfo);

  // @@protoc_insertion_point(class_scope:STReagChangeInfo)
 private:
  inline void set_has_badd();
  inline void clear_has_badd();
  inline void set_has_reagdisktype();
  inline void clear_has_reagdisktype();
  inline void set_has_streaginfo();
  inline void clear_has_streaginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool badd_;
  int reagdisktype_;
  ::STReagInfo* streaginfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReagChangeInfo* default_instance_;
};
// -------------------------------------------------------------------

class STReagChangeInfoList : public ::google::protobuf::Message {
 public:
  STReagChangeInfoList();
  virtual ~STReagChangeInfoList();

  STReagChangeInfoList(const STReagChangeInfoList& from);

  inline STReagChangeInfoList& operator=(const STReagChangeInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReagChangeInfoList& default_instance();

  void Swap(STReagChangeInfoList* other);

  // implements Message ----------------------------------------------

  STReagChangeInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReagChangeInfoList& from);
  void MergeFrom(const STReagChangeInfoList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STReagChangeInfo listInfo = 1;
  inline int listinfo_size() const;
  inline void clear_listinfo();
  static const int kListInfoFieldNumber = 1;
  inline const ::STReagChangeInfo& listinfo(int index) const;
  inline ::STReagChangeInfo* mutable_listinfo(int index);
  inline ::STReagChangeInfo* add_listinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STReagChangeInfo >&
      listinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STReagChangeInfo >*
      mutable_listinfo();

  // @@protoc_insertion_point(class_scope:STReagChangeInfoList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STReagChangeInfo > listinfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReagChangeInfoList* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyMachineStatus : public ::google::protobuf::Message {
 public:
  STNotifyMachineStatus();
  virtual ~STNotifyMachineStatus();

  STNotifyMachineStatus(const STNotifyMachineStatus& from);

  inline STNotifyMachineStatus& operator=(const STNotifyMachineStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyMachineStatus& default_instance();

  void Swap(STNotifyMachineStatus* other);

  // implements Message ----------------------------------------------

  STNotifyMachineStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyMachineStatus& from);
  void MergeFrom(const STNotifyMachineStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiMachStatus = 1;
  inline bool has_uimachstatus() const;
  inline void clear_uimachstatus();
  static const int kUiMachStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 uimachstatus() const;
  inline void set_uimachstatus(::google::protobuf::uint32 value);

  // optional uint32 uiLeftTime = 2;
  inline bool has_uilefttime() const;
  inline void clear_uilefttime();
  static const int kUiLeftTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 uilefttime() const;
  inline void set_uilefttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STNotifyMachineStatus)
 private:
  inline void set_has_uimachstatus();
  inline void clear_has_uimachstatus();
  inline void set_has_uilefttime();
  inline void clear_has_uilefttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uimachstatus_;
  ::google::protobuf::uint32 uilefttime_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyMachineStatus* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyConnect : public ::google::protobuf::Message {
 public:
  STNotifyConnect();
  virtual ~STNotifyConnect();

  STNotifyConnect(const STNotifyConnect& from);

  inline STNotifyConnect& operator=(const STNotifyConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyConnect& default_instance();

  void Swap(STNotifyConnect* other);

  // implements Message ----------------------------------------------

  STNotifyConnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyConnect& from);
  void MergeFrom(const STNotifyConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szMachIp = 1;
  inline bool has_szmachip() const;
  inline void clear_szmachip();
  static const int kSzMachIpFieldNumber = 1;
  inline const ::std::string& szmachip() const;
  inline void set_szmachip(const ::std::string& value);
  inline void set_szmachip(const char* value);
  inline void set_szmachip(const char* value, size_t size);
  inline ::std::string* mutable_szmachip();
  inline ::std::string* release_szmachip();
  inline void set_allocated_szmachip(::std::string* szmachip);

  // @@protoc_insertion_point(class_scope:STNotifyConnect)
 private:
  inline void set_has_szmachip();
  inline void clear_has_szmachip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szmachip_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyConnect* default_instance_;
};
// -------------------------------------------------------------------

class STReqLightCheck : public ::google::protobuf::Message {
 public:
  STReqLightCheck();
  virtual ~STReqLightCheck();

  STReqLightCheck(const STReqLightCheck& from);

  inline STReqLightCheck& operator=(const STReqLightCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqLightCheck& default_instance();

  void Swap(STReqLightCheck* other);

  // implements Message ----------------------------------------------

  STReqLightCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqLightCheck& from);
  void MergeFrom(const STReqLightCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // @@protoc_insertion_point(class_scope:STReqLightCheck)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqLightCheck* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyADValue : public ::google::protobuf::Message {
 public:
  STNotifyADValue();
  virtual ~STNotifyADValue();

  STNotifyADValue(const STNotifyADValue& from);

  inline STNotifyADValue& operator=(const STNotifyADValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyADValue& default_instance();

  void Swap(STNotifyADValue* other);

  // implements Message ----------------------------------------------

  STNotifyADValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyADValue& from);
  void MergeFrom(const STNotifyADValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // repeated .STCupADValue stCupInfo = 2;
  inline int stcupinfo_size() const;
  inline void clear_stcupinfo();
  static const int kStCupInfoFieldNumber = 2;
  inline const ::STCupADValue& stcupinfo(int index) const;
  inline ::STCupADValue* mutable_stcupinfo(int index);
  inline ::STCupADValue* add_stcupinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STCupADValue >&
      stcupinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STCupADValue >*
      mutable_stcupinfo();

  // @@protoc_insertion_point(class_scope:STNotifyADValue)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STCupADValue > stcupinfo_;
  int encircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyADValue* default_instance_;
};
// -------------------------------------------------------------------

class STReqSkipCup : public ::google::protobuf::Message {
 public:
  STReqSkipCup();
  virtual ~STReqSkipCup();

  STReqSkipCup(const STReqSkipCup& from);

  inline STReqSkipCup& operator=(const STReqSkipCup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqSkipCup& default_instance();

  void Swap(STReqSkipCup* other);

  // implements Message ----------------------------------------------

  STReqSkipCup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqSkipCup& from);
  void MergeFrom(const STReqSkipCup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cupid = 1;
  inline bool has_cupid() const;
  inline void clear_cupid();
  static const int kCupidFieldNumber = 1;
  inline ::google::protobuf::uint32 cupid() const;
  inline void set_cupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqSkipCup)
 private:
  inline void set_has_cupid();
  inline void clear_has_cupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cupid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqSkipCup* default_instance_;
};
// -------------------------------------------------------------------

class STReqActCmd : public ::google::protobuf::Message {
 public:
  STReqActCmd();
  virtual ~STReqActCmd();

  STReqActCmd(const STReqActCmd& from);

  inline STReqActCmd& operator=(const STReqActCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqActCmd& default_instance();

  void Swap(STReqActCmd* other);

  // implements Message ----------------------------------------------

  STReqActCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqActCmd& from);
  void MergeFrom(const STReqActCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSubsysId = 1;
  inline bool has_uisubsysid() const;
  inline void clear_uisubsysid();
  static const int kUiSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisubsysid() const;
  inline void set_uisubsysid(::google::protobuf::uint32 value);

  // optional uint32 uiActType = 2;
  inline bool has_uiacttype() const;
  inline void clear_uiacttype();
  static const int kUiActTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 uiacttype() const;
  inline void set_uiacttype(::google::protobuf::uint32 value);

  // repeated uint32 uiParams = 3;
  inline int uiparams_size() const;
  inline void clear_uiparams();
  static const int kUiParamsFieldNumber = 3;
  inline ::google::protobuf::uint32 uiparams(int index) const;
  inline void set_uiparams(int index, ::google::protobuf::uint32 value);
  inline void add_uiparams(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uiparams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uiparams();

  // @@protoc_insertion_point(class_scope:STReqActCmd)
 private:
  inline void set_has_uisubsysid();
  inline void clear_has_uisubsysid();
  inline void set_has_uiacttype();
  inline void clear_has_uiacttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uisubsysid_;
  ::google::protobuf::uint32 uiacttype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uiparams_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqActCmd* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyOffset : public ::google::protobuf::Message {
 public:
  STNotifyOffset();
  virtual ~STNotifyOffset();

  STNotifyOffset(const STNotifyOffset& from);

  inline STNotifyOffset& operator=(const STNotifyOffset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyOffset& default_instance();

  void Swap(STNotifyOffset* other);

  // implements Message ----------------------------------------------

  STNotifyOffset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyOffset& from);
  void MergeFrom(const STNotifyOffset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSubsysId = 1;
  inline bool has_uisubsysid() const;
  inline void clear_uisubsysid();
  static const int kUiSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisubsysid() const;
  inline void set_uisubsysid(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated int32 para = 3;
  inline int para_size() const;
  inline void clear_para();
  static const int kParaFieldNumber = 3;
  inline ::google::protobuf::int32 para(int index) const;
  inline void set_para(int index, ::google::protobuf::int32 value);
  inline void add_para(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      para() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_para();

  // @@protoc_insertion_point(class_scope:STNotifyOffset)
 private:
  inline void set_has_uisubsysid();
  inline void clear_has_uisubsysid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uisubsysid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > para_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyOffset* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyTimer : public ::google::protobuf::Message {
 public:
  STNotifyTimer();
  virtual ~STNotifyTimer();

  STNotifyTimer(const STNotifyTimer& from);

  inline STNotifyTimer& operator=(const STNotifyTimer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyTimer& default_instance();

  void Swap(STNotifyTimer* other);

  // implements Message ----------------------------------------------

  STNotifyTimer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyTimer& from);
  void MergeFrom(const STNotifyTimer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiTimerId = 1;
  inline bool has_uitimerid() const;
  inline void clear_uitimerid();
  static const int kUiTimerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uitimerid() const;
  inline void set_uitimerid(::google::protobuf::uint32 value);

  // optional string szTimerName = 2;
  inline bool has_sztimername() const;
  inline void clear_sztimername();
  static const int kSzTimerNameFieldNumber = 2;
  inline const ::std::string& sztimername() const;
  inline void set_sztimername(const ::std::string& value);
  inline void set_sztimername(const char* value);
  inline void set_sztimername(const char* value, size_t size);
  inline ::std::string* mutable_sztimername();
  inline ::std::string* release_sztimername();
  inline void set_allocated_sztimername(::std::string* sztimername);

  // @@protoc_insertion_point(class_scope:STNotifyTimer)
 private:
  inline void set_has_uitimerid();
  inline void clear_has_uitimerid();
  inline void set_has_sztimername();
  inline void clear_has_sztimername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* sztimername_;
  ::google::protobuf::uint32 uitimerid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyTimer* default_instance_;
};
// -------------------------------------------------------------------

class STReqSetTime : public ::google::protobuf::Message {
 public:
  STReqSetTime();
  virtual ~STReqSetTime();

  STReqSetTime(const STReqSetTime& from);

  inline STReqSetTime& operator=(const STReqSetTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqSetTime& default_instance();

  void Swap(STReqSetTime* other);

  // implements Message ----------------------------------------------

  STReqSetTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqSetTime& from);
  void MergeFrom(const STReqSetTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strTime = 1;
  inline bool has_strtime() const;
  inline void clear_strtime();
  static const int kStrTimeFieldNumber = 1;
  inline const ::std::string& strtime() const;
  inline void set_strtime(const ::std::string& value);
  inline void set_strtime(const char* value);
  inline void set_strtime(const char* value, size_t size);
  inline ::std::string* mutable_strtime();
  inline ::std::string* release_strtime();
  inline void set_allocated_strtime(::std::string* strtime);

  // @@protoc_insertion_point(class_scope:STReqSetTime)
 private:
  inline void set_has_strtime();
  inline void clear_has_strtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strtime_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqSetTime* default_instance_;
};
// -------------------------------------------------------------------

class STReqPreciseAdd : public ::google::protobuf::Message {
 public:
  STReqPreciseAdd();
  virtual ~STReqPreciseAdd();

  STReqPreciseAdd(const STReqPreciseAdd& from);

  inline STReqPreciseAdd& operator=(const STReqPreciseAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqPreciseAdd& default_instance();

  void Swap(STReqPreciseAdd* other);

  // implements Message ----------------------------------------------

  STReqPreciseAdd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqPreciseAdd& from);
  void MergeFrom(const STReqPreciseAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSubsysId = 1;
  inline bool has_uisubsysid() const;
  inline void clear_uisubsysid();
  static const int kUiSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisubsysid() const;
  inline void set_uisubsysid(::google::protobuf::uint32 value);

  // optional uint32 uiAbsorbPos = 2;
  inline bool has_uiabsorbpos() const;
  inline void clear_uiabsorbpos();
  static const int kUiAbsorbPosFieldNumber = 2;
  inline ::google::protobuf::uint32 uiabsorbpos() const;
  inline void set_uiabsorbpos(::google::protobuf::uint32 value);

  // optional uint32 uiAbsorbAmount = 3;
  inline bool has_uiabsorbamount() const;
  inline void clear_uiabsorbamount();
  static const int kUiAbsorbAmountFieldNumber = 3;
  inline ::google::protobuf::uint32 uiabsorbamount() const;
  inline void set_uiabsorbamount(::google::protobuf::uint32 value);

  // optional uint32 uiDischargePos = 4;
  inline bool has_uidischargepos() const;
  inline void clear_uidischargepos();
  static const int kUiDischargePosFieldNumber = 4;
  inline ::google::protobuf::uint32 uidischargepos() const;
  inline void set_uidischargepos(::google::protobuf::uint32 value);

  // optional uint32 uiDischargeAmount = 5;
  inline bool has_uidischargeamount() const;
  inline void clear_uidischargeamount();
  static const int kUiDischargeAmountFieldNumber = 5;
  inline ::google::protobuf::uint32 uidischargeamount() const;
  inline void set_uidischargeamount(::google::protobuf::uint32 value);

  // optional uint32 uiLoopTimes = 6;
  inline bool has_uilooptimes() const;
  inline void clear_uilooptimes();
  static const int kUiLoopTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 uilooptimes() const;
  inline void set_uilooptimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqPreciseAdd)
 private:
  inline void set_has_uisubsysid();
  inline void clear_has_uisubsysid();
  inline void set_has_uiabsorbpos();
  inline void clear_has_uiabsorbpos();
  inline void set_has_uiabsorbamount();
  inline void clear_has_uiabsorbamount();
  inline void set_has_uidischargepos();
  inline void clear_has_uidischargepos();
  inline void set_has_uidischargeamount();
  inline void clear_has_uidischargeamount();
  inline void set_has_uilooptimes();
  inline void clear_has_uilooptimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uisubsysid_;
  ::google::protobuf::uint32 uiabsorbpos_;
  ::google::protobuf::uint32 uiabsorbamount_;
  ::google::protobuf::uint32 uidischargepos_;
  ::google::protobuf::uint32 uidischargeamount_;
  ::google::protobuf::uint32 uilooptimes_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqPreciseAdd* default_instance_;
};
// -------------------------------------------------------------------

class STReqDarkCurrentTest : public ::google::protobuf::Message {
 public:
  STReqDarkCurrentTest();
  virtual ~STReqDarkCurrentTest();

  STReqDarkCurrentTest(const STReqDarkCurrentTest& from);

  inline STReqDarkCurrentTest& operator=(const STReqDarkCurrentTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqDarkCurrentTest& default_instance();

  void Swap(STReqDarkCurrentTest* other);

  // implements Message ----------------------------------------------

  STReqDarkCurrentTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqDarkCurrentTest& from);
  void MergeFrom(const STReqDarkCurrentTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // optional uint32 testType = 2;
  inline bool has_testtype() const;
  inline void clear_testtype();
  static const int kTestTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 testtype() const;
  inline void set_testtype(::google::protobuf::uint32 value);

  // optional uint32 testCount = 3;
  inline bool has_testcount() const;
  inline void clear_testcount();
  static const int kTestCountFieldNumber = 3;
  inline ::google::protobuf::uint32 testcount() const;
  inline void set_testcount(::google::protobuf::uint32 value);

  // repeated .STKeyValue dpValueInfo = 4;
  inline int dpvalueinfo_size() const;
  inline void clear_dpvalueinfo();
  static const int kDpValueInfoFieldNumber = 4;
  inline const ::STKeyValue& dpvalueinfo(int index) const;
  inline ::STKeyValue* mutable_dpvalueinfo(int index);
  inline ::STKeyValue* add_dpvalueinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
      dpvalueinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
      mutable_dpvalueinfo();

  // @@protoc_insertion_point(class_scope:STReqDarkCurrentTest)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();
  inline void set_has_testtype();
  inline void clear_has_testtype();
  inline void set_has_testcount();
  inline void clear_has_testcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encircle_;
  ::google::protobuf::uint32 testtype_;
  ::google::protobuf::RepeatedPtrField< ::STKeyValue > dpvalueinfo_;
  ::google::protobuf::uint32 testcount_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqDarkCurrentTest* default_instance_;
};
// -------------------------------------------------------------------

class STResDarkCurrentTest : public ::google::protobuf::Message {
 public:
  STResDarkCurrentTest();
  virtual ~STResDarkCurrentTest();

  STResDarkCurrentTest(const STResDarkCurrentTest& from);

  inline STResDarkCurrentTest& operator=(const STResDarkCurrentTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResDarkCurrentTest& default_instance();

  void Swap(STResDarkCurrentTest* other);

  // implements Message ----------------------------------------------

  STResDarkCurrentTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResDarkCurrentTest& from);
  void MergeFrom(const STResDarkCurrentTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ReactCircle enCircle = 1;
  inline bool has_encircle() const;
  inline void clear_encircle();
  static const int kEnCircleFieldNumber = 1;
  inline ::ReactCircle encircle() const;
  inline void set_encircle(::ReactCircle value);

  // optional uint32 testType = 2;
  inline bool has_testtype() const;
  inline void clear_testtype();
  static const int kTestTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 testtype() const;
  inline void set_testtype(::google::protobuf::uint32 value);

  // repeated .STDarkCurrentAD darkCurrentADInfo = 3;
  inline int darkcurrentadinfo_size() const;
  inline void clear_darkcurrentadinfo();
  static const int kDarkCurrentADInfoFieldNumber = 3;
  inline const ::STDarkCurrentAD& darkcurrentadinfo(int index) const;
  inline ::STDarkCurrentAD* mutable_darkcurrentadinfo(int index);
  inline ::STDarkCurrentAD* add_darkcurrentadinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::STDarkCurrentAD >&
      darkcurrentadinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::STDarkCurrentAD >*
      mutable_darkcurrentadinfo();

  // @@protoc_insertion_point(class_scope:STResDarkCurrentTest)
 private:
  inline void set_has_encircle();
  inline void clear_has_encircle();
  inline void set_has_testtype();
  inline void clear_has_testtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int encircle_;
  ::google::protobuf::uint32 testtype_;
  ::google::protobuf::RepeatedPtrField< ::STDarkCurrentAD > darkcurrentadinfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResDarkCurrentTest* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyTemp : public ::google::protobuf::Message {
 public:
  STNotifyTemp();
  virtual ~STNotifyTemp();

  STNotifyTemp(const STNotifyTemp& from);

  inline STNotifyTemp& operator=(const STNotifyTemp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyTemp& default_instance();

  void Swap(STNotifyTemp* other);

  // implements Message ----------------------------------------------

  STNotifyTemp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyTemp& from);
  void MergeFrom(const STNotifyTemp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ulSubsysId = 1;
  inline bool has_ulsubsysid() const;
  inline void clear_ulsubsysid();
  static const int kUlSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ulsubsysid() const;
  inline void set_ulsubsysid(::google::protobuf::uint32 value);

  // optional int32 iTemp = 2;
  inline bool has_itemp() const;
  inline void clear_itemp();
  static const int kITempFieldNumber = 2;
  inline ::google::protobuf::int32 itemp() const;
  inline void set_itemp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:STNotifyTemp)
 private:
  inline void set_has_ulsubsysid();
  inline void clear_has_ulsubsysid();
  inline void set_has_itemp();
  inline void clear_has_itemp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 ulsubsysid_;
  ::google::protobuf::int32 itemp_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyTemp* default_instance_;
};
// -------------------------------------------------------------------

class STGetMidLog : public ::google::protobuf::Message {
 public:
  STGetMidLog();
  virtual ~STGetMidLog();

  STGetMidLog(const STGetMidLog& from);

  inline STGetMidLog& operator=(const STGetMidLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STGetMidLog& default_instance();

  void Swap(STGetMidLog* other);

  // implements Message ----------------------------------------------

  STGetMidLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STGetMidLog& from);
  void MergeFrom(const STGetMidLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strIP = 1;
  inline bool has_strip() const;
  inline void clear_strip();
  static const int kStrIPFieldNumber = 1;
  inline const ::std::string& strip() const;
  inline void set_strip(const ::std::string& value);
  inline void set_strip(const char* value);
  inline void set_strip(const char* value, size_t size);
  inline ::std::string* mutable_strip();
  inline ::std::string* release_strip();
  inline void set_allocated_strip(::std::string* strip);

  // @@protoc_insertion_point(class_scope:STGetMidLog)
 private:
  inline void set_has_strip();
  inline void clear_has_strip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* strip_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STGetMidLog* default_instance_;
};
// -------------------------------------------------------------------

class STCollideNdlConfig : public ::google::protobuf::Message {
 public:
  STCollideNdlConfig();
  virtual ~STCollideNdlConfig();

  STCollideNdlConfig(const STCollideNdlConfig& from);

  inline STCollideNdlConfig& operator=(const STCollideNdlConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STCollideNdlConfig& default_instance();

  void Swap(STCollideNdlConfig* other);

  // implements Message ----------------------------------------------

  STCollideNdlConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STCollideNdlConfig& from);
  void MergeFrom(const STCollideNdlConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CollideNdl ulConfig = 1;
  inline bool has_ulconfig() const;
  inline void clear_ulconfig();
  static const int kUlConfigFieldNumber = 1;
  inline ::CollideNdl ulconfig() const;
  inline void set_ulconfig(::CollideNdl value);

  // @@protoc_insertion_point(class_scope:STCollideNdlConfig)
 private:
  inline void set_has_ulconfig();
  inline void clear_has_ulconfig();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int ulconfig_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STCollideNdlConfig* default_instance_;
};
// -------------------------------------------------------------------

class STVersions : public ::google::protobuf::Message {
 public:
  STVersions();
  virtual ~STVersions();

  STVersions(const STVersions& from);

  inline STVersions& operator=(const STVersions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STVersions& default_instance();

  void Swap(STVersions* other);

  // implements Message ----------------------------------------------

  STVersions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STVersions& from);
  void MergeFrom(const STVersions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STSubVers Vers = 1;
  inline int vers_size() const;
  inline void clear_vers();
  static const int kVersFieldNumber = 1;
  inline const ::STSubVers& vers(int index) const;
  inline ::STSubVers* mutable_vers(int index);
  inline ::STSubVers* add_vers();
  inline const ::google::protobuf::RepeatedPtrField< ::STSubVers >&
      vers() const;
  inline ::google::protobuf::RepeatedPtrField< ::STSubVers >*
      mutable_vers();

  // @@protoc_insertion_point(class_scope:STVersions)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STSubVers > vers_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STVersions* default_instance_;
};
// -------------------------------------------------------------------

class STNotifyFailedSmpTask : public ::google::protobuf::Message {
 public:
  STNotifyFailedSmpTask();
  virtual ~STNotifyFailedSmpTask();

  STNotifyFailedSmpTask(const STNotifyFailedSmpTask& from);

  inline STNotifyFailedSmpTask& operator=(const STNotifyFailedSmpTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifyFailedSmpTask& default_instance();

  void Swap(STNotifyFailedSmpTask* other);

  // implements Message ----------------------------------------------

  STNotifyFailedSmpTask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifyFailedSmpTask& from);
  void MergeFrom(const STNotifyFailedSmpTask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ulTaskId = 1;
  inline int ultaskid_size() const;
  inline void clear_ultaskid();
  static const int kUlTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ultaskid(int index) const;
  inline void set_ultaskid(int index, ::google::protobuf::uint32 value);
  inline void add_ultaskid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ultaskid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ultaskid();

  // @@protoc_insertion_point(class_scope:STNotifyFailedSmpTask)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ultaskid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifyFailedSmpTask* default_instance_;
};
// -------------------------------------------------------------------

class CCompSetRes : public ::google::protobuf::Message {
 public:
  CCompSetRes();
  virtual ~CCompSetRes();

  CCompSetRes(const CCompSetRes& from);

  inline CCompSetRes& operator=(const CCompSetRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCompSetRes& default_instance();

  void Swap(CCompSetRes* other);

  // implements Message ----------------------------------------------

  CCompSetRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCompSetRes& from);
  void MergeFrom(const CCompSetRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 subsysid = 1;
  inline bool has_subsysid() const;
  inline void clear_subsysid();
  static const int kSubsysidFieldNumber = 1;
  inline ::google::protobuf::uint32 subsysid() const;
  inline void set_subsysid(::google::protobuf::uint32 value);

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCompSetRes)
 private:
  inline void set_has_subsysid();
  inline void clear_has_subsysid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 subsysid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CCompSetRes* default_instance_;
};
// -------------------------------------------------------------------

class CNotifyAlarm : public ::google::protobuf::Message {
 public:
  CNotifyAlarm();
  virtual ~CNotifyAlarm();

  CNotifyAlarm(const CNotifyAlarm& from);

  inline CNotifyAlarm& operator=(const CNotifyAlarm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNotifyAlarm& default_instance();

  void Swap(CNotifyAlarm* other);

  // implements Message ----------------------------------------------

  CNotifyAlarm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNotifyAlarm& from);
  void MergeFrom(const CNotifyAlarm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .STAlarmInfo stAlarm = 1;
  inline bool has_stalarm() const;
  inline void clear_stalarm();
  static const int kStAlarmFieldNumber = 1;
  inline const ::STAlarmInfo& stalarm() const;
  inline ::STAlarmInfo* mutable_stalarm();
  inline ::STAlarmInfo* release_stalarm();
  inline void set_allocated_stalarm(::STAlarmInfo* stalarm);

  // optional uint32 ulActType = 2;
  inline bool has_ulacttype() const;
  inline void clear_ulacttype();
  static const int kUlActTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 ulacttype() const;
  inline void set_ulacttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CNotifyAlarm)
 private:
  inline void set_has_stalarm();
  inline void clear_has_stalarm();
  inline void set_has_ulacttype();
  inline void clear_has_ulacttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::STAlarmInfo* stalarm_;
  ::google::protobuf::uint32 ulacttype_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CNotifyAlarm* default_instance_;
};
// -------------------------------------------------------------------

class CNotifyAlarmList : public ::google::protobuf::Message {
 public:
  CNotifyAlarmList();
  virtual ~CNotifyAlarmList();

  CNotifyAlarmList(const CNotifyAlarmList& from);

  inline CNotifyAlarmList& operator=(const CNotifyAlarmList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNotifyAlarmList& default_instance();

  void Swap(CNotifyAlarmList* other);

  // implements Message ----------------------------------------------

  CNotifyAlarmList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNotifyAlarmList& from);
  void MergeFrom(const CNotifyAlarmList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STAlarmInfo stAlarms = 1;
  inline int stalarms_size() const;
  inline void clear_stalarms();
  static const int kStAlarmsFieldNumber = 1;
  inline const ::STAlarmInfo& stalarms(int index) const;
  inline ::STAlarmInfo* mutable_stalarms(int index);
  inline ::STAlarmInfo* add_stalarms();
  inline const ::google::protobuf::RepeatedPtrField< ::STAlarmInfo >&
      stalarms() const;
  inline ::google::protobuf::RepeatedPtrField< ::STAlarmInfo >*
      mutable_stalarms();

  // @@protoc_insertion_point(class_scope:CNotifyAlarmList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STAlarmInfo > stalarms_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CNotifyAlarmList* default_instance_;
};
// -------------------------------------------------------------------

class CTemperatureQuery : public ::google::protobuf::Message {
 public:
  CTemperatureQuery();
  virtual ~CTemperatureQuery();

  CTemperatureQuery(const CTemperatureQuery& from);

  inline CTemperatureQuery& operator=(const CTemperatureQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTemperatureQuery& default_instance();

  void Swap(CTemperatureQuery* other);

  // implements Message ----------------------------------------------

  CTemperatureQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTemperatureQuery& from);
  void MergeFrom(const CTemperatureQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STKeyValue temperature = 1;
  inline int temperature_size() const;
  inline void clear_temperature();
  static const int kTemperatureFieldNumber = 1;
  inline const ::STKeyValue& temperature(int index) const;
  inline ::STKeyValue* mutable_temperature(int index);
  inline ::STKeyValue* add_temperature();
  inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
      temperature() const;
  inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
      mutable_temperature();

  // @@protoc_insertion_point(class_scope:CTemperatureQuery)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STKeyValue > temperature_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CTemperatureQuery* default_instance_;
};
// -------------------------------------------------------------------

class CDwnUpdate : public ::google::protobuf::Message {
 public:
  CDwnUpdate();
  virtual ~CDwnUpdate();

  CDwnUpdate(const CDwnUpdate& from);

  inline CDwnUpdate& operator=(const CDwnUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDwnUpdate& default_instance();

  void Swap(CDwnUpdate* other);

  // implements Message ----------------------------------------------

  CDwnUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDwnUpdate& from);
  void MergeFrom(const CDwnUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uiSubsysId = 1;
  inline int uisubsysid_size() const;
  inline void clear_uisubsysid();
  static const int kUiSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uisubsysid(int index) const;
  inline void set_uisubsysid(int index, ::google::protobuf::uint32 value);
  inline void add_uisubsysid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uisubsysid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uisubsysid();

  // @@protoc_insertion_point(class_scope:CDwnUpdate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uisubsysid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CDwnUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CDwnUpdateRes : public ::google::protobuf::Message {
 public:
  CDwnUpdateRes();
  virtual ~CDwnUpdateRes();

  CDwnUpdateRes(const CDwnUpdateRes& from);

  inline CDwnUpdateRes& operator=(const CDwnUpdateRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDwnUpdateRes& default_instance();

  void Swap(CDwnUpdateRes* other);

  // implements Message ----------------------------------------------

  CDwnUpdateRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDwnUpdateRes& from);
  void MergeFrom(const CDwnUpdateRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .STKeyValue UpdateRes = 1;
  inline bool has_updateres() const;
  inline void clear_updateres();
  static const int kUpdateResFieldNumber = 1;
  inline const ::STKeyValue& updateres() const;
  inline ::STKeyValue* mutable_updateres();
  inline ::STKeyValue* release_updateres();
  inline void set_allocated_updateres(::STKeyValue* updateres);

  // @@protoc_insertion_point(class_scope:CDwnUpdateRes)
 private:
  inline void set_has_updateres();
  inline void clear_has_updateres();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::STKeyValue* updateres_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static CDwnUpdateRes* default_instance_;
};
// -------------------------------------------------------------------

class STReqSmoothAreaTest : public ::google::protobuf::Message {
 public:
  STReqSmoothAreaTest();
  virtual ~STReqSmoothAreaTest();

  STReqSmoothAreaTest(const STReqSmoothAreaTest& from);

  inline STReqSmoothAreaTest& operator=(const STReqSmoothAreaTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqSmoothAreaTest& default_instance();

  void Swap(STReqSmoothAreaTest* other);

  // implements Message ----------------------------------------------

  STReqSmoothAreaTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqSmoothAreaTest& from);
  void MergeFrom(const STReqSmoothAreaTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiCircle = 1;
  inline bool has_uicircle() const;
  inline void clear_uicircle();
  static const int kUiCircleFieldNumber = 1;
  inline ::google::protobuf::uint32 uicircle() const;
  inline void set_uicircle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqSmoothAreaTest)
 private:
  inline void set_has_uicircle();
  inline void clear_has_uicircle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uicircle_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqSmoothAreaTest* default_instance_;
};
// -------------------------------------------------------------------

class STResSmoothAreaTest : public ::google::protobuf::Message {
 public:
  STResSmoothAreaTest();
  virtual ~STResSmoothAreaTest();

  STResSmoothAreaTest(const STResSmoothAreaTest& from);

  inline STResSmoothAreaTest& operator=(const STResSmoothAreaTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResSmoothAreaTest& default_instance();

  void Swap(STResSmoothAreaTest* other);

  // implements Message ----------------------------------------------

  STResSmoothAreaTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResSmoothAreaTest& from);
  void MergeFrom(const STResSmoothAreaTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uiAdVal = 1;
  inline int uiadval_size() const;
  inline void clear_uiadval();
  static const int kUiAdValFieldNumber = 1;
  inline ::google::protobuf::uint32 uiadval(int index) const;
  inline void set_uiadval(int index, ::google::protobuf::uint32 value);
  inline void add_uiadval(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uiadval() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uiadval();

  // @@protoc_insertion_point(class_scope:STResSmoothAreaTest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uiadval_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResSmoothAreaTest* default_instance_;
};
// -------------------------------------------------------------------

class STReqShowWave : public ::google::protobuf::Message {
 public:
  STReqShowWave();
  virtual ~STReqShowWave();

  STReqShowWave(const STReqShowWave& from);

  inline STReqShowWave& operator=(const STReqShowWave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqShowWave& default_instance();

  void Swap(STReqShowWave* other);

  // implements Message ----------------------------------------------

  STReqShowWave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqShowWave& from);
  void MergeFrom(const STReqShowWave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSwitch = 1;
  inline bool has_uiswitch() const;
  inline void clear_uiswitch();
  static const int kUiSwitchFieldNumber = 1;
  inline ::google::protobuf::uint32 uiswitch() const;
  inline void set_uiswitch(::google::protobuf::uint32 value);

  // optional uint32 uiChannel = 2;
  inline bool has_uichannel() const;
  inline void clear_uichannel();
  static const int kUiChannelFieldNumber = 2;
  inline ::google::protobuf::uint32 uichannel() const;
  inline void set_uichannel(::google::protobuf::uint32 value);

  // optional uint32 uiSignal = 3;
  inline bool has_uisignal() const;
  inline void clear_uisignal();
  static const int kUiSignalFieldNumber = 3;
  inline ::google::protobuf::uint32 uisignal() const;
  inline void set_uisignal(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqShowWave)
 private:
  inline void set_has_uiswitch();
  inline void clear_has_uiswitch();
  inline void set_has_uichannel();
  inline void clear_has_uichannel();
  inline void set_has_uisignal();
  inline void clear_has_uisignal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uiswitch_;
  ::google::protobuf::uint32 uichannel_;
  ::google::protobuf::uint32 uisignal_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqShowWave* default_instance_;
};
// -------------------------------------------------------------------

class STResShowWave : public ::google::protobuf::Message {
 public:
  STResShowWave();
  virtual ~STResShowWave();

  STResShowWave(const STResShowWave& from);

  inline STResShowWave& operator=(const STResShowWave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STResShowWave& default_instance();

  void Swap(STResShowWave* other);

  // implements Message ----------------------------------------------

  STResShowWave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STResShowWave& from);
  void MergeFrom(const STResShowWave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiChannel = 1;
  inline bool has_uichannel() const;
  inline void clear_uichannel();
  static const int kUiChannelFieldNumber = 1;
  inline ::google::protobuf::uint32 uichannel() const;
  inline void set_uichannel(::google::protobuf::uint32 value);

  // repeated bool uiSigVal = 2;
  inline int uisigval_size() const;
  inline void clear_uisigval();
  static const int kUiSigValFieldNumber = 2;
  inline bool uisigval(int index) const;
  inline void set_uisigval(int index, bool value);
  inline void add_uisigval(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      uisigval() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_uisigval();

  // @@protoc_insertion_point(class_scope:STResShowWave)
 private:
  inline void set_has_uichannel();
  inline void clear_has_uichannel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< bool > uisigval_;
  ::google::protobuf::uint32 uichannel_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STResShowWave* default_instance_;
};
// -------------------------------------------------------------------

class STReqConnectPort : public ::google::protobuf::Message {
 public:
  STReqConnectPort();
  virtual ~STReqConnectPort();

  STReqConnectPort(const STReqConnectPort& from);

  inline STReqConnectPort& operator=(const STReqConnectPort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqConnectPort& default_instance();

  void Swap(STReqConnectPort* other);

  // implements Message ----------------------------------------------

  STReqConnectPort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqConnectPort& from);
  void MergeFrom(const STReqConnectPort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiPort = 1;
  inline bool has_uiport() const;
  inline void clear_uiport();
  static const int kUiPortFieldNumber = 1;
  inline ::google::protobuf::uint32 uiport() const;
  inline void set_uiport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqConnectPort)
 private:
  inline void set_has_uiport();
  inline void clear_has_uiport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uiport_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqConnectPort* default_instance_;
};
// -------------------------------------------------------------------

class STReqShowAD : public ::google::protobuf::Message {
 public:
  STReqShowAD();
  virtual ~STReqShowAD();

  STReqShowAD(const STReqShowAD& from);

  inline STReqShowAD& operator=(const STReqShowAD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqShowAD& default_instance();

  void Swap(STReqShowAD* other);

  // implements Message ----------------------------------------------

  STReqShowAD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqShowAD& from);
  void MergeFrom(const STReqShowAD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uiSwitch = 1;
  inline bool has_uiswitch() const;
  inline void clear_uiswitch();
  static const int kUiSwitchFieldNumber = 1;
  inline ::google::protobuf::uint32 uiswitch() const;
  inline void set_uiswitch(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STReqShowAD)
 private:
  inline void set_has_uiswitch();
  inline void clear_has_uiswitch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 uiswitch_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqShowAD* default_instance_;
};
// -------------------------------------------------------------------

class STSwitch : public ::google::protobuf::Message {
 public:
  STSwitch();
  virtual ~STSwitch();

  STSwitch(const STSwitch& from);

  inline STSwitch& operator=(const STSwitch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STSwitch& default_instance();

  void Swap(STSwitch* other);

  // implements Message ----------------------------------------------

  STSwitch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STSwitch& from);
  void MergeFrom(const STSwitch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool uiSwitch = 1;
  inline bool has_uiswitch() const;
  inline void clear_uiswitch();
  static const int kUiSwitchFieldNumber = 1;
  inline bool uiswitch() const;
  inline void set_uiswitch(bool value);

  // optional uint32 uiPara = 2;
  inline bool has_uipara() const;
  inline void clear_uipara();
  static const int kUiParaFieldNumber = 2;
  inline ::google::protobuf::uint32 uipara() const;
  inline void set_uipara(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STSwitch)
 private:
  inline void set_has_uiswitch();
  inline void clear_has_uiswitch();
  inline void set_has_uipara();
  inline void clear_has_uipara();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool uiswitch_;
  ::google::protobuf::uint32 uipara_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STSwitch* default_instance_;
};
// -------------------------------------------------------------------

class STTestAD : public ::google::protobuf::Message {
 public:
  STTestAD();
  virtual ~STTestAD();

  STTestAD(const STTestAD& from);

  inline STTestAD& operator=(const STTestAD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STTestAD& default_instance();

  void Swap(STTestAD* other);

  // implements Message ----------------------------------------------

  STTestAD* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STTestAD& from);
  void MergeFrom(const STTestAD& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .STTestVal stVal = 1;
  inline int stval_size() const;
  inline void clear_stval();
  static const int kStValFieldNumber = 1;
  inline const ::STTestVal& stval(int index) const;
  inline ::STTestVal* mutable_stval(int index);
  inline ::STTestVal* add_stval();
  inline const ::google::protobuf::RepeatedPtrField< ::STTestVal >&
      stval() const;
  inline ::google::protobuf::RepeatedPtrField< ::STTestVal >*
      mutable_stval();

  // @@protoc_insertion_point(class_scope:STTestAD)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STTestVal > stval_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STTestAD* default_instance_;
};
// -------------------------------------------------------------------

class STFLxState : public ::google::protobuf::Message {
 public:
  STFLxState();
  virtual ~STFLxState();

  STFLxState(const STFLxState& from);

  inline STFLxState& operator=(const STFLxState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STFLxState& default_instance();

  void Swap(STFLxState* other);

  // implements Message ----------------------------------------------

  STFLxState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STFLxState& from);
  void MergeFrom(const STFLxState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uiVal = 1;
  inline int uival_size() const;
  inline void clear_uival();
  static const int kUiValFieldNumber = 1;
  inline ::google::protobuf::uint32 uival(int index) const;
  inline void set_uival(int index, ::google::protobuf::uint32 value);
  inline void add_uival(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uival() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uival();

  // @@protoc_insertion_point(class_scope:STFLxState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uival_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STFLxState* default_instance_;
};
// -------------------------------------------------------------------

class STLog : public ::google::protobuf::Message {
 public:
  STLog();
  virtual ~STLog();

  STLog(const STLog& from);

  inline STLog& operator=(const STLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STLog& default_instance();

  void Swap(STLog* other);

  // implements Message ----------------------------------------------

  STLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STLog& from);
  void MergeFrom(const STLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szLogInfo = 1;
  inline bool has_szloginfo() const;
  inline void clear_szloginfo();
  static const int kSzLogInfoFieldNumber = 1;
  inline const ::std::string& szloginfo() const;
  inline void set_szloginfo(const ::std::string& value);
  inline void set_szloginfo(const char* value);
  inline void set_szloginfo(const char* value, size_t size);
  inline ::std::string* mutable_szloginfo();
  inline ::std::string* release_szloginfo();
  inline void set_allocated_szloginfo(::std::string* szloginfo);

  // @@protoc_insertion_point(class_scope:STLog)
 private:
  inline void set_has_szloginfo();
  inline void clear_has_szloginfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szloginfo_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STLog* default_instance_;
};
// -------------------------------------------------------------------

class STSound : public ::google::protobuf::Message {
 public:
  STSound();
  virtual ~STSound();

  STSound(const STSound& from);

  inline STSound& operator=(const STSound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STSound& default_instance();

  void Swap(STSound* other);

  // implements Message ----------------------------------------------

  STSound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STSound& from);
  void MergeFrom(const STSound& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 priority = 1;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 1;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:STSound)
 private:
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STSound* default_instance_;
};
// -------------------------------------------------------------------

class RegPollution : public ::google::protobuf::Message {
 public:
  RegPollution();
  virtual ~RegPollution();

  RegPollution(const RegPollution& from);

  inline RegPollution& operator=(const RegPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegPollution& default_instance();

  void Swap(RegPollution* other);

  // implements Message ----------------------------------------------

  RegPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegPollution& from);
  void MergeFrom(const RegPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string srcprj = 1;
  inline bool has_srcprj() const;
  inline void clear_srcprj();
  static const int kSrcprjFieldNumber = 1;
  inline const ::std::string& srcprj() const;
  inline void set_srcprj(const ::std::string& value);
  inline void set_srcprj(const char* value);
  inline void set_srcprj(const char* value, size_t size);
  inline ::std::string* mutable_srcprj();
  inline ::std::string* release_srcprj();
  inline void set_allocated_srcprj(::std::string* srcprj);

  // optional string dstprj = 2;
  inline bool has_dstprj() const;
  inline void clear_dstprj();
  static const int kDstprjFieldNumber = 2;
  inline const ::std::string& dstprj() const;
  inline void set_dstprj(const ::std::string& value);
  inline void set_dstprj(const char* value);
  inline void set_dstprj(const char* value, size_t size);
  inline ::std::string* mutable_dstprj();
  inline ::std::string* release_dstprj();
  inline void set_allocated_dstprj(::std::string* dstprj);

  // optional uint32 ndltype = 3;
  inline bool has_ndltype() const;
  inline void clear_ndltype();
  static const int kNdltypeFieldNumber = 3;
  inline ::google::protobuf::uint32 ndltype() const;
  inline void set_ndltype(::google::protobuf::uint32 value);

  // optional uint32 washtype = 4;
  inline bool has_washtype() const;
  inline void clear_washtype();
  static const int kWashtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 washtype() const;
  inline void set_washtype(::google::protobuf::uint32 value);

  // optional uint32 washcount = 5;
  inline bool has_washcount() const;
  inline void clear_washcount();
  static const int kWashcountFieldNumber = 5;
  inline ::google::protobuf::uint32 washcount() const;
  inline void set_washcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RegPollution)
 private:
  inline void set_has_srcprj();
  inline void clear_has_srcprj();
  inline void set_has_dstprj();
  inline void clear_has_dstprj();
  inline void set_has_ndltype();
  inline void clear_has_ndltype();
  inline void set_has_washtype();
  inline void clear_has_washtype();
  inline void set_has_washcount();
  inline void clear_has_washcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* srcprj_;
  ::std::string* dstprj_;
  ::google::protobuf::uint32 ndltype_;
  ::google::protobuf::uint32 washtype_;
  ::google::protobuf::uint32 washcount_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static RegPollution* default_instance_;
};
// -------------------------------------------------------------------

class STReqRegPollution : public ::google::protobuf::Message {
 public:
  STReqRegPollution();
  virtual ~STReqRegPollution();

  STReqRegPollution(const STReqRegPollution& from);

  inline STReqRegPollution& operator=(const STReqRegPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqRegPollution& default_instance();

  void Swap(STReqRegPollution* other);

  // implements Message ----------------------------------------------

  STReqRegPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqRegPollution& from);
  void MergeFrom(const STReqRegPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RegPollution regpollutionlist = 1;
  inline int regpollutionlist_size() const;
  inline void clear_regpollutionlist();
  static const int kRegpollutionlistFieldNumber = 1;
  inline const ::RegPollution& regpollutionlist(int index) const;
  inline ::RegPollution* mutable_regpollutionlist(int index);
  inline ::RegPollution* add_regpollutionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::RegPollution >&
      regpollutionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RegPollution >*
      mutable_regpollutionlist();

  // @@protoc_insertion_point(class_scope:STReqRegPollution)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RegPollution > regpollutionlist_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqRegPollution* default_instance_;
};
// -------------------------------------------------------------------

class SmpPollution : public ::google::protobuf::Message {
 public:
  SmpPollution();
  virtual ~SmpPollution();

  SmpPollution(const SmpPollution& from);

  inline SmpPollution& operator=(const SmpPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SmpPollution& default_instance();

  void Swap(SmpPollution* other);

  // implements Message ----------------------------------------------

  SmpPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SmpPollution& from);
  void MergeFrom(const SmpPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srctype = 1;
  inline bool has_srctype() const;
  inline void clear_srctype();
  static const int kSrctypeFieldNumber = 1;
  inline ::google::protobuf::uint32 srctype() const;
  inline void set_srctype(::google::protobuf::uint32 value);

  // optional uint32 dsttype = 2;
  inline bool has_dsttype() const;
  inline void clear_dsttype();
  static const int kDsttypeFieldNumber = 2;
  inline ::google::protobuf::uint32 dsttype() const;
  inline void set_dsttype(::google::protobuf::uint32 value);

  // optional string dstprj = 3;
  inline bool has_dstprj() const;
  inline void clear_dstprj();
  static const int kDstprjFieldNumber = 3;
  inline const ::std::string& dstprj() const;
  inline void set_dstprj(const ::std::string& value);
  inline void set_dstprj(const char* value);
  inline void set_dstprj(const char* value, size_t size);
  inline ::std::string* mutable_dstprj();
  inline ::std::string* release_dstprj();
  inline void set_allocated_dstprj(::std::string* dstprj);

  // optional uint32 washtype = 4;
  inline bool has_washtype() const;
  inline void clear_washtype();
  static const int kWashtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 washtype() const;
  inline void set_washtype(::google::protobuf::uint32 value);

  // optional uint32 washcount = 5;
  inline bool has_washcount() const;
  inline void clear_washcount();
  static const int kWashcountFieldNumber = 5;
  inline ::google::protobuf::uint32 washcount() const;
  inline void set_washcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SmpPollution)
 private:
  inline void set_has_srctype();
  inline void clear_has_srctype();
  inline void set_has_dsttype();
  inline void clear_has_dsttype();
  inline void set_has_dstprj();
  inline void clear_has_dstprj();
  inline void set_has_washtype();
  inline void clear_has_washtype();
  inline void set_has_washcount();
  inline void clear_has_washcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 srctype_;
  ::google::protobuf::uint32 dsttype_;
  ::std::string* dstprj_;
  ::google::protobuf::uint32 washtype_;
  ::google::protobuf::uint32 washcount_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static SmpPollution* default_instance_;
};
// -------------------------------------------------------------------

class STReqSmpPollution : public ::google::protobuf::Message {
 public:
  STReqSmpPollution();
  virtual ~STReqSmpPollution();

  STReqSmpPollution(const STReqSmpPollution& from);

  inline STReqSmpPollution& operator=(const STReqSmpPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqSmpPollution& default_instance();

  void Swap(STReqSmpPollution* other);

  // implements Message ----------------------------------------------

  STReqSmpPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqSmpPollution& from);
  void MergeFrom(const STReqSmpPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SmpPollution smppollutionlist = 1;
  inline int smppollutionlist_size() const;
  inline void clear_smppollutionlist();
  static const int kSmppollutionlistFieldNumber = 1;
  inline const ::SmpPollution& smppollutionlist(int index) const;
  inline ::SmpPollution* mutable_smppollutionlist(int index);
  inline ::SmpPollution* add_smppollutionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::SmpPollution >&
      smppollutionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SmpPollution >*
      mutable_smppollutionlist();

  // @@protoc_insertion_point(class_scope:STReqSmpPollution)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SmpPollution > smppollutionlist_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqSmpPollution* default_instance_;
};
// -------------------------------------------------------------------

class BeepAlarm : public ::google::protobuf::Message {
 public:
  BeepAlarm();
  virtual ~BeepAlarm();

  BeepAlarm(const BeepAlarm& from);

  inline BeepAlarm& operator=(const BeepAlarm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeepAlarm& default_instance();

  void Swap(BeepAlarm* other);

  // implements Message ----------------------------------------------

  BeepAlarm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeepAlarm& from);
  void MergeFrom(const BeepAlarm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 alarmLevel = 1;
  inline bool has_alarmlevel() const;
  inline void clear_alarmlevel();
  static const int kAlarmLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 alarmlevel() const;
  inline void set_alarmlevel(::google::protobuf::uint32 value);

  // optional uint32 beepCount = 2;
  inline bool has_beepcount() const;
  inline void clear_beepcount();
  static const int kBeepCountFieldNumber = 2;
  inline ::google::protobuf::uint32 beepcount() const;
  inline void set_beepcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BeepAlarm)
 private:
  inline void set_has_alarmlevel();
  inline void clear_has_alarmlevel();
  inline void set_has_beepcount();
  inline void clear_has_beepcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 alarmlevel_;
  ::google::protobuf::uint32 beepcount_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static BeepAlarm* default_instance_;
};
// -------------------------------------------------------------------

class STReqBeepAlarm : public ::google::protobuf::Message {
 public:
  STReqBeepAlarm();
  virtual ~STReqBeepAlarm();

  STReqBeepAlarm(const STReqBeepAlarm& from);

  inline STReqBeepAlarm& operator=(const STReqBeepAlarm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STReqBeepAlarm& default_instance();

  void Swap(STReqBeepAlarm* other);

  // implements Message ----------------------------------------------

  STReqBeepAlarm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STReqBeepAlarm& from);
  void MergeFrom(const STReqBeepAlarm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 BeepEnable = 1;
  inline bool has_beepenable() const;
  inline void clear_beepenable();
  static const int kBeepEnableFieldNumber = 1;
  inline ::google::protobuf::uint32 beepenable() const;
  inline void set_beepenable(::google::protobuf::uint32 value);

  // repeated .BeepAlarm beepCountList = 2;
  inline int beepcountlist_size() const;
  inline void clear_beepcountlist();
  static const int kBeepCountListFieldNumber = 2;
  inline const ::BeepAlarm& beepcountlist(int index) const;
  inline ::BeepAlarm* mutable_beepcountlist(int index);
  inline ::BeepAlarm* add_beepcountlist();
  inline const ::google::protobuf::RepeatedPtrField< ::BeepAlarm >&
      beepcountlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::BeepAlarm >*
      mutable_beepcountlist();

  // @@protoc_insertion_point(class_scope:STReqBeepAlarm)
 private:
  inline void set_has_beepenable();
  inline void clear_has_beepenable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BeepAlarm > beepcountlist_;
  ::google::protobuf::uint32 beepenable_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STReqBeepAlarm* default_instance_;
};
// -------------------------------------------------------------------

class BloodAbsorbMode : public ::google::protobuf::Message {
 public:
  BloodAbsorbMode();
  virtual ~BloodAbsorbMode();

  BloodAbsorbMode(const BloodAbsorbMode& from);

  inline BloodAbsorbMode& operator=(const BloodAbsorbMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BloodAbsorbMode& default_instance();

  void Swap(BloodAbsorbMode* other);

  // implements Message ----------------------------------------------

  BloodAbsorbMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BloodAbsorbMode& from);
  void MergeFrom(const BloodAbsorbMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::google::protobuf::uint32 mode() const;
  inline void set_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BloodAbsorbMode)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mode_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static BloodAbsorbMode* default_instance_;
};
// -------------------------------------------------------------------

class RctPollution : public ::google::protobuf::Message {
 public:
  RctPollution();
  virtual ~RctPollution();

  RctPollution(const RctPollution& from);

  inline RctPollution& operator=(const RctPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RctPollution& default_instance();

  void Swap(RctPollution* other);

  // implements Message ----------------------------------------------

  RctPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RctPollution& from);
  void MergeFrom(const RctPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string srcprj = 1;
  inline bool has_srcprj() const;
  inline void clear_srcprj();
  static const int kSrcprjFieldNumber = 1;
  inline const ::std::string& srcprj() const;
  inline void set_srcprj(const ::std::string& value);
  inline void set_srcprj(const char* value);
  inline void set_srcprj(const char* value, size_t size);
  inline ::std::string* mutable_srcprj();
  inline ::std::string* release_srcprj();
  inline void set_allocated_srcprj(::std::string* srcprj);

  // optional string dstprj = 2;
  inline bool has_dstprj() const;
  inline void clear_dstprj();
  static const int kDstprjFieldNumber = 2;
  inline const ::std::string& dstprj() const;
  inline void set_dstprj(const ::std::string& value);
  inline void set_dstprj(const char* value);
  inline void set_dstprj(const char* value, size_t size);
  inline ::std::string* mutable_dstprj();
  inline ::std::string* release_dstprj();
  inline void set_allocated_dstprj(::std::string* dstprj);

  // optional uint32 washtype = 3;
  inline bool has_washtype() const;
  inline void clear_washtype();
  static const int kWashtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 washtype() const;
  inline void set_washtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RctPollution)
 private:
  inline void set_has_srcprj();
  inline void clear_has_srcprj();
  inline void set_has_dstprj();
  inline void clear_has_dstprj();
  inline void set_has_washtype();
  inline void clear_has_washtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* srcprj_;
  ::std::string* dstprj_;
  ::google::protobuf::uint32 washtype_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static RctPollution* default_instance_;
};
// -------------------------------------------------------------------

class STRCtRegPollution : public ::google::protobuf::Message {
 public:
  STRCtRegPollution();
  virtual ~STRCtRegPollution();

  STRCtRegPollution(const STRCtRegPollution& from);

  inline STRCtRegPollution& operator=(const STRCtRegPollution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STRCtRegPollution& default_instance();

  void Swap(STRCtRegPollution* other);

  // implements Message ----------------------------------------------

  STRCtRegPollution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STRCtRegPollution& from);
  void MergeFrom(const STRCtRegPollution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RctPollution rctpollutionlist = 1;
  inline int rctpollutionlist_size() const;
  inline void clear_rctpollutionlist();
  static const int kRctpollutionlistFieldNumber = 1;
  inline const ::RctPollution& rctpollutionlist(int index) const;
  inline ::RctPollution* mutable_rctpollutionlist(int index);
  inline ::RctPollution* add_rctpollutionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::RctPollution >&
      rctpollutionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::RctPollution >*
      mutable_rctpollutionlist();

  // @@protoc_insertion_point(class_scope:STRCtRegPollution)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RctPollution > rctpollutionlist_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STRCtRegPollution* default_instance_;
};
// -------------------------------------------------------------------

class STConsum : public ::google::protobuf::Message {
 public:
  STConsum();
  virtual ~STConsum();

  STConsum(const STConsum& from);

  inline STConsum& operator=(const STConsum& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STConsum& default_instance();

  void Swap(STConsum* other);

  // implements Message ----------------------------------------------

  STConsum* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STConsum& from);
  void MergeFrom(const STConsum& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 para = 2;
  inline bool has_para() const;
  inline void clear_para();
  static const int kParaFieldNumber = 2;
  inline ::google::protobuf::uint32 para() const;
  inline void set_para(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STConsum)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_para();
  inline void clear_has_para();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 para_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STConsum* default_instance_;
};
// -------------------------------------------------------------------

class STTempPara : public ::google::protobuf::Message {
 public:
  STTempPara();
  virtual ~STTempPara();

  STTempPara(const STTempPara& from);

  inline STTempPara& operator=(const STTempPara& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STTempPara& default_instance();

  void Swap(STTempPara* other);

  // implements Message ----------------------------------------------

  STTempPara* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STTempPara& from);
  void MergeFrom(const STTempPara& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tempreact = 1;
  inline bool has_tempreact() const;
  inline void clear_tempreact();
  static const int kTempreactFieldNumber = 1;
  inline ::google::protobuf::uint32 tempreact() const;
  inline void set_tempreact(::google::protobuf::uint32 value);

  // optional uint32 delta = 2;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 2;
  inline ::google::protobuf::uint32 delta() const;
  inline void set_delta(::google::protobuf::uint32 value);

  // optional uint32 tempwash1 = 3;
  inline bool has_tempwash1() const;
  inline void clear_tempwash1();
  static const int kTempwash1FieldNumber = 3;
  inline ::google::protobuf::uint32 tempwash1() const;
  inline void set_tempwash1(::google::protobuf::uint32 value);

  // optional uint32 tempwash2 = 4;
  inline bool has_tempwash2() const;
  inline void clear_tempwash2();
  static const int kTempwash2FieldNumber = 4;
  inline ::google::protobuf::uint32 tempwash2() const;
  inline void set_tempwash2(::google::protobuf::uint32 value);

  // optional uint32 tempwash3 = 5;
  inline bool has_tempwash3() const;
  inline void clear_tempwash3();
  static const int kTempwash3FieldNumber = 5;
  inline ::google::protobuf::uint32 tempwash3() const;
  inline void set_tempwash3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STTempPara)
 private:
  inline void set_has_tempreact();
  inline void clear_has_tempreact();
  inline void set_has_delta();
  inline void clear_has_delta();
  inline void set_has_tempwash1();
  inline void clear_has_tempwash1();
  inline void set_has_tempwash2();
  inline void clear_has_tempwash2();
  inline void set_has_tempwash3();
  inline void clear_has_tempwash3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tempreact_;
  ::google::protobuf::uint32 delta_;
  ::google::protobuf::uint32 tempwash1_;
  ::google::protobuf::uint32 tempwash2_;
  ::google::protobuf::uint32 tempwash3_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STTempPara* default_instance_;
};
// -------------------------------------------------------------------

class STShelfMng : public ::google::protobuf::Message {
 public:
  STShelfMng();
  virtual ~STShelfMng();

  STShelfMng(const STShelfMng& from);

  inline STShelfMng& operator=(const STShelfMng& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STShelfMng& default_instance();

  void Swap(STShelfMng* other);

  // implements Message ----------------------------------------------

  STShelfMng* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STShelfMng& from);
  void MergeFrom(const STShelfMng& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ShelfCtrlType ctrlType = 1;
  inline bool has_ctrltype() const;
  inline void clear_ctrltype();
  static const int kCtrlTypeFieldNumber = 1;
  inline ::ShelfCtrlType ctrltype() const;
  inline void set_ctrltype(::ShelfCtrlType value);

  // optional uint32 shelfNum = 2;
  inline bool has_shelfnum() const;
  inline void clear_shelfnum();
  static const int kShelfNumFieldNumber = 2;
  inline ::google::protobuf::uint32 shelfnum() const;
  inline void set_shelfnum(::google::protobuf::uint32 value);

  // repeated .STSmpBacode stSmpBarcode = 3;
  inline int stsmpbarcode_size() const;
  inline void clear_stsmpbarcode();
  static const int kStSmpBarcodeFieldNumber = 3;
  inline const ::STSmpBacode& stsmpbarcode(int index) const;
  inline ::STSmpBacode* mutable_stsmpbarcode(int index);
  inline ::STSmpBacode* add_stsmpbarcode();
  inline const ::google::protobuf::RepeatedPtrField< ::STSmpBacode >&
      stsmpbarcode() const;
  inline ::google::protobuf::RepeatedPtrField< ::STSmpBacode >*
      mutable_stsmpbarcode();

  // @@protoc_insertion_point(class_scope:STShelfMng)
 private:
  inline void set_has_ctrltype();
  inline void clear_has_ctrltype();
  inline void set_has_shelfnum();
  inline void clear_has_shelfnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int ctrltype_;
  ::google::protobuf::uint32 shelfnum_;
  ::google::protobuf::RepeatedPtrField< ::STSmpBacode > stsmpbarcode_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STShelfMng* default_instance_;
};
// -------------------------------------------------------------------

class STFreeShelf : public ::google::protobuf::Message {
 public:
  STFreeShelf();
  virtual ~STFreeShelf();

  STFreeShelf(const STFreeShelf& from);

  inline STFreeShelf& operator=(const STFreeShelf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STFreeShelf& default_instance();

  void Swap(STFreeShelf* other);

  // implements Message ----------------------------------------------

  STFreeShelf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STFreeShelf& from);
  void MergeFrom(const STFreeShelf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 loca = 1;
  inline bool has_loca() const;
  inline void clear_loca();
  static const int kLocaFieldNumber = 1;
  inline ::google::protobuf::uint32 loca() const;
  inline void set_loca(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STFreeShelf)
 private:
  inline void set_has_loca();
  inline void clear_has_loca();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 loca_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STFreeShelf* default_instance_;
};
// -------------------------------------------------------------------

class STSetShelf : public ::google::protobuf::Message {
 public:
  STSetShelf();
  virtual ~STSetShelf();

  STSetShelf(const STSetShelf& from);

  inline STSetShelf& operator=(const STSetShelf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STSetShelf& default_instance();

  void Swap(STSetShelf* other);

  // implements Message ----------------------------------------------

  STSetShelf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STSetShelf& from);
  void MergeFrom(const STSetShelf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shelfNum = 1;
  inline bool has_shelfnum() const;
  inline void clear_shelfnum();
  static const int kShelfNumFieldNumber = 1;
  inline ::google::protobuf::uint32 shelfnum() const;
  inline void set_shelfnum(::google::protobuf::uint32 value);

  // optional uint32 ulUnit = 2;
  inline bool has_ulunit() const;
  inline void clear_ulunit();
  static const int kUlUnitFieldNumber = 2;
  inline ::google::protobuf::uint32 ulunit() const;
  inline void set_ulunit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STSetShelf)
 private:
  inline void set_has_shelfnum();
  inline void clear_has_shelfnum();
  inline void set_has_ulunit();
  inline void clear_has_ulunit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 shelfnum_;
  ::google::protobuf::uint32 ulunit_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STSetShelf* default_instance_;
};
// -------------------------------------------------------------------

class STNotifState : public ::google::protobuf::Message {
 public:
  STNotifState();
  virtual ~STNotifState();

  STNotifState(const STNotifState& from);

  inline STNotifState& operator=(const STNotifState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STNotifState& default_instance();

  void Swap(STNotifState* other);

  // implements Message ----------------------------------------------

  STNotifState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STNotifState& from);
  void MergeFrom(const STNotifState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MachUnit enUnit = 1;
  inline bool has_enunit() const;
  inline void clear_enunit();
  static const int kEnUnitFieldNumber = 1;
  inline ::MachUnit enunit() const;
  inline void set_enunit(::MachUnit value);

  // optional uint32 ulLoca = 2;
  inline bool has_ulloca() const;
  inline void clear_ulloca();
  static const int kUlLocaFieldNumber = 2;
  inline ::google::protobuf::uint32 ulloca() const;
  inline void set_ulloca(::google::protobuf::uint32 value);

  // optional uint32 ulState = 3;
  inline bool has_ulstate() const;
  inline void clear_ulstate();
  static const int kUlStateFieldNumber = 3;
  inline ::google::protobuf::uint32 ulstate() const;
  inline void set_ulstate(::google::protobuf::uint32 value);

  // optional uint32 ulShelfNum = 4;
  inline bool has_ulshelfnum() const;
  inline void clear_ulshelfnum();
  static const int kUlShelfNumFieldNumber = 4;
  inline ::google::protobuf::uint32 ulshelfnum() const;
  inline void set_ulshelfnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:STNotifState)
 private:
  inline void set_has_enunit();
  inline void clear_has_enunit();
  inline void set_has_ulloca();
  inline void clear_has_ulloca();
  inline void set_has_ulstate();
  inline void clear_has_ulstate();
  inline void set_has_ulshelfnum();
  inline void clear_has_ulshelfnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int enunit_;
  ::google::protobuf::uint32 ulloca_;
  ::google::protobuf::uint32 ulstate_;
  ::google::protobuf::uint32 ulshelfnum_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STNotifState* default_instance_;
};
// -------------------------------------------------------------------

class STTempQuery : public ::google::protobuf::Message {
 public:
  STTempQuery();
  virtual ~STTempQuery();

  STTempQuery(const STTempQuery& from);

  inline STTempQuery& operator=(const STTempQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STTempQuery& default_instance();

  void Swap(STTempQuery* other);

  // implements Message ----------------------------------------------

  STTempQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STTempQuery& from);
  void MergeFrom(const STTempQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ulSubsysId = 1;
  inline bool has_ulsubsysid() const;
  inline void clear_ulsubsysid();
  static const int kUlSubsysIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ulsubsysid() const;
  inline void set_ulsubsysid(::google::protobuf::uint32 value);

  // repeated .STKeyValue temp = 2;
  inline int temp_size() const;
  inline void clear_temp();
  static const int kTempFieldNumber = 2;
  inline const ::STKeyValue& temp(int index) const;
  inline ::STKeyValue* mutable_temp(int index);
  inline ::STKeyValue* add_temp();
  inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
      temp() const;
  inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
      mutable_temp();

  // @@protoc_insertion_point(class_scope:STTempQuery)
 private:
  inline void set_has_ulsubsysid();
  inline void clear_has_ulsubsysid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::STKeyValue > temp_;
  ::google::protobuf::uint32 ulsubsysid_;
  friend void  protobuf_AddDesc_upmsg_2eproto();
  friend void protobuf_AssignDesc_upmsg_2eproto();
  friend void protobuf_ShutdownFile_upmsg_2eproto();

  void InitAsDefaultInstance();
  static STTempQuery* default_instance_;
};
// ===================================================================


// ===================================================================

// STMotorPara

// optional uint32 uiDrvId = 1;
inline bool STMotorPara::has_uidrvid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STMotorPara::set_has_uidrvid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STMotorPara::clear_has_uidrvid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STMotorPara::clear_uidrvid() {
  uidrvid_ = 0u;
  clear_has_uidrvid();
}
inline ::google::protobuf::uint32 STMotorPara::uidrvid() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiDrvId)
  return uidrvid_;
}
inline void STMotorPara::set_uidrvid(::google::protobuf::uint32 value) {
  set_has_uidrvid();
  uidrvid_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiDrvId)
}

// optional uint32 uiLineId = 2;
inline bool STMotorPara::has_uilineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STMotorPara::set_has_uilineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STMotorPara::clear_has_uilineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STMotorPara::clear_uilineid() {
  uilineid_ = 0u;
  clear_has_uilineid();
}
inline ::google::protobuf::uint32 STMotorPara::uilineid() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiLineId)
  return uilineid_;
}
inline void STMotorPara::set_uilineid(::google::protobuf::uint32 value) {
  set_has_uilineid();
  uilineid_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiLineId)
}

// optional uint32 uiStartFre = 3;
inline bool STMotorPara::has_uistartfre() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STMotorPara::set_has_uistartfre() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STMotorPara::clear_has_uistartfre() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STMotorPara::clear_uistartfre() {
  uistartfre_ = 0u;
  clear_has_uistartfre();
}
inline ::google::protobuf::uint32 STMotorPara::uistartfre() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiStartFre)
  return uistartfre_;
}
inline void STMotorPara::set_uistartfre(::google::protobuf::uint32 value) {
  set_has_uistartfre();
  uistartfre_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiStartFre)
}

// optional uint32 uiEndFre = 4;
inline bool STMotorPara::has_uiendfre() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STMotorPara::set_has_uiendfre() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STMotorPara::clear_has_uiendfre() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STMotorPara::clear_uiendfre() {
  uiendfre_ = 0u;
  clear_has_uiendfre();
}
inline ::google::protobuf::uint32 STMotorPara::uiendfre() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiEndFre)
  return uiendfre_;
}
inline void STMotorPara::set_uiendfre(::google::protobuf::uint32 value) {
  set_has_uiendfre();
  uiendfre_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiEndFre)
}

// optional uint32 uiEchStep = 5;
inline bool STMotorPara::has_uiechstep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void STMotorPara::set_has_uiechstep() {
  _has_bits_[0] |= 0x00000010u;
}
inline void STMotorPara::clear_has_uiechstep() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void STMotorPara::clear_uiechstep() {
  uiechstep_ = 0u;
  clear_has_uiechstep();
}
inline ::google::protobuf::uint32 STMotorPara::uiechstep() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiEchStep)
  return uiechstep_;
}
inline void STMotorPara::set_uiechstep(::google::protobuf::uint32 value) {
  set_has_uiechstep();
  uiechstep_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiEchStep)
}

// optional uint32 uiMaxLadder = 6;
inline bool STMotorPara::has_uimaxladder() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void STMotorPara::set_has_uimaxladder() {
  _has_bits_[0] |= 0x00000020u;
}
inline void STMotorPara::clear_has_uimaxladder() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void STMotorPara::clear_uimaxladder() {
  uimaxladder_ = 0u;
  clear_has_uimaxladder();
}
inline ::google::protobuf::uint32 STMotorPara::uimaxladder() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiMaxLadder)
  return uimaxladder_;
}
inline void STMotorPara::set_uimaxladder(::google::protobuf::uint32 value) {
  set_has_uimaxladder();
  uimaxladder_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiMaxLadder)
}

// optional uint32 uiSpar = 7;
inline bool STMotorPara::has_uispar() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void STMotorPara::set_has_uispar() {
  _has_bits_[0] |= 0x00000040u;
}
inline void STMotorPara::clear_has_uispar() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void STMotorPara::clear_uispar() {
  uispar_ = 0u;
  clear_has_uispar();
}
inline ::google::protobuf::uint32 STMotorPara::uispar() const {
  // @@protoc_insertion_point(field_get:STMotorPara.uiSpar)
  return uispar_;
}
inline void STMotorPara::set_uispar(::google::protobuf::uint32 value) {
  set_has_uispar();
  uispar_ = value;
  // @@protoc_insertion_point(field_set:STMotorPara.uiSpar)
}

// -------------------------------------------------------------------

// STSubSysMotor

// optional uint32 uiSysId = 1;
inline bool STSubSysMotor::has_uisysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STSubSysMotor::set_has_uisysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STSubSysMotor::clear_has_uisysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STSubSysMotor::clear_uisysid() {
  uisysid_ = 0u;
  clear_has_uisysid();
}
inline ::google::protobuf::uint32 STSubSysMotor::uisysid() const {
  // @@protoc_insertion_point(field_get:STSubSysMotor.uiSysId)
  return uisysid_;
}
inline void STSubSysMotor::set_uisysid(::google::protobuf::uint32 value) {
  set_has_uisysid();
  uisysid_ = value;
  // @@protoc_insertion_point(field_set:STSubSysMotor.uiSysId)
}

// repeated .STMotorPara stPara = 2;
inline int STSubSysMotor::stpara_size() const {
  return stpara_.size();
}
inline void STSubSysMotor::clear_stpara() {
  stpara_.Clear();
}
inline const ::STMotorPara& STSubSysMotor::stpara(int index) const {
  // @@protoc_insertion_point(field_get:STSubSysMotor.stPara)
  return stpara_.Get(index);
}
inline ::STMotorPara* STSubSysMotor::mutable_stpara(int index) {
  // @@protoc_insertion_point(field_mutable:STSubSysMotor.stPara)
  return stpara_.Mutable(index);
}
inline ::STMotorPara* STSubSysMotor::add_stpara() {
  // @@protoc_insertion_point(field_add:STSubSysMotor.stPara)
  return stpara_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STMotorPara >&
STSubSysMotor::stpara() const {
  // @@protoc_insertion_point(field_list:STSubSysMotor.stPara)
  return stpara_;
}
inline ::google::protobuf::RepeatedPtrField< ::STMotorPara >*
STSubSysMotor::mutable_stpara() {
  // @@protoc_insertion_point(field_mutable_list:STSubSysMotor.stPara)
  return &stpara_;
}

// -------------------------------------------------------------------

// STMotorList

// repeated .STSubSysMotor data = 1;
inline int STMotorList::data_size() const {
  return data_.size();
}
inline void STMotorList::clear_data() {
  data_.Clear();
}
inline const ::STSubSysMotor& STMotorList::data(int index) const {
  // @@protoc_insertion_point(field_get:STMotorList.data)
  return data_.Get(index);
}
inline ::STSubSysMotor* STMotorList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:STMotorList.data)
  return data_.Mutable(index);
}
inline ::STSubSysMotor* STMotorList::add_data() {
  // @@protoc_insertion_point(field_add:STMotorList.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STSubSysMotor >&
STMotorList::data() const {
  // @@protoc_insertion_point(field_list:STMotorList.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::STSubSysMotor >*
STMotorList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:STMotorList.data)
  return &data_;
}

// -------------------------------------------------------------------

// STReqReset

// optional bool bUpper = 1;
inline bool STReqReset::has_bupper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqReset::set_has_bupper() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqReset::clear_has_bupper() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqReset::clear_bupper() {
  bupper_ = false;
  clear_has_bupper();
}
inline bool STReqReset::bupper() const {
  // @@protoc_insertion_point(field_get:STReqReset.bUpper)
  return bupper_;
}
inline void STReqReset::set_bupper(bool value) {
  set_has_bupper();
  bupper_ = value;
  // @@protoc_insertion_point(field_set:STReqReset.bUpper)
}

// -------------------------------------------------------------------

// STReqAddLiquid

// optional .ServerPid enDevType = 1 [default = SPid_SmpNdl];
inline bool STReqAddLiquid::has_endevtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqAddLiquid::set_has_endevtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqAddLiquid::clear_has_endevtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqAddLiquid::clear_endevtype() {
  endevtype_ = 901;
  clear_has_endevtype();
}
inline ::ServerPid STReqAddLiquid::endevtype() const {
  // @@protoc_insertion_point(field_get:STReqAddLiquid.enDevType)
  return static_cast< ::ServerPid >(endevtype_);
}
inline void STReqAddLiquid::set_endevtype(::ServerPid value) {
  assert(::ServerPid_IsValid(value));
  set_has_endevtype();
  endevtype_ = value;
  // @@protoc_insertion_point(field_set:STReqAddLiquid.enDevType)
}

// optional uint32 uiCount = 2;
inline bool STReqAddLiquid::has_uicount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqAddLiquid::set_has_uicount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqAddLiquid::clear_has_uicount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqAddLiquid::clear_uicount() {
  uicount_ = 0u;
  clear_has_uicount();
}
inline ::google::protobuf::uint32 STReqAddLiquid::uicount() const {
  // @@protoc_insertion_point(field_get:STReqAddLiquid.uiCount)
  return uicount_;
}
inline void STReqAddLiquid::set_uicount(::google::protobuf::uint32 value) {
  set_has_uicount();
  uicount_ = value;
  // @@protoc_insertion_point(field_set:STReqAddLiquid.uiCount)
}

// optional uint32 uiVolume = 3;
inline bool STReqAddLiquid::has_uivolume() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqAddLiquid::set_has_uivolume() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqAddLiquid::clear_has_uivolume() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqAddLiquid::clear_uivolume() {
  uivolume_ = 0u;
  clear_has_uivolume();
}
inline ::google::protobuf::uint32 STReqAddLiquid::uivolume() const {
  // @@protoc_insertion_point(field_get:STReqAddLiquid.uiVolume)
  return uivolume_;
}
inline void STReqAddLiquid::set_uivolume(::google::protobuf::uint32 value) {
  set_has_uivolume();
  uivolume_ = value;
  // @@protoc_insertion_point(field_set:STReqAddLiquid.uiVolume)
}

// optional uint32 uiSpace = 4;
inline bool STReqAddLiquid::has_uispace() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STReqAddLiquid::set_has_uispace() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STReqAddLiquid::clear_has_uispace() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STReqAddLiquid::clear_uispace() {
  uispace_ = 0u;
  clear_has_uispace();
}
inline ::google::protobuf::uint32 STReqAddLiquid::uispace() const {
  // @@protoc_insertion_point(field_get:STReqAddLiquid.uiSpace)
  return uispace_;
}
inline void STReqAddLiquid::set_uispace(::google::protobuf::uint32 value) {
  set_has_uispace();
  uispace_ = value;
  // @@protoc_insertion_point(field_set:STReqAddLiquid.uiSpace)
}

// -------------------------------------------------------------------

// STResResult

// optional uint32 uiResult = 1;
inline bool STResResult::has_uiresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STResResult::set_has_uiresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STResResult::clear_has_uiresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STResResult::clear_uiresult() {
  uiresult_ = 0u;
  clear_has_uiresult();
}
inline ::google::protobuf::uint32 STResResult::uiresult() const {
  // @@protoc_insertion_point(field_get:STResResult.uiResult)
  return uiresult_;
}
inline void STResResult::set_uiresult(::google::protobuf::uint32 value) {
  set_has_uiresult();
  uiresult_ = value;
  // @@protoc_insertion_point(field_set:STResResult.uiResult)
}

// -------------------------------------------------------------------

// STReqAddTask

// optional uint32 uiTaskId = 1;
inline bool STReqAddTask::has_uitaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqAddTask::set_has_uitaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqAddTask::clear_has_uitaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqAddTask::clear_uitaskid() {
  uitaskid_ = 0u;
  clear_has_uitaskid();
}
inline ::google::protobuf::uint32 STReqAddTask::uitaskid() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiTaskId)
  return uitaskid_;
}
inline void STReqAddTask::set_uitaskid(::google::protobuf::uint32 value) {
  set_has_uitaskid();
  uitaskid_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiTaskId)
}

// optional uint32 uiSmpType = 2;
inline bool STReqAddTask::has_uismptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqAddTask::set_has_uismptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqAddTask::clear_has_uismptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqAddTask::clear_uismptype() {
  uismptype_ = 0u;
  clear_has_uismptype();
}
inline ::google::protobuf::uint32 STReqAddTask::uismptype() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiSmpType)
  return uismptype_;
}
inline void STReqAddTask::set_uismptype(::google::protobuf::uint32 value) {
  set_has_uismptype();
  uismptype_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiSmpType)
}

// optional uint32 uiMaintanType = 3;
inline bool STReqAddTask::has_uimaintantype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqAddTask::set_has_uimaintantype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqAddTask::clear_has_uimaintantype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqAddTask::clear_uimaintantype() {
  uimaintantype_ = 0u;
  clear_has_uimaintantype();
}
inline ::google::protobuf::uint32 STReqAddTask::uimaintantype() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiMaintanType)
  return uimaintantype_;
}
inline void STReqAddTask::set_uimaintantype(::google::protobuf::uint32 value) {
  set_has_uimaintantype();
  uimaintantype_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiMaintanType)
}

// optional bytes strProjectName = 4;
inline bool STReqAddTask::has_strprojectname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STReqAddTask::set_has_strprojectname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STReqAddTask::clear_has_strprojectname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STReqAddTask::clear_strprojectname() {
  if (strprojectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strprojectname_->clear();
  }
  clear_has_strprojectname();
}
inline const ::std::string& STReqAddTask::strprojectname() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.strProjectName)
  return *strprojectname_;
}
inline void STReqAddTask::set_strprojectname(const ::std::string& value) {
  set_has_strprojectname();
  if (strprojectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strprojectname_ = new ::std::string;
  }
  strprojectname_->assign(value);
  // @@protoc_insertion_point(field_set:STReqAddTask.strProjectName)
}
inline void STReqAddTask::set_strprojectname(const char* value) {
  set_has_strprojectname();
  if (strprojectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strprojectname_ = new ::std::string;
  }
  strprojectname_->assign(value);
  // @@protoc_insertion_point(field_set_char:STReqAddTask.strProjectName)
}
inline void STReqAddTask::set_strprojectname(const void* value, size_t size) {
  set_has_strprojectname();
  if (strprojectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strprojectname_ = new ::std::string;
  }
  strprojectname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STReqAddTask.strProjectName)
}
inline ::std::string* STReqAddTask::mutable_strprojectname() {
  set_has_strprojectname();
  if (strprojectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strprojectname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STReqAddTask.strProjectName)
  return strprojectname_;
}
inline ::std::string* STReqAddTask::release_strprojectname() {
  clear_has_strprojectname();
  if (strprojectname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strprojectname_;
    strprojectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STReqAddTask::set_allocated_strprojectname(::std::string* strprojectname) {
  if (strprojectname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strprojectname_;
  }
  if (strprojectname) {
    set_has_strprojectname();
    strprojectname_ = strprojectname;
  } else {
    clear_has_strprojectname();
    strprojectname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STReqAddTask.strProjectName)
}

// repeated .STKeyValue stWaveChs = 5;
inline int STReqAddTask::stwavechs_size() const {
  return stwavechs_.size();
}
inline void STReqAddTask::clear_stwavechs() {
  stwavechs_.Clear();
}
inline const ::STKeyValue& STReqAddTask::stwavechs(int index) const {
  // @@protoc_insertion_point(field_get:STReqAddTask.stWaveChs)
  return stwavechs_.Get(index);
}
inline ::STKeyValue* STReqAddTask::mutable_stwavechs(int index) {
  // @@protoc_insertion_point(field_mutable:STReqAddTask.stWaveChs)
  return stwavechs_.Mutable(index);
}
inline ::STKeyValue* STReqAddTask::add_stwavechs() {
  // @@protoc_insertion_point(field_add:STReqAddTask.stWaveChs)
  return stwavechs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
STReqAddTask::stwavechs() const {
  // @@protoc_insertion_point(field_list:STReqAddTask.stWaveChs)
  return stwavechs_;
}
inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
STReqAddTask::mutable_stwavechs() {
  // @@protoc_insertion_point(field_mutable_list:STReqAddTask.stWaveChs)
  return &stwavechs_;
}

// optional .STLiquidInfo stSmpInfo = 6;
inline bool STReqAddTask::has_stsmpinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void STReqAddTask::set_has_stsmpinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void STReqAddTask::clear_has_stsmpinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void STReqAddTask::clear_stsmpinfo() {
  if (stsmpinfo_ != NULL) stsmpinfo_->::STLiquidInfo::Clear();
  clear_has_stsmpinfo();
}
inline const ::STLiquidInfo& STReqAddTask::stsmpinfo() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.stSmpInfo)
  return stsmpinfo_ != NULL ? *stsmpinfo_ : *default_instance_->stsmpinfo_;
}
inline ::STLiquidInfo* STReqAddTask::mutable_stsmpinfo() {
  set_has_stsmpinfo();
  if (stsmpinfo_ == NULL) stsmpinfo_ = new ::STLiquidInfo;
  // @@protoc_insertion_point(field_mutable:STReqAddTask.stSmpInfo)
  return stsmpinfo_;
}
inline ::STLiquidInfo* STReqAddTask::release_stsmpinfo() {
  clear_has_stsmpinfo();
  ::STLiquidInfo* temp = stsmpinfo_;
  stsmpinfo_ = NULL;
  return temp;
}
inline void STReqAddTask::set_allocated_stsmpinfo(::STLiquidInfo* stsmpinfo) {
  delete stsmpinfo_;
  stsmpinfo_ = stsmpinfo;
  if (stsmpinfo) {
    set_has_stsmpinfo();
  } else {
    clear_has_stsmpinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:STReqAddTask.stSmpInfo)
}

// repeated .STLiquidInfo stReagents = 7;
inline int STReqAddTask::streagents_size() const {
  return streagents_.size();
}
inline void STReqAddTask::clear_streagents() {
  streagents_.Clear();
}
inline const ::STLiquidInfo& STReqAddTask::streagents(int index) const {
  // @@protoc_insertion_point(field_get:STReqAddTask.stReagents)
  return streagents_.Get(index);
}
inline ::STLiquidInfo* STReqAddTask::mutable_streagents(int index) {
  // @@protoc_insertion_point(field_mutable:STReqAddTask.stReagents)
  return streagents_.Mutable(index);
}
inline ::STLiquidInfo* STReqAddTask::add_streagents() {
  // @@protoc_insertion_point(field_add:STReqAddTask.stReagents)
  return streagents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STLiquidInfo >&
STReqAddTask::streagents() const {
  // @@protoc_insertion_point(field_list:STReqAddTask.stReagents)
  return streagents_;
}
inline ::google::protobuf::RepeatedPtrField< ::STLiquidInfo >*
STReqAddTask::mutable_streagents() {
  // @@protoc_insertion_point(field_mutable_list:STReqAddTask.stReagents)
  return &streagents_;
}

// optional uint32 uiTestPoint = 8;
inline bool STReqAddTask::has_uitestpoint() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void STReqAddTask::set_has_uitestpoint() {
  _has_bits_[0] |= 0x00000080u;
}
inline void STReqAddTask::clear_has_uitestpoint() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void STReqAddTask::clear_uitestpoint() {
  uitestpoint_ = 0u;
  clear_has_uitestpoint();
}
inline ::google::protobuf::uint32 STReqAddTask::uitestpoint() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiTestPoint)
  return uitestpoint_;
}
inline void STReqAddTask::set_uitestpoint(::google::protobuf::uint32 value) {
  set_has_uitestpoint();
  uitestpoint_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiTestPoint)
}

// optional uint32 uiDiluentVol = 9;
inline bool STReqAddTask::has_uidiluentvol() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void STReqAddTask::set_has_uidiluentvol() {
  _has_bits_[0] |= 0x00000100u;
}
inline void STReqAddTask::clear_has_uidiluentvol() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void STReqAddTask::clear_uidiluentvol() {
  uidiluentvol_ = 0u;
  clear_has_uidiluentvol();
}
inline ::google::protobuf::uint32 STReqAddTask::uidiluentvol() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiDiluentVol)
  return uidiluentvol_;
}
inline void STReqAddTask::set_uidiluentvol(::google::protobuf::uint32 value) {
  set_has_uidiluentvol();
  uidiluentvol_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiDiluentVol)
}

// optional uint32 uiLiquidVol = 10;
inline bool STReqAddTask::has_uiliquidvol() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void STReqAddTask::set_has_uiliquidvol() {
  _has_bits_[0] |= 0x00000200u;
}
inline void STReqAddTask::clear_has_uiliquidvol() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void STReqAddTask::clear_uiliquidvol() {
  uiliquidvol_ = 0u;
  clear_has_uiliquidvol();
}
inline ::google::protobuf::uint32 STReqAddTask::uiliquidvol() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiLiquidVol)
  return uiliquidvol_;
}
inline void STReqAddTask::set_uiliquidvol(::google::protobuf::uint32 value) {
  set_has_uiliquidvol();
  uiliquidvol_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiLiquidVol)
}

// optional uint32 uiSmpId = 11;
inline bool STReqAddTask::has_uismpid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void STReqAddTask::set_has_uismpid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void STReqAddTask::clear_has_uismpid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void STReqAddTask::clear_uismpid() {
  uismpid_ = 0u;
  clear_has_uismpid();
}
inline ::google::protobuf::uint32 STReqAddTask::uismpid() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiSmpId)
  return uismpid_;
}
inline void STReqAddTask::set_uismpid(::google::protobuf::uint32 value) {
  set_has_uismpid();
  uismpid_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiSmpId)
}

// optional uint32 uiBatchId = 12;
inline bool STReqAddTask::has_uibatchid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void STReqAddTask::set_has_uibatchid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void STReqAddTask::clear_has_uibatchid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void STReqAddTask::clear_uibatchid() {
  uibatchid_ = 0u;
  clear_has_uibatchid();
}
inline ::google::protobuf::uint32 STReqAddTask::uibatchid() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.uiBatchId)
  return uibatchid_;
}
inline void STReqAddTask::set_uibatchid(::google::protobuf::uint32 value) {
  set_has_uibatchid();
  uibatchid_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.uiBatchId)
}

// optional .ReactCircle enCircle = 13 [default = Circle_All];
inline bool STReqAddTask::has_encircle() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void STReqAddTask::set_has_encircle() {
  _has_bits_[0] |= 0x00001000u;
}
inline void STReqAddTask::clear_has_encircle() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void STReqAddTask::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STReqAddTask::encircle() const {
  // @@protoc_insertion_point(field_get:STReqAddTask.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STReqAddTask::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STReqAddTask.enCircle)
}

// -------------------------------------------------------------------

// STResAddTask

// optional uint32 uiTaskId = 1;
inline bool STResAddTask::has_uitaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STResAddTask::set_has_uitaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STResAddTask::clear_has_uitaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STResAddTask::clear_uitaskid() {
  uitaskid_ = 0u;
  clear_has_uitaskid();
}
inline ::google::protobuf::uint32 STResAddTask::uitaskid() const {
  // @@protoc_insertion_point(field_get:STResAddTask.uiTaskId)
  return uitaskid_;
}
inline void STResAddTask::set_uitaskid(::google::protobuf::uint32 value) {
  set_has_uitaskid();
  uitaskid_ = value;
  // @@protoc_insertion_point(field_set:STResAddTask.uiTaskId)
}

// optional uint32 uiResult = 2;
inline bool STResAddTask::has_uiresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STResAddTask::set_has_uiresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STResAddTask::clear_has_uiresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STResAddTask::clear_uiresult() {
  uiresult_ = 0u;
  clear_has_uiresult();
}
inline ::google::protobuf::uint32 STResAddTask::uiresult() const {
  // @@protoc_insertion_point(field_get:STResAddTask.uiResult)
  return uiresult_;
}
inline void STResAddTask::set_uiresult(::google::protobuf::uint32 value) {
  set_has_uiresult();
  uiresult_ = value;
  // @@protoc_insertion_point(field_set:STResAddTask.uiResult)
}

// optional uint32 uiMaintanType = 3;
inline bool STResAddTask::has_uimaintantype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STResAddTask::set_has_uimaintantype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STResAddTask::clear_has_uimaintantype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STResAddTask::clear_uimaintantype() {
  uimaintantype_ = 0u;
  clear_has_uimaintantype();
}
inline ::google::protobuf::uint32 STResAddTask::uimaintantype() const {
  // @@protoc_insertion_point(field_get:STResAddTask.uiMaintanType)
  return uimaintantype_;
}
inline void STResAddTask::set_uimaintantype(::google::protobuf::uint32 value) {
  set_has_uimaintantype();
  uimaintantype_ = value;
  // @@protoc_insertion_point(field_set:STResAddTask.uiMaintanType)
}

// optional uint32 uiRCupno = 4;
inline bool STResAddTask::has_uircupno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STResAddTask::set_has_uircupno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STResAddTask::clear_has_uircupno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STResAddTask::clear_uircupno() {
  uircupno_ = 0u;
  clear_has_uircupno();
}
inline ::google::protobuf::uint32 STResAddTask::uircupno() const {
  // @@protoc_insertion_point(field_get:STResAddTask.uiRCupno)
  return uircupno_;
}
inline void STResAddTask::set_uircupno(::google::protobuf::uint32 value) {
  set_has_uircupno();
  uircupno_ = value;
  // @@protoc_insertion_point(field_set:STResAddTask.uiRCupno)
}

// optional bytes szPrjName = 5;
inline bool STResAddTask::has_szprjname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void STResAddTask::set_has_szprjname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void STResAddTask::clear_has_szprjname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void STResAddTask::clear_szprjname() {
  if (szprjname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szprjname_->clear();
  }
  clear_has_szprjname();
}
inline const ::std::string& STResAddTask::szprjname() const {
  // @@protoc_insertion_point(field_get:STResAddTask.szPrjName)
  return *szprjname_;
}
inline void STResAddTask::set_szprjname(const ::std::string& value) {
  set_has_szprjname();
  if (szprjname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szprjname_ = new ::std::string;
  }
  szprjname_->assign(value);
  // @@protoc_insertion_point(field_set:STResAddTask.szPrjName)
}
inline void STResAddTask::set_szprjname(const char* value) {
  set_has_szprjname();
  if (szprjname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szprjname_ = new ::std::string;
  }
  szprjname_->assign(value);
  // @@protoc_insertion_point(field_set_char:STResAddTask.szPrjName)
}
inline void STResAddTask::set_szprjname(const void* value, size_t size) {
  set_has_szprjname();
  if (szprjname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szprjname_ = new ::std::string;
  }
  szprjname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STResAddTask.szPrjName)
}
inline ::std::string* STResAddTask::mutable_szprjname() {
  set_has_szprjname();
  if (szprjname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szprjname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STResAddTask.szPrjName)
  return szprjname_;
}
inline ::std::string* STResAddTask::release_szprjname() {
  clear_has_szprjname();
  if (szprjname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szprjname_;
    szprjname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STResAddTask::set_allocated_szprjname(::std::string* szprjname) {
  if (szprjname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szprjname_;
  }
  if (szprjname) {
    set_has_szprjname();
    szprjname_ = szprjname;
  } else {
    clear_has_szprjname();
    szprjname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STResAddTask.szPrjName)
}

// repeated .STAdPoints stAdPoints = 6;
inline int STResAddTask::stadpoints_size() const {
  return stadpoints_.size();
}
inline void STResAddTask::clear_stadpoints() {
  stadpoints_.Clear();
}
inline const ::STAdPoints& STResAddTask::stadpoints(int index) const {
  // @@protoc_insertion_point(field_get:STResAddTask.stAdPoints)
  return stadpoints_.Get(index);
}
inline ::STAdPoints* STResAddTask::mutable_stadpoints(int index) {
  // @@protoc_insertion_point(field_mutable:STResAddTask.stAdPoints)
  return stadpoints_.Mutable(index);
}
inline ::STAdPoints* STResAddTask::add_stadpoints() {
  // @@protoc_insertion_point(field_add:STResAddTask.stAdPoints)
  return stadpoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STAdPoints >&
STResAddTask::stadpoints() const {
  // @@protoc_insertion_point(field_list:STResAddTask.stAdPoints)
  return stadpoints_;
}
inline ::google::protobuf::RepeatedPtrField< ::STAdPoints >*
STResAddTask::mutable_stadpoints() {
  // @@protoc_insertion_point(field_mutable_list:STResAddTask.stAdPoints)
  return &stadpoints_;
}

// optional .STCupPos stSmpPos = 7;
inline bool STResAddTask::has_stsmppos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void STResAddTask::set_has_stsmppos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void STResAddTask::clear_has_stsmppos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void STResAddTask::clear_stsmppos() {
  if (stsmppos_ != NULL) stsmppos_->::STCupPos::Clear();
  clear_has_stsmppos();
}
inline const ::STCupPos& STResAddTask::stsmppos() const {
  // @@protoc_insertion_point(field_get:STResAddTask.stSmpPos)
  return stsmppos_ != NULL ? *stsmppos_ : *default_instance_->stsmppos_;
}
inline ::STCupPos* STResAddTask::mutable_stsmppos() {
  set_has_stsmppos();
  if (stsmppos_ == NULL) stsmppos_ = new ::STCupPos;
  // @@protoc_insertion_point(field_mutable:STResAddTask.stSmpPos)
  return stsmppos_;
}
inline ::STCupPos* STResAddTask::release_stsmppos() {
  clear_has_stsmppos();
  ::STCupPos* temp = stsmppos_;
  stsmppos_ = NULL;
  return temp;
}
inline void STResAddTask::set_allocated_stsmppos(::STCupPos* stsmppos) {
  delete stsmppos_;
  stsmppos_ = stsmppos;
  if (stsmppos) {
    set_has_stsmppos();
  } else {
    clear_has_stsmppos();
  }
  // @@protoc_insertion_point(field_set_allocated:STResAddTask.stSmpPos)
}

// optional .ReactCircle enCircle = 8;
inline bool STResAddTask::has_encircle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void STResAddTask::set_has_encircle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void STResAddTask::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void STResAddTask::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STResAddTask::encircle() const {
  // @@protoc_insertion_point(field_get:STResAddTask.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STResAddTask::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STResAddTask.enCircle)
}

// -------------------------------------------------------------------

// STNotifyRctCupStatus

// repeated .STRctCupStatus stCupStatus = 1;
inline int STNotifyRctCupStatus::stcupstatus_size() const {
  return stcupstatus_.size();
}
inline void STNotifyRctCupStatus::clear_stcupstatus() {
  stcupstatus_.Clear();
}
inline const ::STRctCupStatus& STNotifyRctCupStatus::stcupstatus(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyRctCupStatus.stCupStatus)
  return stcupstatus_.Get(index);
}
inline ::STRctCupStatus* STNotifyRctCupStatus::mutable_stcupstatus(int index) {
  // @@protoc_insertion_point(field_mutable:STNotifyRctCupStatus.stCupStatus)
  return stcupstatus_.Mutable(index);
}
inline ::STRctCupStatus* STNotifyRctCupStatus::add_stcupstatus() {
  // @@protoc_insertion_point(field_add:STNotifyRctCupStatus.stCupStatus)
  return stcupstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STRctCupStatus >&
STNotifyRctCupStatus::stcupstatus() const {
  // @@protoc_insertion_point(field_list:STNotifyRctCupStatus.stCupStatus)
  return stcupstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::STRctCupStatus >*
STNotifyRctCupStatus::mutable_stcupstatus() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyRctCupStatus.stCupStatus)
  return &stcupstatus_;
}

// optional .ReactCircle enCircle = 2;
inline bool STNotifyRctCupStatus::has_encircle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifyRctCupStatus::set_has_encircle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifyRctCupStatus::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifyRctCupStatus::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STNotifyRctCupStatus::encircle() const {
  // @@protoc_insertion_point(field_get:STNotifyRctCupStatus.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STNotifyRctCupStatus::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STNotifyRctCupStatus.enCircle)
}

// -------------------------------------------------------------------

// STReqMarginScan

// repeated .STCupPos stScanCup = 1;
inline int STReqMarginScan::stscancup_size() const {
  return stscancup_.size();
}
inline void STReqMarginScan::clear_stscancup() {
  stscancup_.Clear();
}
inline const ::STCupPos& STReqMarginScan::stscancup(int index) const {
  // @@protoc_insertion_point(field_get:STReqMarginScan.stScanCup)
  return stscancup_.Get(index);
}
inline ::STCupPos* STReqMarginScan::mutable_stscancup(int index) {
  // @@protoc_insertion_point(field_mutable:STReqMarginScan.stScanCup)
  return stscancup_.Mutable(index);
}
inline ::STCupPos* STReqMarginScan::add_stscancup() {
  // @@protoc_insertion_point(field_add:STReqMarginScan.stScanCup)
  return stscancup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
STReqMarginScan::stscancup() const {
  // @@protoc_insertion_point(field_list:STReqMarginScan.stScanCup)
  return stscancup_;
}
inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
STReqMarginScan::mutable_stscancup() {
  // @@protoc_insertion_point(field_mutable_list:STReqMarginScan.stScanCup)
  return &stscancup_;
}

// -------------------------------------------------------------------

// STResMarginScan

// repeated .STMarginScan stMarginInfo = 1;
inline int STResMarginScan::stmargininfo_size() const {
  return stmargininfo_.size();
}
inline void STResMarginScan::clear_stmargininfo() {
  stmargininfo_.Clear();
}
inline const ::STMarginScan& STResMarginScan::stmargininfo(int index) const {
  // @@protoc_insertion_point(field_get:STResMarginScan.stMarginInfo)
  return stmargininfo_.Get(index);
}
inline ::STMarginScan* STResMarginScan::mutable_stmargininfo(int index) {
  // @@protoc_insertion_point(field_mutable:STResMarginScan.stMarginInfo)
  return stmargininfo_.Mutable(index);
}
inline ::STMarginScan* STResMarginScan::add_stmargininfo() {
  // @@protoc_insertion_point(field_add:STResMarginScan.stMarginInfo)
  return stmargininfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STMarginScan >&
STResMarginScan::stmargininfo() const {
  // @@protoc_insertion_point(field_list:STResMarginScan.stMarginInfo)
  return stmargininfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STMarginScan >*
STResMarginScan::mutable_stmargininfo() {
  // @@protoc_insertion_point(field_mutable_list:STResMarginScan.stMarginInfo)
  return &stmargininfo_;
}

// optional uint32 uiMarginscan = 2;
inline bool STResMarginScan::has_uimarginscan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STResMarginScan::set_has_uimarginscan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STResMarginScan::clear_has_uimarginscan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STResMarginScan::clear_uimarginscan() {
  uimarginscan_ = 0u;
  clear_has_uimarginscan();
}
inline ::google::protobuf::uint32 STResMarginScan::uimarginscan() const {
  // @@protoc_insertion_point(field_get:STResMarginScan.uiMarginscan)
  return uimarginscan_;
}
inline void STResMarginScan::set_uimarginscan(::google::protobuf::uint32 value) {
  set_has_uimarginscan();
  uimarginscan_ = value;
  // @@protoc_insertion_point(field_set:STResMarginScan.uiMarginscan)
}

// -------------------------------------------------------------------

// STReqAirOut

// optional .ReactCircle enCircle = 1;
inline bool STReqAirOut::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqAirOut::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqAirOut::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqAirOut::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STReqAirOut::encircle() const {
  // @@protoc_insertion_point(field_get:STReqAirOut.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STReqAirOut::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STReqAirOut.enCircle)
}

// optional uint32 uiOutTimes = 2;
inline bool STReqAirOut::has_uiouttimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqAirOut::set_has_uiouttimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqAirOut::clear_has_uiouttimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqAirOut::clear_uiouttimes() {
  uiouttimes_ = 0u;
  clear_has_uiouttimes();
}
inline ::google::protobuf::uint32 STReqAirOut::uiouttimes() const {
  // @@protoc_insertion_point(field_get:STReqAirOut.uiOutTimes)
  return uiouttimes_;
}
inline void STReqAirOut::set_uiouttimes(::google::protobuf::uint32 value) {
  set_has_uiouttimes();
  uiouttimes_ = value;
  // @@protoc_insertion_point(field_set:STReqAirOut.uiOutTimes)
}

// -------------------------------------------------------------------

// STReqIntensifyWash

// optional .ReactCircle enCircle = 1;
inline bool STReqIntensifyWash::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqIntensifyWash::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqIntensifyWash::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqIntensifyWash::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STReqIntensifyWash::encircle() const {
  // @@protoc_insertion_point(field_get:STReqIntensifyWash.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STReqIntensifyWash::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STReqIntensifyWash.enCircle)
}

// optional uint32 washType = 2;
inline bool STReqIntensifyWash::has_washtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqIntensifyWash::set_has_washtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqIntensifyWash::clear_has_washtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqIntensifyWash::clear_washtype() {
  washtype_ = 0u;
  clear_has_washtype();
}
inline ::google::protobuf::uint32 STReqIntensifyWash::washtype() const {
  // @@protoc_insertion_point(field_get:STReqIntensifyWash.washType)
  return washtype_;
}
inline void STReqIntensifyWash::set_washtype(::google::protobuf::uint32 value) {
  set_has_washtype();
  washtype_ = value;
  // @@protoc_insertion_point(field_set:STReqIntensifyWash.washType)
}

// optional uint32 washTimes = 3;
inline bool STReqIntensifyWash::has_washtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqIntensifyWash::set_has_washtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqIntensifyWash::clear_has_washtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqIntensifyWash::clear_washtimes() {
  washtimes_ = 0u;
  clear_has_washtimes();
}
inline ::google::protobuf::uint32 STReqIntensifyWash::washtimes() const {
  // @@protoc_insertion_point(field_get:STReqIntensifyWash.washTimes)
  return washtimes_;
}
inline void STReqIntensifyWash::set_washtimes(::google::protobuf::uint32 value) {
  set_has_washtimes();
  washtimes_ = value;
  // @@protoc_insertion_point(field_set:STReqIntensifyWash.washTimes)
}

// -------------------------------------------------------------------

// STReqBarcodeScan

// repeated .STCupPos stReagCup = 1;
inline int STReqBarcodeScan::streagcup_size() const {
  return streagcup_.size();
}
inline void STReqBarcodeScan::clear_streagcup() {
  streagcup_.Clear();
}
inline const ::STCupPos& STReqBarcodeScan::streagcup(int index) const {
  // @@protoc_insertion_point(field_get:STReqBarcodeScan.stReagCup)
  return streagcup_.Get(index);
}
inline ::STCupPos* STReqBarcodeScan::mutable_streagcup(int index) {
  // @@protoc_insertion_point(field_mutable:STReqBarcodeScan.stReagCup)
  return streagcup_.Mutable(index);
}
inline ::STCupPos* STReqBarcodeScan::add_streagcup() {
  // @@protoc_insertion_point(field_add:STReqBarcodeScan.stReagCup)
  return streagcup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
STReqBarcodeScan::streagcup() const {
  // @@protoc_insertion_point(field_list:STReqBarcodeScan.stReagCup)
  return streagcup_;
}
inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
STReqBarcodeScan::mutable_streagcup() {
  // @@protoc_insertion_point(field_mutable_list:STReqBarcodeScan.stReagCup)
  return &streagcup_;
}

// repeated .STCupPos stSmpCup = 2;
inline int STReqBarcodeScan::stsmpcup_size() const {
  return stsmpcup_.size();
}
inline void STReqBarcodeScan::clear_stsmpcup() {
  stsmpcup_.Clear();
}
inline const ::STCupPos& STReqBarcodeScan::stsmpcup(int index) const {
  // @@protoc_insertion_point(field_get:STReqBarcodeScan.stSmpCup)
  return stsmpcup_.Get(index);
}
inline ::STCupPos* STReqBarcodeScan::mutable_stsmpcup(int index) {
  // @@protoc_insertion_point(field_mutable:STReqBarcodeScan.stSmpCup)
  return stsmpcup_.Mutable(index);
}
inline ::STCupPos* STReqBarcodeScan::add_stsmpcup() {
  // @@protoc_insertion_point(field_add:STReqBarcodeScan.stSmpCup)
  return stsmpcup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STCupPos >&
STReqBarcodeScan::stsmpcup() const {
  // @@protoc_insertion_point(field_list:STReqBarcodeScan.stSmpCup)
  return stsmpcup_;
}
inline ::google::protobuf::RepeatedPtrField< ::STCupPos >*
STReqBarcodeScan::mutable_stsmpcup() {
  // @@protoc_insertion_point(field_mutable_list:STReqBarcodeScan.stSmpCup)
  return &stsmpcup_;
}

// -------------------------------------------------------------------

// STResBarcodeScan

// repeated .STBarcodeScan stReagInfo = 1;
inline int STResBarcodeScan::streaginfo_size() const {
  return streaginfo_.size();
}
inline void STResBarcodeScan::clear_streaginfo() {
  streaginfo_.Clear();
}
inline const ::STBarcodeScan& STResBarcodeScan::streaginfo(int index) const {
  // @@protoc_insertion_point(field_get:STResBarcodeScan.stReagInfo)
  return streaginfo_.Get(index);
}
inline ::STBarcodeScan* STResBarcodeScan::mutable_streaginfo(int index) {
  // @@protoc_insertion_point(field_mutable:STResBarcodeScan.stReagInfo)
  return streaginfo_.Mutable(index);
}
inline ::STBarcodeScan* STResBarcodeScan::add_streaginfo() {
  // @@protoc_insertion_point(field_add:STResBarcodeScan.stReagInfo)
  return streaginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >&
STResBarcodeScan::streaginfo() const {
  // @@protoc_insertion_point(field_list:STResBarcodeScan.stReagInfo)
  return streaginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >*
STResBarcodeScan::mutable_streaginfo() {
  // @@protoc_insertion_point(field_mutable_list:STResBarcodeScan.stReagInfo)
  return &streaginfo_;
}

// repeated .STBarcodeScan stSmpInfo = 2;
inline int STResBarcodeScan::stsmpinfo_size() const {
  return stsmpinfo_.size();
}
inline void STResBarcodeScan::clear_stsmpinfo() {
  stsmpinfo_.Clear();
}
inline const ::STBarcodeScan& STResBarcodeScan::stsmpinfo(int index) const {
  // @@protoc_insertion_point(field_get:STResBarcodeScan.stSmpInfo)
  return stsmpinfo_.Get(index);
}
inline ::STBarcodeScan* STResBarcodeScan::mutable_stsmpinfo(int index) {
  // @@protoc_insertion_point(field_mutable:STResBarcodeScan.stSmpInfo)
  return stsmpinfo_.Mutable(index);
}
inline ::STBarcodeScan* STResBarcodeScan::add_stsmpinfo() {
  // @@protoc_insertion_point(field_add:STResBarcodeScan.stSmpInfo)
  return stsmpinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >&
STResBarcodeScan::stsmpinfo() const {
  // @@protoc_insertion_point(field_list:STResBarcodeScan.stSmpInfo)
  return stsmpinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STBarcodeScan >*
STResBarcodeScan::mutable_stsmpinfo() {
  // @@protoc_insertion_point(field_mutable_list:STResBarcodeScan.stSmpInfo)
  return &stsmpinfo_;
}

// -------------------------------------------------------------------

// STReqReagentSuspend

// optional bool bSuspend = 1;
inline bool STReqReagentSuspend::has_bsuspend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqReagentSuspend::set_has_bsuspend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqReagentSuspend::clear_has_bsuspend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqReagentSuspend::clear_bsuspend() {
  bsuspend_ = false;
  clear_has_bsuspend();
}
inline bool STReqReagentSuspend::bsuspend() const {
  // @@protoc_insertion_point(field_get:STReqReagentSuspend.bSuspend)
  return bsuspend_;
}
inline void STReqReagentSuspend::set_bsuspend(bool value) {
  set_has_bsuspend();
  bsuspend_ = value;
  // @@protoc_insertion_point(field_set:STReqReagentSuspend.bSuspend)
}

// -------------------------------------------------------------------

// STNotifyReagInfo

// repeated .STThreshold stThreshold = 1;
inline int STNotifyReagInfo::stthreshold_size() const {
  return stthreshold_.size();
}
inline void STNotifyReagInfo::clear_stthreshold() {
  stthreshold_.Clear();
}
inline const ::STThreshold& STNotifyReagInfo::stthreshold(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyReagInfo.stThreshold)
  return stthreshold_.Get(index);
}
inline ::STThreshold* STNotifyReagInfo::mutable_stthreshold(int index) {
  // @@protoc_insertion_point(field_mutable:STNotifyReagInfo.stThreshold)
  return stthreshold_.Mutable(index);
}
inline ::STThreshold* STNotifyReagInfo::add_stthreshold() {
  // @@protoc_insertion_point(field_add:STNotifyReagInfo.stThreshold)
  return stthreshold_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STThreshold >&
STNotifyReagInfo::stthreshold() const {
  // @@protoc_insertion_point(field_list:STNotifyReagInfo.stThreshold)
  return stthreshold_;
}
inline ::google::protobuf::RepeatedPtrField< ::STThreshold >*
STNotifyReagInfo::mutable_stthreshold() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyReagInfo.stThreshold)
  return &stthreshold_;
}

// repeated .STReagInfo stReagInfo = 2;
inline int STNotifyReagInfo::streaginfo_size() const {
  return streaginfo_.size();
}
inline void STNotifyReagInfo::clear_streaginfo() {
  streaginfo_.Clear();
}
inline const ::STReagInfo& STNotifyReagInfo::streaginfo(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyReagInfo.stReagInfo)
  return streaginfo_.Get(index);
}
inline ::STReagInfo* STNotifyReagInfo::mutable_streaginfo(int index) {
  // @@protoc_insertion_point(field_mutable:STNotifyReagInfo.stReagInfo)
  return streaginfo_.Mutable(index);
}
inline ::STReagInfo* STNotifyReagInfo::add_streaginfo() {
  // @@protoc_insertion_point(field_add:STNotifyReagInfo.stReagInfo)
  return streaginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STReagInfo >&
STNotifyReagInfo::streaginfo() const {
  // @@protoc_insertion_point(field_list:STNotifyReagInfo.stReagInfo)
  return streaginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STReagInfo >*
STNotifyReagInfo::mutable_streaginfo() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyReagInfo.stReagInfo)
  return &streaginfo_;
}

// repeated .STReagInfo stAutoLoadReagInfo = 3;
inline int STNotifyReagInfo::stautoloadreaginfo_size() const {
  return stautoloadreaginfo_.size();
}
inline void STNotifyReagInfo::clear_stautoloadreaginfo() {
  stautoloadreaginfo_.Clear();
}
inline const ::STReagInfo& STNotifyReagInfo::stautoloadreaginfo(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyReagInfo.stAutoLoadReagInfo)
  return stautoloadreaginfo_.Get(index);
}
inline ::STReagInfo* STNotifyReagInfo::mutable_stautoloadreaginfo(int index) {
  // @@protoc_insertion_point(field_mutable:STNotifyReagInfo.stAutoLoadReagInfo)
  return stautoloadreaginfo_.Mutable(index);
}
inline ::STReagInfo* STNotifyReagInfo::add_stautoloadreaginfo() {
  // @@protoc_insertion_point(field_add:STNotifyReagInfo.stAutoLoadReagInfo)
  return stautoloadreaginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STReagInfo >&
STNotifyReagInfo::stautoloadreaginfo() const {
  // @@protoc_insertion_point(field_list:STNotifyReagInfo.stAutoLoadReagInfo)
  return stautoloadreaginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STReagInfo >*
STNotifyReagInfo::mutable_stautoloadreaginfo() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyReagInfo.stAutoLoadReagInfo)
  return &stautoloadreaginfo_;
}

// -------------------------------------------------------------------

// STReagChangeInfo

// optional bool bAdd = 1;
inline bool STReagChangeInfo::has_badd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReagChangeInfo::set_has_badd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReagChangeInfo::clear_has_badd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReagChangeInfo::clear_badd() {
  badd_ = false;
  clear_has_badd();
}
inline bool STReagChangeInfo::badd() const {
  // @@protoc_insertion_point(field_get:STReagChangeInfo.bAdd)
  return badd_;
}
inline void STReagChangeInfo::set_badd(bool value) {
  set_has_badd();
  badd_ = value;
  // @@protoc_insertion_point(field_set:STReagChangeInfo.bAdd)
}

// optional .ReagDiskType reagDiskType = 2;
inline bool STReagChangeInfo::has_reagdisktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReagChangeInfo::set_has_reagdisktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReagChangeInfo::clear_has_reagdisktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReagChangeInfo::clear_reagdisktype() {
  reagdisktype_ = 1;
  clear_has_reagdisktype();
}
inline ::ReagDiskType STReagChangeInfo::reagdisktype() const {
  // @@protoc_insertion_point(field_get:STReagChangeInfo.reagDiskType)
  return static_cast< ::ReagDiskType >(reagdisktype_);
}
inline void STReagChangeInfo::set_reagdisktype(::ReagDiskType value) {
  assert(::ReagDiskType_IsValid(value));
  set_has_reagdisktype();
  reagdisktype_ = value;
  // @@protoc_insertion_point(field_set:STReagChangeInfo.reagDiskType)
}

// optional .STReagInfo stReagInfo = 3;
inline bool STReagChangeInfo::has_streaginfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReagChangeInfo::set_has_streaginfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReagChangeInfo::clear_has_streaginfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReagChangeInfo::clear_streaginfo() {
  if (streaginfo_ != NULL) streaginfo_->::STReagInfo::Clear();
  clear_has_streaginfo();
}
inline const ::STReagInfo& STReagChangeInfo::streaginfo() const {
  // @@protoc_insertion_point(field_get:STReagChangeInfo.stReagInfo)
  return streaginfo_ != NULL ? *streaginfo_ : *default_instance_->streaginfo_;
}
inline ::STReagInfo* STReagChangeInfo::mutable_streaginfo() {
  set_has_streaginfo();
  if (streaginfo_ == NULL) streaginfo_ = new ::STReagInfo;
  // @@protoc_insertion_point(field_mutable:STReagChangeInfo.stReagInfo)
  return streaginfo_;
}
inline ::STReagInfo* STReagChangeInfo::release_streaginfo() {
  clear_has_streaginfo();
  ::STReagInfo* temp = streaginfo_;
  streaginfo_ = NULL;
  return temp;
}
inline void STReagChangeInfo::set_allocated_streaginfo(::STReagInfo* streaginfo) {
  delete streaginfo_;
  streaginfo_ = streaginfo;
  if (streaginfo) {
    set_has_streaginfo();
  } else {
    clear_has_streaginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:STReagChangeInfo.stReagInfo)
}

// -------------------------------------------------------------------

// STReagChangeInfoList

// repeated .STReagChangeInfo listInfo = 1;
inline int STReagChangeInfoList::listinfo_size() const {
  return listinfo_.size();
}
inline void STReagChangeInfoList::clear_listinfo() {
  listinfo_.Clear();
}
inline const ::STReagChangeInfo& STReagChangeInfoList::listinfo(int index) const {
  // @@protoc_insertion_point(field_get:STReagChangeInfoList.listInfo)
  return listinfo_.Get(index);
}
inline ::STReagChangeInfo* STReagChangeInfoList::mutable_listinfo(int index) {
  // @@protoc_insertion_point(field_mutable:STReagChangeInfoList.listInfo)
  return listinfo_.Mutable(index);
}
inline ::STReagChangeInfo* STReagChangeInfoList::add_listinfo() {
  // @@protoc_insertion_point(field_add:STReagChangeInfoList.listInfo)
  return listinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STReagChangeInfo >&
STReagChangeInfoList::listinfo() const {
  // @@protoc_insertion_point(field_list:STReagChangeInfoList.listInfo)
  return listinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STReagChangeInfo >*
STReagChangeInfoList::mutable_listinfo() {
  // @@protoc_insertion_point(field_mutable_list:STReagChangeInfoList.listInfo)
  return &listinfo_;
}

// -------------------------------------------------------------------

// STNotifyMachineStatus

// optional uint32 uiMachStatus = 1;
inline bool STNotifyMachineStatus::has_uimachstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyMachineStatus::set_has_uimachstatus() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyMachineStatus::clear_has_uimachstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyMachineStatus::clear_uimachstatus() {
  uimachstatus_ = 0u;
  clear_has_uimachstatus();
}
inline ::google::protobuf::uint32 STNotifyMachineStatus::uimachstatus() const {
  // @@protoc_insertion_point(field_get:STNotifyMachineStatus.uiMachStatus)
  return uimachstatus_;
}
inline void STNotifyMachineStatus::set_uimachstatus(::google::protobuf::uint32 value) {
  set_has_uimachstatus();
  uimachstatus_ = value;
  // @@protoc_insertion_point(field_set:STNotifyMachineStatus.uiMachStatus)
}

// optional uint32 uiLeftTime = 2;
inline bool STNotifyMachineStatus::has_uilefttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifyMachineStatus::set_has_uilefttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifyMachineStatus::clear_has_uilefttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifyMachineStatus::clear_uilefttime() {
  uilefttime_ = 0u;
  clear_has_uilefttime();
}
inline ::google::protobuf::uint32 STNotifyMachineStatus::uilefttime() const {
  // @@protoc_insertion_point(field_get:STNotifyMachineStatus.uiLeftTime)
  return uilefttime_;
}
inline void STNotifyMachineStatus::set_uilefttime(::google::protobuf::uint32 value) {
  set_has_uilefttime();
  uilefttime_ = value;
  // @@protoc_insertion_point(field_set:STNotifyMachineStatus.uiLeftTime)
}

// -------------------------------------------------------------------

// STNotifyConnect

// optional string szMachIp = 1;
inline bool STNotifyConnect::has_szmachip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyConnect::set_has_szmachip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyConnect::clear_has_szmachip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyConnect::clear_szmachip() {
  if (szmachip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachip_->clear();
  }
  clear_has_szmachip();
}
inline const ::std::string& STNotifyConnect::szmachip() const {
  // @@protoc_insertion_point(field_get:STNotifyConnect.szMachIp)
  return *szmachip_;
}
inline void STNotifyConnect::set_szmachip(const ::std::string& value) {
  set_has_szmachip();
  if (szmachip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachip_ = new ::std::string;
  }
  szmachip_->assign(value);
  // @@protoc_insertion_point(field_set:STNotifyConnect.szMachIp)
}
inline void STNotifyConnect::set_szmachip(const char* value) {
  set_has_szmachip();
  if (szmachip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachip_ = new ::std::string;
  }
  szmachip_->assign(value);
  // @@protoc_insertion_point(field_set_char:STNotifyConnect.szMachIp)
}
inline void STNotifyConnect::set_szmachip(const char* value, size_t size) {
  set_has_szmachip();
  if (szmachip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachip_ = new ::std::string;
  }
  szmachip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STNotifyConnect.szMachIp)
}
inline ::std::string* STNotifyConnect::mutable_szmachip() {
  set_has_szmachip();
  if (szmachip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szmachip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STNotifyConnect.szMachIp)
  return szmachip_;
}
inline ::std::string* STNotifyConnect::release_szmachip() {
  clear_has_szmachip();
  if (szmachip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szmachip_;
    szmachip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STNotifyConnect::set_allocated_szmachip(::std::string* szmachip) {
  if (szmachip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szmachip_;
  }
  if (szmachip) {
    set_has_szmachip();
    szmachip_ = szmachip;
  } else {
    clear_has_szmachip();
    szmachip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STNotifyConnect.szMachIp)
}

// -------------------------------------------------------------------

// STReqLightCheck

// optional .ReactCircle enCircle = 1;
inline bool STReqLightCheck::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqLightCheck::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqLightCheck::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqLightCheck::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STReqLightCheck::encircle() const {
  // @@protoc_insertion_point(field_get:STReqLightCheck.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STReqLightCheck::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STReqLightCheck.enCircle)
}

// -------------------------------------------------------------------

// STNotifyADValue

// optional .ReactCircle enCircle = 1;
inline bool STNotifyADValue::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyADValue::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyADValue::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyADValue::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STNotifyADValue::encircle() const {
  // @@protoc_insertion_point(field_get:STNotifyADValue.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STNotifyADValue::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STNotifyADValue.enCircle)
}

// repeated .STCupADValue stCupInfo = 2;
inline int STNotifyADValue::stcupinfo_size() const {
  return stcupinfo_.size();
}
inline void STNotifyADValue::clear_stcupinfo() {
  stcupinfo_.Clear();
}
inline const ::STCupADValue& STNotifyADValue::stcupinfo(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyADValue.stCupInfo)
  return stcupinfo_.Get(index);
}
inline ::STCupADValue* STNotifyADValue::mutable_stcupinfo(int index) {
  // @@protoc_insertion_point(field_mutable:STNotifyADValue.stCupInfo)
  return stcupinfo_.Mutable(index);
}
inline ::STCupADValue* STNotifyADValue::add_stcupinfo() {
  // @@protoc_insertion_point(field_add:STNotifyADValue.stCupInfo)
  return stcupinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STCupADValue >&
STNotifyADValue::stcupinfo() const {
  // @@protoc_insertion_point(field_list:STNotifyADValue.stCupInfo)
  return stcupinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STCupADValue >*
STNotifyADValue::mutable_stcupinfo() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyADValue.stCupInfo)
  return &stcupinfo_;
}

// -------------------------------------------------------------------

// STReqSkipCup

// optional uint32 cupid = 1;
inline bool STReqSkipCup::has_cupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqSkipCup::set_has_cupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqSkipCup::clear_has_cupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqSkipCup::clear_cupid() {
  cupid_ = 0u;
  clear_has_cupid();
}
inline ::google::protobuf::uint32 STReqSkipCup::cupid() const {
  // @@protoc_insertion_point(field_get:STReqSkipCup.cupid)
  return cupid_;
}
inline void STReqSkipCup::set_cupid(::google::protobuf::uint32 value) {
  set_has_cupid();
  cupid_ = value;
  // @@protoc_insertion_point(field_set:STReqSkipCup.cupid)
}

// -------------------------------------------------------------------

// STReqActCmd

// optional uint32 uiSubsysId = 1;
inline bool STReqActCmd::has_uisubsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqActCmd::set_has_uisubsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqActCmd::clear_has_uisubsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqActCmd::clear_uisubsysid() {
  uisubsysid_ = 0u;
  clear_has_uisubsysid();
}
inline ::google::protobuf::uint32 STReqActCmd::uisubsysid() const {
  // @@protoc_insertion_point(field_get:STReqActCmd.uiSubsysId)
  return uisubsysid_;
}
inline void STReqActCmd::set_uisubsysid(::google::protobuf::uint32 value) {
  set_has_uisubsysid();
  uisubsysid_ = value;
  // @@protoc_insertion_point(field_set:STReqActCmd.uiSubsysId)
}

// optional uint32 uiActType = 2;
inline bool STReqActCmd::has_uiacttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqActCmd::set_has_uiacttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqActCmd::clear_has_uiacttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqActCmd::clear_uiacttype() {
  uiacttype_ = 0u;
  clear_has_uiacttype();
}
inline ::google::protobuf::uint32 STReqActCmd::uiacttype() const {
  // @@protoc_insertion_point(field_get:STReqActCmd.uiActType)
  return uiacttype_;
}
inline void STReqActCmd::set_uiacttype(::google::protobuf::uint32 value) {
  set_has_uiacttype();
  uiacttype_ = value;
  // @@protoc_insertion_point(field_set:STReqActCmd.uiActType)
}

// repeated uint32 uiParams = 3;
inline int STReqActCmd::uiparams_size() const {
  return uiparams_.size();
}
inline void STReqActCmd::clear_uiparams() {
  uiparams_.Clear();
}
inline ::google::protobuf::uint32 STReqActCmd::uiparams(int index) const {
  // @@protoc_insertion_point(field_get:STReqActCmd.uiParams)
  return uiparams_.Get(index);
}
inline void STReqActCmd::set_uiparams(int index, ::google::protobuf::uint32 value) {
  uiparams_.Set(index, value);
  // @@protoc_insertion_point(field_set:STReqActCmd.uiParams)
}
inline void STReqActCmd::add_uiparams(::google::protobuf::uint32 value) {
  uiparams_.Add(value);
  // @@protoc_insertion_point(field_add:STReqActCmd.uiParams)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
STReqActCmd::uiparams() const {
  // @@protoc_insertion_point(field_list:STReqActCmd.uiParams)
  return uiparams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
STReqActCmd::mutable_uiparams() {
  // @@protoc_insertion_point(field_mutable_list:STReqActCmd.uiParams)
  return &uiparams_;
}

// -------------------------------------------------------------------

// STNotifyOffset

// optional uint32 uiSubsysId = 1;
inline bool STNotifyOffset::has_uisubsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyOffset::set_has_uisubsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyOffset::clear_has_uisubsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyOffset::clear_uisubsysid() {
  uisubsysid_ = 0u;
  clear_has_uisubsysid();
}
inline ::google::protobuf::uint32 STNotifyOffset::uisubsysid() const {
  // @@protoc_insertion_point(field_get:STNotifyOffset.uiSubsysId)
  return uisubsysid_;
}
inline void STNotifyOffset::set_uisubsysid(::google::protobuf::uint32 value) {
  set_has_uisubsysid();
  uisubsysid_ = value;
  // @@protoc_insertion_point(field_set:STNotifyOffset.uiSubsysId)
}

// optional uint32 type = 2;
inline bool STNotifyOffset::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifyOffset::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifyOffset::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifyOffset::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 STNotifyOffset::type() const {
  // @@protoc_insertion_point(field_get:STNotifyOffset.type)
  return type_;
}
inline void STNotifyOffset::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:STNotifyOffset.type)
}

// repeated int32 para = 3;
inline int STNotifyOffset::para_size() const {
  return para_.size();
}
inline void STNotifyOffset::clear_para() {
  para_.Clear();
}
inline ::google::protobuf::int32 STNotifyOffset::para(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyOffset.para)
  return para_.Get(index);
}
inline void STNotifyOffset::set_para(int index, ::google::protobuf::int32 value) {
  para_.Set(index, value);
  // @@protoc_insertion_point(field_set:STNotifyOffset.para)
}
inline void STNotifyOffset::add_para(::google::protobuf::int32 value) {
  para_.Add(value);
  // @@protoc_insertion_point(field_add:STNotifyOffset.para)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
STNotifyOffset::para() const {
  // @@protoc_insertion_point(field_list:STNotifyOffset.para)
  return para_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
STNotifyOffset::mutable_para() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyOffset.para)
  return &para_;
}

// -------------------------------------------------------------------

// STNotifyTimer

// optional uint32 uiTimerId = 1;
inline bool STNotifyTimer::has_uitimerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyTimer::set_has_uitimerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyTimer::clear_has_uitimerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyTimer::clear_uitimerid() {
  uitimerid_ = 0u;
  clear_has_uitimerid();
}
inline ::google::protobuf::uint32 STNotifyTimer::uitimerid() const {
  // @@protoc_insertion_point(field_get:STNotifyTimer.uiTimerId)
  return uitimerid_;
}
inline void STNotifyTimer::set_uitimerid(::google::protobuf::uint32 value) {
  set_has_uitimerid();
  uitimerid_ = value;
  // @@protoc_insertion_point(field_set:STNotifyTimer.uiTimerId)
}

// optional string szTimerName = 2;
inline bool STNotifyTimer::has_sztimername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifyTimer::set_has_sztimername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifyTimer::clear_has_sztimername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifyTimer::clear_sztimername() {
  if (sztimername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sztimername_->clear();
  }
  clear_has_sztimername();
}
inline const ::std::string& STNotifyTimer::sztimername() const {
  // @@protoc_insertion_point(field_get:STNotifyTimer.szTimerName)
  return *sztimername_;
}
inline void STNotifyTimer::set_sztimername(const ::std::string& value) {
  set_has_sztimername();
  if (sztimername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sztimername_ = new ::std::string;
  }
  sztimername_->assign(value);
  // @@protoc_insertion_point(field_set:STNotifyTimer.szTimerName)
}
inline void STNotifyTimer::set_sztimername(const char* value) {
  set_has_sztimername();
  if (sztimername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sztimername_ = new ::std::string;
  }
  sztimername_->assign(value);
  // @@protoc_insertion_point(field_set_char:STNotifyTimer.szTimerName)
}
inline void STNotifyTimer::set_sztimername(const char* value, size_t size) {
  set_has_sztimername();
  if (sztimername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sztimername_ = new ::std::string;
  }
  sztimername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STNotifyTimer.szTimerName)
}
inline ::std::string* STNotifyTimer::mutable_sztimername() {
  set_has_sztimername();
  if (sztimername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sztimername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STNotifyTimer.szTimerName)
  return sztimername_;
}
inline ::std::string* STNotifyTimer::release_sztimername() {
  clear_has_sztimername();
  if (sztimername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sztimername_;
    sztimername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STNotifyTimer::set_allocated_sztimername(::std::string* sztimername) {
  if (sztimername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sztimername_;
  }
  if (sztimername) {
    set_has_sztimername();
    sztimername_ = sztimername;
  } else {
    clear_has_sztimername();
    sztimername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STNotifyTimer.szTimerName)
}

// -------------------------------------------------------------------

// STReqSetTime

// optional string strTime = 1;
inline bool STReqSetTime::has_strtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqSetTime::set_has_strtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqSetTime::clear_has_strtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqSetTime::clear_strtime() {
  if (strtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strtime_->clear();
  }
  clear_has_strtime();
}
inline const ::std::string& STReqSetTime::strtime() const {
  // @@protoc_insertion_point(field_get:STReqSetTime.strTime)
  return *strtime_;
}
inline void STReqSetTime::set_strtime(const ::std::string& value) {
  set_has_strtime();
  if (strtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strtime_ = new ::std::string;
  }
  strtime_->assign(value);
  // @@protoc_insertion_point(field_set:STReqSetTime.strTime)
}
inline void STReqSetTime::set_strtime(const char* value) {
  set_has_strtime();
  if (strtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strtime_ = new ::std::string;
  }
  strtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:STReqSetTime.strTime)
}
inline void STReqSetTime::set_strtime(const char* value, size_t size) {
  set_has_strtime();
  if (strtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strtime_ = new ::std::string;
  }
  strtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STReqSetTime.strTime)
}
inline ::std::string* STReqSetTime::mutable_strtime() {
  set_has_strtime();
  if (strtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STReqSetTime.strTime)
  return strtime_;
}
inline ::std::string* STReqSetTime::release_strtime() {
  clear_has_strtime();
  if (strtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strtime_;
    strtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STReqSetTime::set_allocated_strtime(::std::string* strtime) {
  if (strtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strtime_;
  }
  if (strtime) {
    set_has_strtime();
    strtime_ = strtime;
  } else {
    clear_has_strtime();
    strtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STReqSetTime.strTime)
}

// -------------------------------------------------------------------

// STReqPreciseAdd

// optional uint32 uiSubsysId = 1;
inline bool STReqPreciseAdd::has_uisubsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqPreciseAdd::set_has_uisubsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqPreciseAdd::clear_has_uisubsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqPreciseAdd::clear_uisubsysid() {
  uisubsysid_ = 0u;
  clear_has_uisubsysid();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uisubsysid() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiSubsysId)
  return uisubsysid_;
}
inline void STReqPreciseAdd::set_uisubsysid(::google::protobuf::uint32 value) {
  set_has_uisubsysid();
  uisubsysid_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiSubsysId)
}

// optional uint32 uiAbsorbPos = 2;
inline bool STReqPreciseAdd::has_uiabsorbpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqPreciseAdd::set_has_uiabsorbpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqPreciseAdd::clear_has_uiabsorbpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqPreciseAdd::clear_uiabsorbpos() {
  uiabsorbpos_ = 0u;
  clear_has_uiabsorbpos();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uiabsorbpos() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiAbsorbPos)
  return uiabsorbpos_;
}
inline void STReqPreciseAdd::set_uiabsorbpos(::google::protobuf::uint32 value) {
  set_has_uiabsorbpos();
  uiabsorbpos_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiAbsorbPos)
}

// optional uint32 uiAbsorbAmount = 3;
inline bool STReqPreciseAdd::has_uiabsorbamount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqPreciseAdd::set_has_uiabsorbamount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqPreciseAdd::clear_has_uiabsorbamount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqPreciseAdd::clear_uiabsorbamount() {
  uiabsorbamount_ = 0u;
  clear_has_uiabsorbamount();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uiabsorbamount() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiAbsorbAmount)
  return uiabsorbamount_;
}
inline void STReqPreciseAdd::set_uiabsorbamount(::google::protobuf::uint32 value) {
  set_has_uiabsorbamount();
  uiabsorbamount_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiAbsorbAmount)
}

// optional uint32 uiDischargePos = 4;
inline bool STReqPreciseAdd::has_uidischargepos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STReqPreciseAdd::set_has_uidischargepos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STReqPreciseAdd::clear_has_uidischargepos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STReqPreciseAdd::clear_uidischargepos() {
  uidischargepos_ = 0u;
  clear_has_uidischargepos();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uidischargepos() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiDischargePos)
  return uidischargepos_;
}
inline void STReqPreciseAdd::set_uidischargepos(::google::protobuf::uint32 value) {
  set_has_uidischargepos();
  uidischargepos_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiDischargePos)
}

// optional uint32 uiDischargeAmount = 5;
inline bool STReqPreciseAdd::has_uidischargeamount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void STReqPreciseAdd::set_has_uidischargeamount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void STReqPreciseAdd::clear_has_uidischargeamount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void STReqPreciseAdd::clear_uidischargeamount() {
  uidischargeamount_ = 0u;
  clear_has_uidischargeamount();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uidischargeamount() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiDischargeAmount)
  return uidischargeamount_;
}
inline void STReqPreciseAdd::set_uidischargeamount(::google::protobuf::uint32 value) {
  set_has_uidischargeamount();
  uidischargeamount_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiDischargeAmount)
}

// optional uint32 uiLoopTimes = 6;
inline bool STReqPreciseAdd::has_uilooptimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void STReqPreciseAdd::set_has_uilooptimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void STReqPreciseAdd::clear_has_uilooptimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void STReqPreciseAdd::clear_uilooptimes() {
  uilooptimes_ = 0u;
  clear_has_uilooptimes();
}
inline ::google::protobuf::uint32 STReqPreciseAdd::uilooptimes() const {
  // @@protoc_insertion_point(field_get:STReqPreciseAdd.uiLoopTimes)
  return uilooptimes_;
}
inline void STReqPreciseAdd::set_uilooptimes(::google::protobuf::uint32 value) {
  set_has_uilooptimes();
  uilooptimes_ = value;
  // @@protoc_insertion_point(field_set:STReqPreciseAdd.uiLoopTimes)
}

// -------------------------------------------------------------------

// STReqDarkCurrentTest

// optional .ReactCircle enCircle = 1;
inline bool STReqDarkCurrentTest::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqDarkCurrentTest::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqDarkCurrentTest::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqDarkCurrentTest::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STReqDarkCurrentTest::encircle() const {
  // @@protoc_insertion_point(field_get:STReqDarkCurrentTest.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STReqDarkCurrentTest::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STReqDarkCurrentTest.enCircle)
}

// optional uint32 testType = 2;
inline bool STReqDarkCurrentTest::has_testtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqDarkCurrentTest::set_has_testtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqDarkCurrentTest::clear_has_testtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqDarkCurrentTest::clear_testtype() {
  testtype_ = 0u;
  clear_has_testtype();
}
inline ::google::protobuf::uint32 STReqDarkCurrentTest::testtype() const {
  // @@protoc_insertion_point(field_get:STReqDarkCurrentTest.testType)
  return testtype_;
}
inline void STReqDarkCurrentTest::set_testtype(::google::protobuf::uint32 value) {
  set_has_testtype();
  testtype_ = value;
  // @@protoc_insertion_point(field_set:STReqDarkCurrentTest.testType)
}

// optional uint32 testCount = 3;
inline bool STReqDarkCurrentTest::has_testcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqDarkCurrentTest::set_has_testcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqDarkCurrentTest::clear_has_testcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqDarkCurrentTest::clear_testcount() {
  testcount_ = 0u;
  clear_has_testcount();
}
inline ::google::protobuf::uint32 STReqDarkCurrentTest::testcount() const {
  // @@protoc_insertion_point(field_get:STReqDarkCurrentTest.testCount)
  return testcount_;
}
inline void STReqDarkCurrentTest::set_testcount(::google::protobuf::uint32 value) {
  set_has_testcount();
  testcount_ = value;
  // @@protoc_insertion_point(field_set:STReqDarkCurrentTest.testCount)
}

// repeated .STKeyValue dpValueInfo = 4;
inline int STReqDarkCurrentTest::dpvalueinfo_size() const {
  return dpvalueinfo_.size();
}
inline void STReqDarkCurrentTest::clear_dpvalueinfo() {
  dpvalueinfo_.Clear();
}
inline const ::STKeyValue& STReqDarkCurrentTest::dpvalueinfo(int index) const {
  // @@protoc_insertion_point(field_get:STReqDarkCurrentTest.dpValueInfo)
  return dpvalueinfo_.Get(index);
}
inline ::STKeyValue* STReqDarkCurrentTest::mutable_dpvalueinfo(int index) {
  // @@protoc_insertion_point(field_mutable:STReqDarkCurrentTest.dpValueInfo)
  return dpvalueinfo_.Mutable(index);
}
inline ::STKeyValue* STReqDarkCurrentTest::add_dpvalueinfo() {
  // @@protoc_insertion_point(field_add:STReqDarkCurrentTest.dpValueInfo)
  return dpvalueinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
STReqDarkCurrentTest::dpvalueinfo() const {
  // @@protoc_insertion_point(field_list:STReqDarkCurrentTest.dpValueInfo)
  return dpvalueinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
STReqDarkCurrentTest::mutable_dpvalueinfo() {
  // @@protoc_insertion_point(field_mutable_list:STReqDarkCurrentTest.dpValueInfo)
  return &dpvalueinfo_;
}

// -------------------------------------------------------------------

// STResDarkCurrentTest

// optional .ReactCircle enCircle = 1;
inline bool STResDarkCurrentTest::has_encircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STResDarkCurrentTest::set_has_encircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STResDarkCurrentTest::clear_has_encircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STResDarkCurrentTest::clear_encircle() {
  encircle_ = 0;
  clear_has_encircle();
}
inline ::ReactCircle STResDarkCurrentTest::encircle() const {
  // @@protoc_insertion_point(field_get:STResDarkCurrentTest.enCircle)
  return static_cast< ::ReactCircle >(encircle_);
}
inline void STResDarkCurrentTest::set_encircle(::ReactCircle value) {
  assert(::ReactCircle_IsValid(value));
  set_has_encircle();
  encircle_ = value;
  // @@protoc_insertion_point(field_set:STResDarkCurrentTest.enCircle)
}

// optional uint32 testType = 2;
inline bool STResDarkCurrentTest::has_testtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STResDarkCurrentTest::set_has_testtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STResDarkCurrentTest::clear_has_testtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STResDarkCurrentTest::clear_testtype() {
  testtype_ = 0u;
  clear_has_testtype();
}
inline ::google::protobuf::uint32 STResDarkCurrentTest::testtype() const {
  // @@protoc_insertion_point(field_get:STResDarkCurrentTest.testType)
  return testtype_;
}
inline void STResDarkCurrentTest::set_testtype(::google::protobuf::uint32 value) {
  set_has_testtype();
  testtype_ = value;
  // @@protoc_insertion_point(field_set:STResDarkCurrentTest.testType)
}

// repeated .STDarkCurrentAD darkCurrentADInfo = 3;
inline int STResDarkCurrentTest::darkcurrentadinfo_size() const {
  return darkcurrentadinfo_.size();
}
inline void STResDarkCurrentTest::clear_darkcurrentadinfo() {
  darkcurrentadinfo_.Clear();
}
inline const ::STDarkCurrentAD& STResDarkCurrentTest::darkcurrentadinfo(int index) const {
  // @@protoc_insertion_point(field_get:STResDarkCurrentTest.darkCurrentADInfo)
  return darkcurrentadinfo_.Get(index);
}
inline ::STDarkCurrentAD* STResDarkCurrentTest::mutable_darkcurrentadinfo(int index) {
  // @@protoc_insertion_point(field_mutable:STResDarkCurrentTest.darkCurrentADInfo)
  return darkcurrentadinfo_.Mutable(index);
}
inline ::STDarkCurrentAD* STResDarkCurrentTest::add_darkcurrentadinfo() {
  // @@protoc_insertion_point(field_add:STResDarkCurrentTest.darkCurrentADInfo)
  return darkcurrentadinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STDarkCurrentAD >&
STResDarkCurrentTest::darkcurrentadinfo() const {
  // @@protoc_insertion_point(field_list:STResDarkCurrentTest.darkCurrentADInfo)
  return darkcurrentadinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::STDarkCurrentAD >*
STResDarkCurrentTest::mutable_darkcurrentadinfo() {
  // @@protoc_insertion_point(field_mutable_list:STResDarkCurrentTest.darkCurrentADInfo)
  return &darkcurrentadinfo_;
}

// -------------------------------------------------------------------

// STNotifyTemp

// optional uint32 ulSubsysId = 1;
inline bool STNotifyTemp::has_ulsubsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifyTemp::set_has_ulsubsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifyTemp::clear_has_ulsubsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifyTemp::clear_ulsubsysid() {
  ulsubsysid_ = 0u;
  clear_has_ulsubsysid();
}
inline ::google::protobuf::uint32 STNotifyTemp::ulsubsysid() const {
  // @@protoc_insertion_point(field_get:STNotifyTemp.ulSubsysId)
  return ulsubsysid_;
}
inline void STNotifyTemp::set_ulsubsysid(::google::protobuf::uint32 value) {
  set_has_ulsubsysid();
  ulsubsysid_ = value;
  // @@protoc_insertion_point(field_set:STNotifyTemp.ulSubsysId)
}

// optional int32 iTemp = 2;
inline bool STNotifyTemp::has_itemp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifyTemp::set_has_itemp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifyTemp::clear_has_itemp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifyTemp::clear_itemp() {
  itemp_ = 0;
  clear_has_itemp();
}
inline ::google::protobuf::int32 STNotifyTemp::itemp() const {
  // @@protoc_insertion_point(field_get:STNotifyTemp.iTemp)
  return itemp_;
}
inline void STNotifyTemp::set_itemp(::google::protobuf::int32 value) {
  set_has_itemp();
  itemp_ = value;
  // @@protoc_insertion_point(field_set:STNotifyTemp.iTemp)
}

// -------------------------------------------------------------------

// STGetMidLog

// optional string strIP = 1;
inline bool STGetMidLog::has_strip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STGetMidLog::set_has_strip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STGetMidLog::clear_has_strip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STGetMidLog::clear_strip() {
  if (strip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strip_->clear();
  }
  clear_has_strip();
}
inline const ::std::string& STGetMidLog::strip() const {
  // @@protoc_insertion_point(field_get:STGetMidLog.strIP)
  return *strip_;
}
inline void STGetMidLog::set_strip(const ::std::string& value) {
  set_has_strip();
  if (strip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strip_ = new ::std::string;
  }
  strip_->assign(value);
  // @@protoc_insertion_point(field_set:STGetMidLog.strIP)
}
inline void STGetMidLog::set_strip(const char* value) {
  set_has_strip();
  if (strip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strip_ = new ::std::string;
  }
  strip_->assign(value);
  // @@protoc_insertion_point(field_set_char:STGetMidLog.strIP)
}
inline void STGetMidLog::set_strip(const char* value, size_t size) {
  set_has_strip();
  if (strip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strip_ = new ::std::string;
  }
  strip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STGetMidLog.strIP)
}
inline ::std::string* STGetMidLog::mutable_strip() {
  set_has_strip();
  if (strip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    strip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STGetMidLog.strIP)
  return strip_;
}
inline ::std::string* STGetMidLog::release_strip() {
  clear_has_strip();
  if (strip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = strip_;
    strip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STGetMidLog::set_allocated_strip(::std::string* strip) {
  if (strip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strip_;
  }
  if (strip) {
    set_has_strip();
    strip_ = strip;
  } else {
    clear_has_strip();
    strip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STGetMidLog.strIP)
}

// -------------------------------------------------------------------

// STCollideNdlConfig

// optional .CollideNdl ulConfig = 1;
inline bool STCollideNdlConfig::has_ulconfig() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STCollideNdlConfig::set_has_ulconfig() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STCollideNdlConfig::clear_has_ulconfig() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STCollideNdlConfig::clear_ulconfig() {
  ulconfig_ = 1;
  clear_has_ulconfig();
}
inline ::CollideNdl STCollideNdlConfig::ulconfig() const {
  // @@protoc_insertion_point(field_get:STCollideNdlConfig.ulConfig)
  return static_cast< ::CollideNdl >(ulconfig_);
}
inline void STCollideNdlConfig::set_ulconfig(::CollideNdl value) {
  assert(::CollideNdl_IsValid(value));
  set_has_ulconfig();
  ulconfig_ = value;
  // @@protoc_insertion_point(field_set:STCollideNdlConfig.ulConfig)
}

// -------------------------------------------------------------------

// STVersions

// repeated .STSubVers Vers = 1;
inline int STVersions::vers_size() const {
  return vers_.size();
}
inline void STVersions::clear_vers() {
  vers_.Clear();
}
inline const ::STSubVers& STVersions::vers(int index) const {
  // @@protoc_insertion_point(field_get:STVersions.Vers)
  return vers_.Get(index);
}
inline ::STSubVers* STVersions::mutable_vers(int index) {
  // @@protoc_insertion_point(field_mutable:STVersions.Vers)
  return vers_.Mutable(index);
}
inline ::STSubVers* STVersions::add_vers() {
  // @@protoc_insertion_point(field_add:STVersions.Vers)
  return vers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STSubVers >&
STVersions::vers() const {
  // @@protoc_insertion_point(field_list:STVersions.Vers)
  return vers_;
}
inline ::google::protobuf::RepeatedPtrField< ::STSubVers >*
STVersions::mutable_vers() {
  // @@protoc_insertion_point(field_mutable_list:STVersions.Vers)
  return &vers_;
}

// -------------------------------------------------------------------

// STNotifyFailedSmpTask

// repeated uint32 ulTaskId = 1;
inline int STNotifyFailedSmpTask::ultaskid_size() const {
  return ultaskid_.size();
}
inline void STNotifyFailedSmpTask::clear_ultaskid() {
  ultaskid_.Clear();
}
inline ::google::protobuf::uint32 STNotifyFailedSmpTask::ultaskid(int index) const {
  // @@protoc_insertion_point(field_get:STNotifyFailedSmpTask.ulTaskId)
  return ultaskid_.Get(index);
}
inline void STNotifyFailedSmpTask::set_ultaskid(int index, ::google::protobuf::uint32 value) {
  ultaskid_.Set(index, value);
  // @@protoc_insertion_point(field_set:STNotifyFailedSmpTask.ulTaskId)
}
inline void STNotifyFailedSmpTask::add_ultaskid(::google::protobuf::uint32 value) {
  ultaskid_.Add(value);
  // @@protoc_insertion_point(field_add:STNotifyFailedSmpTask.ulTaskId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
STNotifyFailedSmpTask::ultaskid() const {
  // @@protoc_insertion_point(field_list:STNotifyFailedSmpTask.ulTaskId)
  return ultaskid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
STNotifyFailedSmpTask::mutable_ultaskid() {
  // @@protoc_insertion_point(field_mutable_list:STNotifyFailedSmpTask.ulTaskId)
  return &ultaskid_;
}

// -------------------------------------------------------------------

// CCompSetRes

// optional uint32 subsysid = 1;
inline bool CCompSetRes::has_subsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCompSetRes::set_has_subsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCompSetRes::clear_has_subsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCompSetRes::clear_subsysid() {
  subsysid_ = 0u;
  clear_has_subsysid();
}
inline ::google::protobuf::uint32 CCompSetRes::subsysid() const {
  // @@protoc_insertion_point(field_get:CCompSetRes.subsysid)
  return subsysid_;
}
inline void CCompSetRes::set_subsysid(::google::protobuf::uint32 value) {
  set_has_subsysid();
  subsysid_ = value;
  // @@protoc_insertion_point(field_set:CCompSetRes.subsysid)
}

// optional uint32 result = 2;
inline bool CCompSetRes::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCompSetRes::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCompSetRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCompSetRes::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CCompSetRes::result() const {
  // @@protoc_insertion_point(field_get:CCompSetRes.result)
  return result_;
}
inline void CCompSetRes::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CCompSetRes.result)
}

// -------------------------------------------------------------------

// CNotifyAlarm

// optional .STAlarmInfo stAlarm = 1;
inline bool CNotifyAlarm::has_stalarm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNotifyAlarm::set_has_stalarm() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNotifyAlarm::clear_has_stalarm() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNotifyAlarm::clear_stalarm() {
  if (stalarm_ != NULL) stalarm_->::STAlarmInfo::Clear();
  clear_has_stalarm();
}
inline const ::STAlarmInfo& CNotifyAlarm::stalarm() const {
  // @@protoc_insertion_point(field_get:CNotifyAlarm.stAlarm)
  return stalarm_ != NULL ? *stalarm_ : *default_instance_->stalarm_;
}
inline ::STAlarmInfo* CNotifyAlarm::mutable_stalarm() {
  set_has_stalarm();
  if (stalarm_ == NULL) stalarm_ = new ::STAlarmInfo;
  // @@protoc_insertion_point(field_mutable:CNotifyAlarm.stAlarm)
  return stalarm_;
}
inline ::STAlarmInfo* CNotifyAlarm::release_stalarm() {
  clear_has_stalarm();
  ::STAlarmInfo* temp = stalarm_;
  stalarm_ = NULL;
  return temp;
}
inline void CNotifyAlarm::set_allocated_stalarm(::STAlarmInfo* stalarm) {
  delete stalarm_;
  stalarm_ = stalarm;
  if (stalarm) {
    set_has_stalarm();
  } else {
    clear_has_stalarm();
  }
  // @@protoc_insertion_point(field_set_allocated:CNotifyAlarm.stAlarm)
}

// optional uint32 ulActType = 2;
inline bool CNotifyAlarm::has_ulacttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CNotifyAlarm::set_has_ulacttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CNotifyAlarm::clear_has_ulacttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CNotifyAlarm::clear_ulacttype() {
  ulacttype_ = 0u;
  clear_has_ulacttype();
}
inline ::google::protobuf::uint32 CNotifyAlarm::ulacttype() const {
  // @@protoc_insertion_point(field_get:CNotifyAlarm.ulActType)
  return ulacttype_;
}
inline void CNotifyAlarm::set_ulacttype(::google::protobuf::uint32 value) {
  set_has_ulacttype();
  ulacttype_ = value;
  // @@protoc_insertion_point(field_set:CNotifyAlarm.ulActType)
}

// -------------------------------------------------------------------

// CNotifyAlarmList

// repeated .STAlarmInfo stAlarms = 1;
inline int CNotifyAlarmList::stalarms_size() const {
  return stalarms_.size();
}
inline void CNotifyAlarmList::clear_stalarms() {
  stalarms_.Clear();
}
inline const ::STAlarmInfo& CNotifyAlarmList::stalarms(int index) const {
  // @@protoc_insertion_point(field_get:CNotifyAlarmList.stAlarms)
  return stalarms_.Get(index);
}
inline ::STAlarmInfo* CNotifyAlarmList::mutable_stalarms(int index) {
  // @@protoc_insertion_point(field_mutable:CNotifyAlarmList.stAlarms)
  return stalarms_.Mutable(index);
}
inline ::STAlarmInfo* CNotifyAlarmList::add_stalarms() {
  // @@protoc_insertion_point(field_add:CNotifyAlarmList.stAlarms)
  return stalarms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STAlarmInfo >&
CNotifyAlarmList::stalarms() const {
  // @@protoc_insertion_point(field_list:CNotifyAlarmList.stAlarms)
  return stalarms_;
}
inline ::google::protobuf::RepeatedPtrField< ::STAlarmInfo >*
CNotifyAlarmList::mutable_stalarms() {
  // @@protoc_insertion_point(field_mutable_list:CNotifyAlarmList.stAlarms)
  return &stalarms_;
}

// -------------------------------------------------------------------

// CTemperatureQuery

// repeated .STKeyValue temperature = 1;
inline int CTemperatureQuery::temperature_size() const {
  return temperature_.size();
}
inline void CTemperatureQuery::clear_temperature() {
  temperature_.Clear();
}
inline const ::STKeyValue& CTemperatureQuery::temperature(int index) const {
  // @@protoc_insertion_point(field_get:CTemperatureQuery.temperature)
  return temperature_.Get(index);
}
inline ::STKeyValue* CTemperatureQuery::mutable_temperature(int index) {
  // @@protoc_insertion_point(field_mutable:CTemperatureQuery.temperature)
  return temperature_.Mutable(index);
}
inline ::STKeyValue* CTemperatureQuery::add_temperature() {
  // @@protoc_insertion_point(field_add:CTemperatureQuery.temperature)
  return temperature_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
CTemperatureQuery::temperature() const {
  // @@protoc_insertion_point(field_list:CTemperatureQuery.temperature)
  return temperature_;
}
inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
CTemperatureQuery::mutable_temperature() {
  // @@protoc_insertion_point(field_mutable_list:CTemperatureQuery.temperature)
  return &temperature_;
}

// -------------------------------------------------------------------

// CDwnUpdate

// repeated uint32 uiSubsysId = 1;
inline int CDwnUpdate::uisubsysid_size() const {
  return uisubsysid_.size();
}
inline void CDwnUpdate::clear_uisubsysid() {
  uisubsysid_.Clear();
}
inline ::google::protobuf::uint32 CDwnUpdate::uisubsysid(int index) const {
  // @@protoc_insertion_point(field_get:CDwnUpdate.uiSubsysId)
  return uisubsysid_.Get(index);
}
inline void CDwnUpdate::set_uisubsysid(int index, ::google::protobuf::uint32 value) {
  uisubsysid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDwnUpdate.uiSubsysId)
}
inline void CDwnUpdate::add_uisubsysid(::google::protobuf::uint32 value) {
  uisubsysid_.Add(value);
  // @@protoc_insertion_point(field_add:CDwnUpdate.uiSubsysId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDwnUpdate::uisubsysid() const {
  // @@protoc_insertion_point(field_list:CDwnUpdate.uiSubsysId)
  return uisubsysid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDwnUpdate::mutable_uisubsysid() {
  // @@protoc_insertion_point(field_mutable_list:CDwnUpdate.uiSubsysId)
  return &uisubsysid_;
}

// -------------------------------------------------------------------

// CDwnUpdateRes

// optional .STKeyValue UpdateRes = 1;
inline bool CDwnUpdateRes::has_updateres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDwnUpdateRes::set_has_updateres() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDwnUpdateRes::clear_has_updateres() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDwnUpdateRes::clear_updateres() {
  if (updateres_ != NULL) updateres_->::STKeyValue::Clear();
  clear_has_updateres();
}
inline const ::STKeyValue& CDwnUpdateRes::updateres() const {
  // @@protoc_insertion_point(field_get:CDwnUpdateRes.UpdateRes)
  return updateres_ != NULL ? *updateres_ : *default_instance_->updateres_;
}
inline ::STKeyValue* CDwnUpdateRes::mutable_updateres() {
  set_has_updateres();
  if (updateres_ == NULL) updateres_ = new ::STKeyValue;
  // @@protoc_insertion_point(field_mutable:CDwnUpdateRes.UpdateRes)
  return updateres_;
}
inline ::STKeyValue* CDwnUpdateRes::release_updateres() {
  clear_has_updateres();
  ::STKeyValue* temp = updateres_;
  updateres_ = NULL;
  return temp;
}
inline void CDwnUpdateRes::set_allocated_updateres(::STKeyValue* updateres) {
  delete updateres_;
  updateres_ = updateres;
  if (updateres) {
    set_has_updateres();
  } else {
    clear_has_updateres();
  }
  // @@protoc_insertion_point(field_set_allocated:CDwnUpdateRes.UpdateRes)
}

// -------------------------------------------------------------------

// STReqSmoothAreaTest

// optional uint32 uiCircle = 1;
inline bool STReqSmoothAreaTest::has_uicircle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqSmoothAreaTest::set_has_uicircle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqSmoothAreaTest::clear_has_uicircle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqSmoothAreaTest::clear_uicircle() {
  uicircle_ = 0u;
  clear_has_uicircle();
}
inline ::google::protobuf::uint32 STReqSmoothAreaTest::uicircle() const {
  // @@protoc_insertion_point(field_get:STReqSmoothAreaTest.uiCircle)
  return uicircle_;
}
inline void STReqSmoothAreaTest::set_uicircle(::google::protobuf::uint32 value) {
  set_has_uicircle();
  uicircle_ = value;
  // @@protoc_insertion_point(field_set:STReqSmoothAreaTest.uiCircle)
}

// -------------------------------------------------------------------

// STResSmoothAreaTest

// repeated uint32 uiAdVal = 1;
inline int STResSmoothAreaTest::uiadval_size() const {
  return uiadval_.size();
}
inline void STResSmoothAreaTest::clear_uiadval() {
  uiadval_.Clear();
}
inline ::google::protobuf::uint32 STResSmoothAreaTest::uiadval(int index) const {
  // @@protoc_insertion_point(field_get:STResSmoothAreaTest.uiAdVal)
  return uiadval_.Get(index);
}
inline void STResSmoothAreaTest::set_uiadval(int index, ::google::protobuf::uint32 value) {
  uiadval_.Set(index, value);
  // @@protoc_insertion_point(field_set:STResSmoothAreaTest.uiAdVal)
}
inline void STResSmoothAreaTest::add_uiadval(::google::protobuf::uint32 value) {
  uiadval_.Add(value);
  // @@protoc_insertion_point(field_add:STResSmoothAreaTest.uiAdVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
STResSmoothAreaTest::uiadval() const {
  // @@protoc_insertion_point(field_list:STResSmoothAreaTest.uiAdVal)
  return uiadval_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
STResSmoothAreaTest::mutable_uiadval() {
  // @@protoc_insertion_point(field_mutable_list:STResSmoothAreaTest.uiAdVal)
  return &uiadval_;
}

// -------------------------------------------------------------------

// STReqShowWave

// optional uint32 uiSwitch = 1;
inline bool STReqShowWave::has_uiswitch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqShowWave::set_has_uiswitch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqShowWave::clear_has_uiswitch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqShowWave::clear_uiswitch() {
  uiswitch_ = 0u;
  clear_has_uiswitch();
}
inline ::google::protobuf::uint32 STReqShowWave::uiswitch() const {
  // @@protoc_insertion_point(field_get:STReqShowWave.uiSwitch)
  return uiswitch_;
}
inline void STReqShowWave::set_uiswitch(::google::protobuf::uint32 value) {
  set_has_uiswitch();
  uiswitch_ = value;
  // @@protoc_insertion_point(field_set:STReqShowWave.uiSwitch)
}

// optional uint32 uiChannel = 2;
inline bool STReqShowWave::has_uichannel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STReqShowWave::set_has_uichannel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STReqShowWave::clear_has_uichannel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STReqShowWave::clear_uichannel() {
  uichannel_ = 0u;
  clear_has_uichannel();
}
inline ::google::protobuf::uint32 STReqShowWave::uichannel() const {
  // @@protoc_insertion_point(field_get:STReqShowWave.uiChannel)
  return uichannel_;
}
inline void STReqShowWave::set_uichannel(::google::protobuf::uint32 value) {
  set_has_uichannel();
  uichannel_ = value;
  // @@protoc_insertion_point(field_set:STReqShowWave.uiChannel)
}

// optional uint32 uiSignal = 3;
inline bool STReqShowWave::has_uisignal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STReqShowWave::set_has_uisignal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STReqShowWave::clear_has_uisignal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STReqShowWave::clear_uisignal() {
  uisignal_ = 0u;
  clear_has_uisignal();
}
inline ::google::protobuf::uint32 STReqShowWave::uisignal() const {
  // @@protoc_insertion_point(field_get:STReqShowWave.uiSignal)
  return uisignal_;
}
inline void STReqShowWave::set_uisignal(::google::protobuf::uint32 value) {
  set_has_uisignal();
  uisignal_ = value;
  // @@protoc_insertion_point(field_set:STReqShowWave.uiSignal)
}

// -------------------------------------------------------------------

// STResShowWave

// optional uint32 uiChannel = 1;
inline bool STResShowWave::has_uichannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STResShowWave::set_has_uichannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STResShowWave::clear_has_uichannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STResShowWave::clear_uichannel() {
  uichannel_ = 0u;
  clear_has_uichannel();
}
inline ::google::protobuf::uint32 STResShowWave::uichannel() const {
  // @@protoc_insertion_point(field_get:STResShowWave.uiChannel)
  return uichannel_;
}
inline void STResShowWave::set_uichannel(::google::protobuf::uint32 value) {
  set_has_uichannel();
  uichannel_ = value;
  // @@protoc_insertion_point(field_set:STResShowWave.uiChannel)
}

// repeated bool uiSigVal = 2;
inline int STResShowWave::uisigval_size() const {
  return uisigval_.size();
}
inline void STResShowWave::clear_uisigval() {
  uisigval_.Clear();
}
inline bool STResShowWave::uisigval(int index) const {
  // @@protoc_insertion_point(field_get:STResShowWave.uiSigVal)
  return uisigval_.Get(index);
}
inline void STResShowWave::set_uisigval(int index, bool value) {
  uisigval_.Set(index, value);
  // @@protoc_insertion_point(field_set:STResShowWave.uiSigVal)
}
inline void STResShowWave::add_uisigval(bool value) {
  uisigval_.Add(value);
  // @@protoc_insertion_point(field_add:STResShowWave.uiSigVal)
}
inline const ::google::protobuf::RepeatedField< bool >&
STResShowWave::uisigval() const {
  // @@protoc_insertion_point(field_list:STResShowWave.uiSigVal)
  return uisigval_;
}
inline ::google::protobuf::RepeatedField< bool >*
STResShowWave::mutable_uisigval() {
  // @@protoc_insertion_point(field_mutable_list:STResShowWave.uiSigVal)
  return &uisigval_;
}

// -------------------------------------------------------------------

// STReqConnectPort

// optional uint32 uiPort = 1;
inline bool STReqConnectPort::has_uiport() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqConnectPort::set_has_uiport() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqConnectPort::clear_has_uiport() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqConnectPort::clear_uiport() {
  uiport_ = 0u;
  clear_has_uiport();
}
inline ::google::protobuf::uint32 STReqConnectPort::uiport() const {
  // @@protoc_insertion_point(field_get:STReqConnectPort.uiPort)
  return uiport_;
}
inline void STReqConnectPort::set_uiport(::google::protobuf::uint32 value) {
  set_has_uiport();
  uiport_ = value;
  // @@protoc_insertion_point(field_set:STReqConnectPort.uiPort)
}

// -------------------------------------------------------------------

// STReqShowAD

// optional uint32 uiSwitch = 1;
inline bool STReqShowAD::has_uiswitch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqShowAD::set_has_uiswitch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqShowAD::clear_has_uiswitch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqShowAD::clear_uiswitch() {
  uiswitch_ = 0u;
  clear_has_uiswitch();
}
inline ::google::protobuf::uint32 STReqShowAD::uiswitch() const {
  // @@protoc_insertion_point(field_get:STReqShowAD.uiSwitch)
  return uiswitch_;
}
inline void STReqShowAD::set_uiswitch(::google::protobuf::uint32 value) {
  set_has_uiswitch();
  uiswitch_ = value;
  // @@protoc_insertion_point(field_set:STReqShowAD.uiSwitch)
}

// -------------------------------------------------------------------

// STSwitch

// optional bool uiSwitch = 1;
inline bool STSwitch::has_uiswitch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STSwitch::set_has_uiswitch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STSwitch::clear_has_uiswitch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STSwitch::clear_uiswitch() {
  uiswitch_ = false;
  clear_has_uiswitch();
}
inline bool STSwitch::uiswitch() const {
  // @@protoc_insertion_point(field_get:STSwitch.uiSwitch)
  return uiswitch_;
}
inline void STSwitch::set_uiswitch(bool value) {
  set_has_uiswitch();
  uiswitch_ = value;
  // @@protoc_insertion_point(field_set:STSwitch.uiSwitch)
}

// optional uint32 uiPara = 2;
inline bool STSwitch::has_uipara() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STSwitch::set_has_uipara() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STSwitch::clear_has_uipara() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STSwitch::clear_uipara() {
  uipara_ = 0u;
  clear_has_uipara();
}
inline ::google::protobuf::uint32 STSwitch::uipara() const {
  // @@protoc_insertion_point(field_get:STSwitch.uiPara)
  return uipara_;
}
inline void STSwitch::set_uipara(::google::protobuf::uint32 value) {
  set_has_uipara();
  uipara_ = value;
  // @@protoc_insertion_point(field_set:STSwitch.uiPara)
}

// -------------------------------------------------------------------

// STTestAD

// repeated .STTestVal stVal = 1;
inline int STTestAD::stval_size() const {
  return stval_.size();
}
inline void STTestAD::clear_stval() {
  stval_.Clear();
}
inline const ::STTestVal& STTestAD::stval(int index) const {
  // @@protoc_insertion_point(field_get:STTestAD.stVal)
  return stval_.Get(index);
}
inline ::STTestVal* STTestAD::mutable_stval(int index) {
  // @@protoc_insertion_point(field_mutable:STTestAD.stVal)
  return stval_.Mutable(index);
}
inline ::STTestVal* STTestAD::add_stval() {
  // @@protoc_insertion_point(field_add:STTestAD.stVal)
  return stval_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STTestVal >&
STTestAD::stval() const {
  // @@protoc_insertion_point(field_list:STTestAD.stVal)
  return stval_;
}
inline ::google::protobuf::RepeatedPtrField< ::STTestVal >*
STTestAD::mutable_stval() {
  // @@protoc_insertion_point(field_mutable_list:STTestAD.stVal)
  return &stval_;
}

// -------------------------------------------------------------------

// STFLxState

// repeated uint32 uiVal = 1;
inline int STFLxState::uival_size() const {
  return uival_.size();
}
inline void STFLxState::clear_uival() {
  uival_.Clear();
}
inline ::google::protobuf::uint32 STFLxState::uival(int index) const {
  // @@protoc_insertion_point(field_get:STFLxState.uiVal)
  return uival_.Get(index);
}
inline void STFLxState::set_uival(int index, ::google::protobuf::uint32 value) {
  uival_.Set(index, value);
  // @@protoc_insertion_point(field_set:STFLxState.uiVal)
}
inline void STFLxState::add_uival(::google::protobuf::uint32 value) {
  uival_.Add(value);
  // @@protoc_insertion_point(field_add:STFLxState.uiVal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
STFLxState::uival() const {
  // @@protoc_insertion_point(field_list:STFLxState.uiVal)
  return uival_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
STFLxState::mutable_uival() {
  // @@protoc_insertion_point(field_mutable_list:STFLxState.uiVal)
  return &uival_;
}

// -------------------------------------------------------------------

// STLog

// optional string szLogInfo = 1;
inline bool STLog::has_szloginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STLog::set_has_szloginfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STLog::clear_has_szloginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STLog::clear_szloginfo() {
  if (szloginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szloginfo_->clear();
  }
  clear_has_szloginfo();
}
inline const ::std::string& STLog::szloginfo() const {
  // @@protoc_insertion_point(field_get:STLog.szLogInfo)
  return *szloginfo_;
}
inline void STLog::set_szloginfo(const ::std::string& value) {
  set_has_szloginfo();
  if (szloginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szloginfo_ = new ::std::string;
  }
  szloginfo_->assign(value);
  // @@protoc_insertion_point(field_set:STLog.szLogInfo)
}
inline void STLog::set_szloginfo(const char* value) {
  set_has_szloginfo();
  if (szloginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szloginfo_ = new ::std::string;
  }
  szloginfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:STLog.szLogInfo)
}
inline void STLog::set_szloginfo(const char* value, size_t size) {
  set_has_szloginfo();
  if (szloginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szloginfo_ = new ::std::string;
  }
  szloginfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STLog.szLogInfo)
}
inline ::std::string* STLog::mutable_szloginfo() {
  set_has_szloginfo();
  if (szloginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szloginfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STLog.szLogInfo)
  return szloginfo_;
}
inline ::std::string* STLog::release_szloginfo() {
  clear_has_szloginfo();
  if (szloginfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szloginfo_;
    szloginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STLog::set_allocated_szloginfo(::std::string* szloginfo) {
  if (szloginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szloginfo_;
  }
  if (szloginfo) {
    set_has_szloginfo();
    szloginfo_ = szloginfo;
  } else {
    clear_has_szloginfo();
    szloginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STLog.szLogInfo)
}

// -------------------------------------------------------------------

// STSound

// optional uint32 priority = 1;
inline bool STSound::has_priority() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STSound::set_has_priority() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STSound::clear_has_priority() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STSound::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 STSound::priority() const {
  // @@protoc_insertion_point(field_get:STSound.priority)
  return priority_;
}
inline void STSound::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:STSound.priority)
}

// optional string name = 2;
inline bool STSound::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STSound::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STSound::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STSound::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& STSound::name() const {
  // @@protoc_insertion_point(field_get:STSound.name)
  return *name_;
}
inline void STSound::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:STSound.name)
}
inline void STSound::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:STSound.name)
}
inline void STSound::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:STSound.name)
}
inline ::std::string* STSound::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:STSound.name)
  return name_;
}
inline ::std::string* STSound::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void STSound::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:STSound.name)
}

// -------------------------------------------------------------------

// RegPollution

// optional string srcprj = 1;
inline bool RegPollution::has_srcprj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegPollution::set_has_srcprj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegPollution::clear_has_srcprj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegPollution::clear_srcprj() {
  if (srcprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_->clear();
  }
  clear_has_srcprj();
}
inline const ::std::string& RegPollution::srcprj() const {
  // @@protoc_insertion_point(field_get:RegPollution.srcprj)
  return *srcprj_;
}
inline void RegPollution::set_srcprj(const ::std::string& value) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(value);
  // @@protoc_insertion_point(field_set:RegPollution.srcprj)
}
inline void RegPollution::set_srcprj(const char* value) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(value);
  // @@protoc_insertion_point(field_set_char:RegPollution.srcprj)
}
inline void RegPollution::set_srcprj(const char* value, size_t size) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RegPollution.srcprj)
}
inline ::std::string* RegPollution::mutable_srcprj() {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RegPollution.srcprj)
  return srcprj_;
}
inline ::std::string* RegPollution::release_srcprj() {
  clear_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srcprj_;
    srcprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RegPollution::set_allocated_srcprj(::std::string* srcprj) {
  if (srcprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcprj_;
  }
  if (srcprj) {
    set_has_srcprj();
    srcprj_ = srcprj;
  } else {
    clear_has_srcprj();
    srcprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RegPollution.srcprj)
}

// optional string dstprj = 2;
inline bool RegPollution::has_dstprj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegPollution::set_has_dstprj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegPollution::clear_has_dstprj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegPollution::clear_dstprj() {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_->clear();
  }
  clear_has_dstprj();
}
inline const ::std::string& RegPollution::dstprj() const {
  // @@protoc_insertion_point(field_get:RegPollution.dstprj)
  return *dstprj_;
}
inline void RegPollution::set_dstprj(const ::std::string& value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set:RegPollution.dstprj)
}
inline void RegPollution::set_dstprj(const char* value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set_char:RegPollution.dstprj)
}
inline void RegPollution::set_dstprj(const char* value, size_t size) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RegPollution.dstprj)
}
inline ::std::string* RegPollution::mutable_dstprj() {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RegPollution.dstprj)
  return dstprj_;
}
inline ::std::string* RegPollution::release_dstprj() {
  clear_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dstprj_;
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RegPollution::set_allocated_dstprj(::std::string* dstprj) {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dstprj_;
  }
  if (dstprj) {
    set_has_dstprj();
    dstprj_ = dstprj;
  } else {
    clear_has_dstprj();
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RegPollution.dstprj)
}

// optional uint32 ndltype = 3;
inline bool RegPollution::has_ndltype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegPollution::set_has_ndltype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegPollution::clear_has_ndltype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegPollution::clear_ndltype() {
  ndltype_ = 0u;
  clear_has_ndltype();
}
inline ::google::protobuf::uint32 RegPollution::ndltype() const {
  // @@protoc_insertion_point(field_get:RegPollution.ndltype)
  return ndltype_;
}
inline void RegPollution::set_ndltype(::google::protobuf::uint32 value) {
  set_has_ndltype();
  ndltype_ = value;
  // @@protoc_insertion_point(field_set:RegPollution.ndltype)
}

// optional uint32 washtype = 4;
inline bool RegPollution::has_washtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RegPollution::set_has_washtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RegPollution::clear_has_washtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RegPollution::clear_washtype() {
  washtype_ = 0u;
  clear_has_washtype();
}
inline ::google::protobuf::uint32 RegPollution::washtype() const {
  // @@protoc_insertion_point(field_get:RegPollution.washtype)
  return washtype_;
}
inline void RegPollution::set_washtype(::google::protobuf::uint32 value) {
  set_has_washtype();
  washtype_ = value;
  // @@protoc_insertion_point(field_set:RegPollution.washtype)
}

// optional uint32 washcount = 5;
inline bool RegPollution::has_washcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RegPollution::set_has_washcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RegPollution::clear_has_washcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RegPollution::clear_washcount() {
  washcount_ = 0u;
  clear_has_washcount();
}
inline ::google::protobuf::uint32 RegPollution::washcount() const {
  // @@protoc_insertion_point(field_get:RegPollution.washcount)
  return washcount_;
}
inline void RegPollution::set_washcount(::google::protobuf::uint32 value) {
  set_has_washcount();
  washcount_ = value;
  // @@protoc_insertion_point(field_set:RegPollution.washcount)
}

// -------------------------------------------------------------------

// STReqRegPollution

// repeated .RegPollution regpollutionlist = 1;
inline int STReqRegPollution::regpollutionlist_size() const {
  return regpollutionlist_.size();
}
inline void STReqRegPollution::clear_regpollutionlist() {
  regpollutionlist_.Clear();
}
inline const ::RegPollution& STReqRegPollution::regpollutionlist(int index) const {
  // @@protoc_insertion_point(field_get:STReqRegPollution.regpollutionlist)
  return regpollutionlist_.Get(index);
}
inline ::RegPollution* STReqRegPollution::mutable_regpollutionlist(int index) {
  // @@protoc_insertion_point(field_mutable:STReqRegPollution.regpollutionlist)
  return regpollutionlist_.Mutable(index);
}
inline ::RegPollution* STReqRegPollution::add_regpollutionlist() {
  // @@protoc_insertion_point(field_add:STReqRegPollution.regpollutionlist)
  return regpollutionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RegPollution >&
STReqRegPollution::regpollutionlist() const {
  // @@protoc_insertion_point(field_list:STReqRegPollution.regpollutionlist)
  return regpollutionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RegPollution >*
STReqRegPollution::mutable_regpollutionlist() {
  // @@protoc_insertion_point(field_mutable_list:STReqRegPollution.regpollutionlist)
  return &regpollutionlist_;
}

// -------------------------------------------------------------------

// SmpPollution

// optional uint32 srctype = 1;
inline bool SmpPollution::has_srctype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SmpPollution::set_has_srctype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SmpPollution::clear_has_srctype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SmpPollution::clear_srctype() {
  srctype_ = 0u;
  clear_has_srctype();
}
inline ::google::protobuf::uint32 SmpPollution::srctype() const {
  // @@protoc_insertion_point(field_get:SmpPollution.srctype)
  return srctype_;
}
inline void SmpPollution::set_srctype(::google::protobuf::uint32 value) {
  set_has_srctype();
  srctype_ = value;
  // @@protoc_insertion_point(field_set:SmpPollution.srctype)
}

// optional uint32 dsttype = 2;
inline bool SmpPollution::has_dsttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SmpPollution::set_has_dsttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SmpPollution::clear_has_dsttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SmpPollution::clear_dsttype() {
  dsttype_ = 0u;
  clear_has_dsttype();
}
inline ::google::protobuf::uint32 SmpPollution::dsttype() const {
  // @@protoc_insertion_point(field_get:SmpPollution.dsttype)
  return dsttype_;
}
inline void SmpPollution::set_dsttype(::google::protobuf::uint32 value) {
  set_has_dsttype();
  dsttype_ = value;
  // @@protoc_insertion_point(field_set:SmpPollution.dsttype)
}

// optional string dstprj = 3;
inline bool SmpPollution::has_dstprj() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SmpPollution::set_has_dstprj() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SmpPollution::clear_has_dstprj() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SmpPollution::clear_dstprj() {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_->clear();
  }
  clear_has_dstprj();
}
inline const ::std::string& SmpPollution::dstprj() const {
  // @@protoc_insertion_point(field_get:SmpPollution.dstprj)
  return *dstprj_;
}
inline void SmpPollution::set_dstprj(const ::std::string& value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set:SmpPollution.dstprj)
}
inline void SmpPollution::set_dstprj(const char* value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set_char:SmpPollution.dstprj)
}
inline void SmpPollution::set_dstprj(const char* value, size_t size) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SmpPollution.dstprj)
}
inline ::std::string* SmpPollution::mutable_dstprj() {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SmpPollution.dstprj)
  return dstprj_;
}
inline ::std::string* SmpPollution::release_dstprj() {
  clear_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dstprj_;
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SmpPollution::set_allocated_dstprj(::std::string* dstprj) {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dstprj_;
  }
  if (dstprj) {
    set_has_dstprj();
    dstprj_ = dstprj;
  } else {
    clear_has_dstprj();
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SmpPollution.dstprj)
}

// optional uint32 washtype = 4;
inline bool SmpPollution::has_washtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SmpPollution::set_has_washtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SmpPollution::clear_has_washtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SmpPollution::clear_washtype() {
  washtype_ = 0u;
  clear_has_washtype();
}
inline ::google::protobuf::uint32 SmpPollution::washtype() const {
  // @@protoc_insertion_point(field_get:SmpPollution.washtype)
  return washtype_;
}
inline void SmpPollution::set_washtype(::google::protobuf::uint32 value) {
  set_has_washtype();
  washtype_ = value;
  // @@protoc_insertion_point(field_set:SmpPollution.washtype)
}

// optional uint32 washcount = 5;
inline bool SmpPollution::has_washcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SmpPollution::set_has_washcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SmpPollution::clear_has_washcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SmpPollution::clear_washcount() {
  washcount_ = 0u;
  clear_has_washcount();
}
inline ::google::protobuf::uint32 SmpPollution::washcount() const {
  // @@protoc_insertion_point(field_get:SmpPollution.washcount)
  return washcount_;
}
inline void SmpPollution::set_washcount(::google::protobuf::uint32 value) {
  set_has_washcount();
  washcount_ = value;
  // @@protoc_insertion_point(field_set:SmpPollution.washcount)
}

// -------------------------------------------------------------------

// STReqSmpPollution

// repeated .SmpPollution smppollutionlist = 1;
inline int STReqSmpPollution::smppollutionlist_size() const {
  return smppollutionlist_.size();
}
inline void STReqSmpPollution::clear_smppollutionlist() {
  smppollutionlist_.Clear();
}
inline const ::SmpPollution& STReqSmpPollution::smppollutionlist(int index) const {
  // @@protoc_insertion_point(field_get:STReqSmpPollution.smppollutionlist)
  return smppollutionlist_.Get(index);
}
inline ::SmpPollution* STReqSmpPollution::mutable_smppollutionlist(int index) {
  // @@protoc_insertion_point(field_mutable:STReqSmpPollution.smppollutionlist)
  return smppollutionlist_.Mutable(index);
}
inline ::SmpPollution* STReqSmpPollution::add_smppollutionlist() {
  // @@protoc_insertion_point(field_add:STReqSmpPollution.smppollutionlist)
  return smppollutionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SmpPollution >&
STReqSmpPollution::smppollutionlist() const {
  // @@protoc_insertion_point(field_list:STReqSmpPollution.smppollutionlist)
  return smppollutionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SmpPollution >*
STReqSmpPollution::mutable_smppollutionlist() {
  // @@protoc_insertion_point(field_mutable_list:STReqSmpPollution.smppollutionlist)
  return &smppollutionlist_;
}

// -------------------------------------------------------------------

// BeepAlarm

// optional uint32 alarmLevel = 1;
inline bool BeepAlarm::has_alarmlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeepAlarm::set_has_alarmlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeepAlarm::clear_has_alarmlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeepAlarm::clear_alarmlevel() {
  alarmlevel_ = 0u;
  clear_has_alarmlevel();
}
inline ::google::protobuf::uint32 BeepAlarm::alarmlevel() const {
  // @@protoc_insertion_point(field_get:BeepAlarm.alarmLevel)
  return alarmlevel_;
}
inline void BeepAlarm::set_alarmlevel(::google::protobuf::uint32 value) {
  set_has_alarmlevel();
  alarmlevel_ = value;
  // @@protoc_insertion_point(field_set:BeepAlarm.alarmLevel)
}

// optional uint32 beepCount = 2;
inline bool BeepAlarm::has_beepcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeepAlarm::set_has_beepcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeepAlarm::clear_has_beepcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeepAlarm::clear_beepcount() {
  beepcount_ = 0u;
  clear_has_beepcount();
}
inline ::google::protobuf::uint32 BeepAlarm::beepcount() const {
  // @@protoc_insertion_point(field_get:BeepAlarm.beepCount)
  return beepcount_;
}
inline void BeepAlarm::set_beepcount(::google::protobuf::uint32 value) {
  set_has_beepcount();
  beepcount_ = value;
  // @@protoc_insertion_point(field_set:BeepAlarm.beepCount)
}

// -------------------------------------------------------------------

// STReqBeepAlarm

// optional uint32 BeepEnable = 1;
inline bool STReqBeepAlarm::has_beepenable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STReqBeepAlarm::set_has_beepenable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STReqBeepAlarm::clear_has_beepenable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STReqBeepAlarm::clear_beepenable() {
  beepenable_ = 0u;
  clear_has_beepenable();
}
inline ::google::protobuf::uint32 STReqBeepAlarm::beepenable() const {
  // @@protoc_insertion_point(field_get:STReqBeepAlarm.BeepEnable)
  return beepenable_;
}
inline void STReqBeepAlarm::set_beepenable(::google::protobuf::uint32 value) {
  set_has_beepenable();
  beepenable_ = value;
  // @@protoc_insertion_point(field_set:STReqBeepAlarm.BeepEnable)
}

// repeated .BeepAlarm beepCountList = 2;
inline int STReqBeepAlarm::beepcountlist_size() const {
  return beepcountlist_.size();
}
inline void STReqBeepAlarm::clear_beepcountlist() {
  beepcountlist_.Clear();
}
inline const ::BeepAlarm& STReqBeepAlarm::beepcountlist(int index) const {
  // @@protoc_insertion_point(field_get:STReqBeepAlarm.beepCountList)
  return beepcountlist_.Get(index);
}
inline ::BeepAlarm* STReqBeepAlarm::mutable_beepcountlist(int index) {
  // @@protoc_insertion_point(field_mutable:STReqBeepAlarm.beepCountList)
  return beepcountlist_.Mutable(index);
}
inline ::BeepAlarm* STReqBeepAlarm::add_beepcountlist() {
  // @@protoc_insertion_point(field_add:STReqBeepAlarm.beepCountList)
  return beepcountlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BeepAlarm >&
STReqBeepAlarm::beepcountlist() const {
  // @@protoc_insertion_point(field_list:STReqBeepAlarm.beepCountList)
  return beepcountlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::BeepAlarm >*
STReqBeepAlarm::mutable_beepcountlist() {
  // @@protoc_insertion_point(field_mutable_list:STReqBeepAlarm.beepCountList)
  return &beepcountlist_;
}

// -------------------------------------------------------------------

// BloodAbsorbMode

// optional uint32 mode = 1;
inline bool BloodAbsorbMode::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BloodAbsorbMode::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BloodAbsorbMode::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BloodAbsorbMode::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 BloodAbsorbMode::mode() const {
  // @@protoc_insertion_point(field_get:BloodAbsorbMode.mode)
  return mode_;
}
inline void BloodAbsorbMode::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:BloodAbsorbMode.mode)
}

// -------------------------------------------------------------------

// RctPollution

// optional string srcprj = 1;
inline bool RctPollution::has_srcprj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RctPollution::set_has_srcprj() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RctPollution::clear_has_srcprj() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RctPollution::clear_srcprj() {
  if (srcprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_->clear();
  }
  clear_has_srcprj();
}
inline const ::std::string& RctPollution::srcprj() const {
  // @@protoc_insertion_point(field_get:RctPollution.srcprj)
  return *srcprj_;
}
inline void RctPollution::set_srcprj(const ::std::string& value) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(value);
  // @@protoc_insertion_point(field_set:RctPollution.srcprj)
}
inline void RctPollution::set_srcprj(const char* value) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(value);
  // @@protoc_insertion_point(field_set_char:RctPollution.srcprj)
}
inline void RctPollution::set_srcprj(const char* value, size_t size) {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  srcprj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RctPollution.srcprj)
}
inline ::std::string* RctPollution::mutable_srcprj() {
  set_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcprj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RctPollution.srcprj)
  return srcprj_;
}
inline ::std::string* RctPollution::release_srcprj() {
  clear_has_srcprj();
  if (srcprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srcprj_;
    srcprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RctPollution::set_allocated_srcprj(::std::string* srcprj) {
  if (srcprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcprj_;
  }
  if (srcprj) {
    set_has_srcprj();
    srcprj_ = srcprj;
  } else {
    clear_has_srcprj();
    srcprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RctPollution.srcprj)
}

// optional string dstprj = 2;
inline bool RctPollution::has_dstprj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RctPollution::set_has_dstprj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RctPollution::clear_has_dstprj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RctPollution::clear_dstprj() {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_->clear();
  }
  clear_has_dstprj();
}
inline const ::std::string& RctPollution::dstprj() const {
  // @@protoc_insertion_point(field_get:RctPollution.dstprj)
  return *dstprj_;
}
inline void RctPollution::set_dstprj(const ::std::string& value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set:RctPollution.dstprj)
}
inline void RctPollution::set_dstprj(const char* value) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(value);
  // @@protoc_insertion_point(field_set_char:RctPollution.dstprj)
}
inline void RctPollution::set_dstprj(const char* value, size_t size) {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  dstprj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RctPollution.dstprj)
}
inline ::std::string* RctPollution::mutable_dstprj() {
  set_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dstprj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:RctPollution.dstprj)
  return dstprj_;
}
inline ::std::string* RctPollution::release_dstprj() {
  clear_has_dstprj();
  if (dstprj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dstprj_;
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RctPollution::set_allocated_dstprj(::std::string* dstprj) {
  if (dstprj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dstprj_;
  }
  if (dstprj) {
    set_has_dstprj();
    dstprj_ = dstprj;
  } else {
    clear_has_dstprj();
    dstprj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:RctPollution.dstprj)
}

// optional uint32 washtype = 3;
inline bool RctPollution::has_washtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RctPollution::set_has_washtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RctPollution::clear_has_washtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RctPollution::clear_washtype() {
  washtype_ = 0u;
  clear_has_washtype();
}
inline ::google::protobuf::uint32 RctPollution::washtype() const {
  // @@protoc_insertion_point(field_get:RctPollution.washtype)
  return washtype_;
}
inline void RctPollution::set_washtype(::google::protobuf::uint32 value) {
  set_has_washtype();
  washtype_ = value;
  // @@protoc_insertion_point(field_set:RctPollution.washtype)
}

// -------------------------------------------------------------------

// STRCtRegPollution

// repeated .RctPollution rctpollutionlist = 1;
inline int STRCtRegPollution::rctpollutionlist_size() const {
  return rctpollutionlist_.size();
}
inline void STRCtRegPollution::clear_rctpollutionlist() {
  rctpollutionlist_.Clear();
}
inline const ::RctPollution& STRCtRegPollution::rctpollutionlist(int index) const {
  // @@protoc_insertion_point(field_get:STRCtRegPollution.rctpollutionlist)
  return rctpollutionlist_.Get(index);
}
inline ::RctPollution* STRCtRegPollution::mutable_rctpollutionlist(int index) {
  // @@protoc_insertion_point(field_mutable:STRCtRegPollution.rctpollutionlist)
  return rctpollutionlist_.Mutable(index);
}
inline ::RctPollution* STRCtRegPollution::add_rctpollutionlist() {
  // @@protoc_insertion_point(field_add:STRCtRegPollution.rctpollutionlist)
  return rctpollutionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RctPollution >&
STRCtRegPollution::rctpollutionlist() const {
  // @@protoc_insertion_point(field_list:STRCtRegPollution.rctpollutionlist)
  return rctpollutionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::RctPollution >*
STRCtRegPollution::mutable_rctpollutionlist() {
  // @@protoc_insertion_point(field_mutable_list:STRCtRegPollution.rctpollutionlist)
  return &rctpollutionlist_;
}

// -------------------------------------------------------------------

// STConsum

// optional uint32 type = 1;
inline bool STConsum::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STConsum::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STConsum::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STConsum::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 STConsum::type() const {
  // @@protoc_insertion_point(field_get:STConsum.type)
  return type_;
}
inline void STConsum::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:STConsum.type)
}

// optional uint32 para = 2;
inline bool STConsum::has_para() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STConsum::set_has_para() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STConsum::clear_has_para() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STConsum::clear_para() {
  para_ = 0u;
  clear_has_para();
}
inline ::google::protobuf::uint32 STConsum::para() const {
  // @@protoc_insertion_point(field_get:STConsum.para)
  return para_;
}
inline void STConsum::set_para(::google::protobuf::uint32 value) {
  set_has_para();
  para_ = value;
  // @@protoc_insertion_point(field_set:STConsum.para)
}

// -------------------------------------------------------------------

// STTempPara

// optional uint32 tempreact = 1;
inline bool STTempPara::has_tempreact() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STTempPara::set_has_tempreact() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STTempPara::clear_has_tempreact() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STTempPara::clear_tempreact() {
  tempreact_ = 0u;
  clear_has_tempreact();
}
inline ::google::protobuf::uint32 STTempPara::tempreact() const {
  // @@protoc_insertion_point(field_get:STTempPara.tempreact)
  return tempreact_;
}
inline void STTempPara::set_tempreact(::google::protobuf::uint32 value) {
  set_has_tempreact();
  tempreact_ = value;
  // @@protoc_insertion_point(field_set:STTempPara.tempreact)
}

// optional uint32 delta = 2;
inline bool STTempPara::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STTempPara::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STTempPara::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STTempPara::clear_delta() {
  delta_ = 0u;
  clear_has_delta();
}
inline ::google::protobuf::uint32 STTempPara::delta() const {
  // @@protoc_insertion_point(field_get:STTempPara.delta)
  return delta_;
}
inline void STTempPara::set_delta(::google::protobuf::uint32 value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:STTempPara.delta)
}

// optional uint32 tempwash1 = 3;
inline bool STTempPara::has_tempwash1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STTempPara::set_has_tempwash1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STTempPara::clear_has_tempwash1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STTempPara::clear_tempwash1() {
  tempwash1_ = 0u;
  clear_has_tempwash1();
}
inline ::google::protobuf::uint32 STTempPara::tempwash1() const {
  // @@protoc_insertion_point(field_get:STTempPara.tempwash1)
  return tempwash1_;
}
inline void STTempPara::set_tempwash1(::google::protobuf::uint32 value) {
  set_has_tempwash1();
  tempwash1_ = value;
  // @@protoc_insertion_point(field_set:STTempPara.tempwash1)
}

// optional uint32 tempwash2 = 4;
inline bool STTempPara::has_tempwash2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STTempPara::set_has_tempwash2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STTempPara::clear_has_tempwash2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STTempPara::clear_tempwash2() {
  tempwash2_ = 0u;
  clear_has_tempwash2();
}
inline ::google::protobuf::uint32 STTempPara::tempwash2() const {
  // @@protoc_insertion_point(field_get:STTempPara.tempwash2)
  return tempwash2_;
}
inline void STTempPara::set_tempwash2(::google::protobuf::uint32 value) {
  set_has_tempwash2();
  tempwash2_ = value;
  // @@protoc_insertion_point(field_set:STTempPara.tempwash2)
}

// optional uint32 tempwash3 = 5;
inline bool STTempPara::has_tempwash3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void STTempPara::set_has_tempwash3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void STTempPara::clear_has_tempwash3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void STTempPara::clear_tempwash3() {
  tempwash3_ = 0u;
  clear_has_tempwash3();
}
inline ::google::protobuf::uint32 STTempPara::tempwash3() const {
  // @@protoc_insertion_point(field_get:STTempPara.tempwash3)
  return tempwash3_;
}
inline void STTempPara::set_tempwash3(::google::protobuf::uint32 value) {
  set_has_tempwash3();
  tempwash3_ = value;
  // @@protoc_insertion_point(field_set:STTempPara.tempwash3)
}

// -------------------------------------------------------------------

// STShelfMng

// optional .ShelfCtrlType ctrlType = 1;
inline bool STShelfMng::has_ctrltype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STShelfMng::set_has_ctrltype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STShelfMng::clear_has_ctrltype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STShelfMng::clear_ctrltype() {
  ctrltype_ = 1;
  clear_has_ctrltype();
}
inline ::ShelfCtrlType STShelfMng::ctrltype() const {
  // @@protoc_insertion_point(field_get:STShelfMng.ctrlType)
  return static_cast< ::ShelfCtrlType >(ctrltype_);
}
inline void STShelfMng::set_ctrltype(::ShelfCtrlType value) {
  assert(::ShelfCtrlType_IsValid(value));
  set_has_ctrltype();
  ctrltype_ = value;
  // @@protoc_insertion_point(field_set:STShelfMng.ctrlType)
}

// optional uint32 shelfNum = 2;
inline bool STShelfMng::has_shelfnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STShelfMng::set_has_shelfnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STShelfMng::clear_has_shelfnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STShelfMng::clear_shelfnum() {
  shelfnum_ = 0u;
  clear_has_shelfnum();
}
inline ::google::protobuf::uint32 STShelfMng::shelfnum() const {
  // @@protoc_insertion_point(field_get:STShelfMng.shelfNum)
  return shelfnum_;
}
inline void STShelfMng::set_shelfnum(::google::protobuf::uint32 value) {
  set_has_shelfnum();
  shelfnum_ = value;
  // @@protoc_insertion_point(field_set:STShelfMng.shelfNum)
}

// repeated .STSmpBacode stSmpBarcode = 3;
inline int STShelfMng::stsmpbarcode_size() const {
  return stsmpbarcode_.size();
}
inline void STShelfMng::clear_stsmpbarcode() {
  stsmpbarcode_.Clear();
}
inline const ::STSmpBacode& STShelfMng::stsmpbarcode(int index) const {
  // @@protoc_insertion_point(field_get:STShelfMng.stSmpBarcode)
  return stsmpbarcode_.Get(index);
}
inline ::STSmpBacode* STShelfMng::mutable_stsmpbarcode(int index) {
  // @@protoc_insertion_point(field_mutable:STShelfMng.stSmpBarcode)
  return stsmpbarcode_.Mutable(index);
}
inline ::STSmpBacode* STShelfMng::add_stsmpbarcode() {
  // @@protoc_insertion_point(field_add:STShelfMng.stSmpBarcode)
  return stsmpbarcode_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STSmpBacode >&
STShelfMng::stsmpbarcode() const {
  // @@protoc_insertion_point(field_list:STShelfMng.stSmpBarcode)
  return stsmpbarcode_;
}
inline ::google::protobuf::RepeatedPtrField< ::STSmpBacode >*
STShelfMng::mutable_stsmpbarcode() {
  // @@protoc_insertion_point(field_mutable_list:STShelfMng.stSmpBarcode)
  return &stsmpbarcode_;
}

// -------------------------------------------------------------------

// STFreeShelf

// optional uint32 loca = 1;
inline bool STFreeShelf::has_loca() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STFreeShelf::set_has_loca() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STFreeShelf::clear_has_loca() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STFreeShelf::clear_loca() {
  loca_ = 0u;
  clear_has_loca();
}
inline ::google::protobuf::uint32 STFreeShelf::loca() const {
  // @@protoc_insertion_point(field_get:STFreeShelf.loca)
  return loca_;
}
inline void STFreeShelf::set_loca(::google::protobuf::uint32 value) {
  set_has_loca();
  loca_ = value;
  // @@protoc_insertion_point(field_set:STFreeShelf.loca)
}

// -------------------------------------------------------------------

// STSetShelf

// optional uint32 shelfNum = 1;
inline bool STSetShelf::has_shelfnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STSetShelf::set_has_shelfnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STSetShelf::clear_has_shelfnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STSetShelf::clear_shelfnum() {
  shelfnum_ = 0u;
  clear_has_shelfnum();
}
inline ::google::protobuf::uint32 STSetShelf::shelfnum() const {
  // @@protoc_insertion_point(field_get:STSetShelf.shelfNum)
  return shelfnum_;
}
inline void STSetShelf::set_shelfnum(::google::protobuf::uint32 value) {
  set_has_shelfnum();
  shelfnum_ = value;
  // @@protoc_insertion_point(field_set:STSetShelf.shelfNum)
}

// optional uint32 ulUnit = 2;
inline bool STSetShelf::has_ulunit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STSetShelf::set_has_ulunit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STSetShelf::clear_has_ulunit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STSetShelf::clear_ulunit() {
  ulunit_ = 0u;
  clear_has_ulunit();
}
inline ::google::protobuf::uint32 STSetShelf::ulunit() const {
  // @@protoc_insertion_point(field_get:STSetShelf.ulUnit)
  return ulunit_;
}
inline void STSetShelf::set_ulunit(::google::protobuf::uint32 value) {
  set_has_ulunit();
  ulunit_ = value;
  // @@protoc_insertion_point(field_set:STSetShelf.ulUnit)
}

// -------------------------------------------------------------------

// STNotifState

// optional .MachUnit enUnit = 1;
inline bool STNotifState::has_enunit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STNotifState::set_has_enunit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STNotifState::clear_has_enunit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STNotifState::clear_enunit() {
  enunit_ = 0;
  clear_has_enunit();
}
inline ::MachUnit STNotifState::enunit() const {
  // @@protoc_insertion_point(field_get:STNotifState.enUnit)
  return static_cast< ::MachUnit >(enunit_);
}
inline void STNotifState::set_enunit(::MachUnit value) {
  assert(::MachUnit_IsValid(value));
  set_has_enunit();
  enunit_ = value;
  // @@protoc_insertion_point(field_set:STNotifState.enUnit)
}

// optional uint32 ulLoca = 2;
inline bool STNotifState::has_ulloca() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void STNotifState::set_has_ulloca() {
  _has_bits_[0] |= 0x00000002u;
}
inline void STNotifState::clear_has_ulloca() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void STNotifState::clear_ulloca() {
  ulloca_ = 0u;
  clear_has_ulloca();
}
inline ::google::protobuf::uint32 STNotifState::ulloca() const {
  // @@protoc_insertion_point(field_get:STNotifState.ulLoca)
  return ulloca_;
}
inline void STNotifState::set_ulloca(::google::protobuf::uint32 value) {
  set_has_ulloca();
  ulloca_ = value;
  // @@protoc_insertion_point(field_set:STNotifState.ulLoca)
}

// optional uint32 ulState = 3;
inline bool STNotifState::has_ulstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void STNotifState::set_has_ulstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void STNotifState::clear_has_ulstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void STNotifState::clear_ulstate() {
  ulstate_ = 0u;
  clear_has_ulstate();
}
inline ::google::protobuf::uint32 STNotifState::ulstate() const {
  // @@protoc_insertion_point(field_get:STNotifState.ulState)
  return ulstate_;
}
inline void STNotifState::set_ulstate(::google::protobuf::uint32 value) {
  set_has_ulstate();
  ulstate_ = value;
  // @@protoc_insertion_point(field_set:STNotifState.ulState)
}

// optional uint32 ulShelfNum = 4;
inline bool STNotifState::has_ulshelfnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void STNotifState::set_has_ulshelfnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void STNotifState::clear_has_ulshelfnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void STNotifState::clear_ulshelfnum() {
  ulshelfnum_ = 0u;
  clear_has_ulshelfnum();
}
inline ::google::protobuf::uint32 STNotifState::ulshelfnum() const {
  // @@protoc_insertion_point(field_get:STNotifState.ulShelfNum)
  return ulshelfnum_;
}
inline void STNotifState::set_ulshelfnum(::google::protobuf::uint32 value) {
  set_has_ulshelfnum();
  ulshelfnum_ = value;
  // @@protoc_insertion_point(field_set:STNotifState.ulShelfNum)
}

// -------------------------------------------------------------------

// STTempQuery

// optional uint32 ulSubsysId = 1;
inline bool STTempQuery::has_ulsubsysid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void STTempQuery::set_has_ulsubsysid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void STTempQuery::clear_has_ulsubsysid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void STTempQuery::clear_ulsubsysid() {
  ulsubsysid_ = 0u;
  clear_has_ulsubsysid();
}
inline ::google::protobuf::uint32 STTempQuery::ulsubsysid() const {
  // @@protoc_insertion_point(field_get:STTempQuery.ulSubsysId)
  return ulsubsysid_;
}
inline void STTempQuery::set_ulsubsysid(::google::protobuf::uint32 value) {
  set_has_ulsubsysid();
  ulsubsysid_ = value;
  // @@protoc_insertion_point(field_set:STTempQuery.ulSubsysId)
}

// repeated .STKeyValue temp = 2;
inline int STTempQuery::temp_size() const {
  return temp_.size();
}
inline void STTempQuery::clear_temp() {
  temp_.Clear();
}
inline const ::STKeyValue& STTempQuery::temp(int index) const {
  // @@protoc_insertion_point(field_get:STTempQuery.temp)
  return temp_.Get(index);
}
inline ::STKeyValue* STTempQuery::mutable_temp(int index) {
  // @@protoc_insertion_point(field_mutable:STTempQuery.temp)
  return temp_.Mutable(index);
}
inline ::STKeyValue* STTempQuery::add_temp() {
  // @@protoc_insertion_point(field_add:STTempQuery.temp)
  return temp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::STKeyValue >&
STTempQuery::temp() const {
  // @@protoc_insertion_point(field_list:STTempQuery.temp)
  return temp_;
}
inline ::google::protobuf::RepeatedPtrField< ::STKeyValue >*
STTempQuery::mutable_temp() {
  // @@protoc_insertion_point(field_mutable_list:STTempQuery.temp)
  return &temp_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_upmsg_2eproto__INCLUDED
